{
  "crawl_info": {
    "documentation_url": "https://docs.streamlit.io/develop/api-reference",
    "total_urls_found": 195,
    "urls_scraped": 5,
    "successful_scrapes": 5,
    "failed_scrapes": 0,
    "crawled_at": "2025-10-25 02:01:43"
  },
  "all_urls_found": [
    "https://docs.streamlit.io/develop/api-reference#data-elements",
    "https://docs.streamlit.io/develop/api-reference/configuration/config.toml",
    "https://docs.streamlit.io/develop/api-reference/text",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.feedback",
    "https://docs.streamlit.io/develop/api-reference/status/st.snow",
    "https://docs.streamlit.io/develop/api-reference/charts/st.graphviz_chart",
    "https://docs.streamlit.io/develop/api-reference/text/st.text",
    "https://docs.streamlit.io/develop/api-reference#app-logic-and-configuration",
    "https://docs.streamlit.io/develop/api-reference#chart-elements",
    "https://docs.streamlit.io/develop/api-reference/configuration",
    "https://docs.streamlit.io/develop/api-reference#connections-and-databases",
    "https://docs.streamlit.io/develop/api-reference#api-reference",
    "https://docs.streamlit.io/develop/api-reference/write-magic/st.write",
    "https://docs.streamlit.io/develop/api-reference/status/st.status",
    "https://docs.streamlit.io/get-started/fundamentals",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectbox",
    "https://docs.streamlit.io/develop/api-reference/caching-and-state",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectslider",
    "https://docs.streamlit.io/develop/api-reference/chat",
    "https://docs.streamlit.io/develop/api-reference/app-testing",
    "https://docs.streamlit.io/develop/api-reference/connections/secrets.toml",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.slider",
    "https://docs.streamlit.io/develop/api-reference/status/st.balloons",
    "https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart",
    "https://docs.streamlit.io/develop/api-reference/status/st.progress",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextarea",
    "https://docs.streamlit.io/develop/api-reference/custom-components",
    "https://docs.streamlit.io/develop/api-reference#app-testing",
    "https://docs.streamlit.io/develop/api-reference/media/st.video",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.number_input",
    "https://docs.streamlit.io/develop/api-reference/data/st.dataframe",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeradio",
    "https://docs.streamlit.io/develop/api-reference/status/st.warning",
    "https://docs.streamlit.io/develop/api-reference/custom-components/st.components.v1.html",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.file_uploader",
    "https://docs.streamlit.io/develop/api-reference/text/st.markdown",
    "https://docs.streamlit.io/develop/api-reference/execution-flow/st.fragment",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeblock",
    "https://docs.streamlit.io/develop/api-reference#built-in-connections",
    "https://docs.streamlit.io/get-started/tutorials",
    "https://docs.streamlit.io/develop/api-reference/navigation/st.page",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeslider",
    "https://docs.streamlit.io/develop/api-reference/data",
    "https://docs.streamlit.io/get-started/installation",
    "https://docs.streamlit.io/develop/api-reference/layout/st.columns",
    "https://docs.streamlit.io/develop/api-reference/write-magic/magic",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.selectbox",
    "https://docs.streamlit.io/develop/api-reference/navigation",
    "https://docs.streamlit.io/develop/api-reference#caching-and-state",
    "https://docs.streamlit.io/develop/api-reference/text/st.divider",
    "https://docs.streamlit.io/develop/api-reference/charts",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.color_picker",
    "https://docs.streamlit.io/develop/api-reference/execution-flow",
    "https://docs.streamlit.io/deploy/streamlit-community-cloud",
    "https://docs.streamlit.io/develop/api-reference#display-almost-anything",
    "https://docs.streamlit.io/develop/api-reference/data/st.data_editor",
    "https://docs.streamlit.io/develop/api-reference",
    "https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart",
    "https://docs.streamlit.io/develop/api-reference/connections/st.connection",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.link_button",
    "https://docs.streamlit.io/develop/api-reference/media/st.pdf",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.select_slider",
    "https://docs.streamlit.io/develop/api-reference/status/st.error",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treemultiselect",
    "https://docs.streamlit.io/develop/api-reference/user/st.logout",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetoggle",
    "https://docs.streamlit.io/deploy/concepts",
    "https://docs.streamlit.io/develop/api-reference/layout/st.empty",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.audio_input",
    "https://docs.streamlit.io/develop/api-reference/connections/st.connections.baseconnection",
    "https://docs.streamlit.io/develop/api-reference/user",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeelement",
    "https://docs.streamlit.io/knowledge-base",
    "https://docs.streamlit.io/develop",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treechatinput",
    "https://docs.streamlit.io/develop/api-reference#write-and-magic",
    "https://docs.streamlit.io/develop/api-reference/custom-components/st.components.v1.declare_component",
    "https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_file",
    "https://docs.streamlit.io/develop/api-reference/layout/st.expander",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.text_input",
    "https://docs.streamlit.io/develop/api-reference/layout/st.container",
    "https://docs.streamlit.io/knowledge-base/using-streamlit",
    "https://docs.streamlit.io/develop/api-reference#input-widgets",
    "https://docs.streamlit.io/develop/api-reference#execution-flow",
    "https://docs.streamlit.io/develop/api-reference/user/st.login",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.camera_input",
    "https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource",
    "https://docs.streamlit.io/develop/api-reference/configuration/st.set_option",
    "https://docs.streamlit.io/develop/api-reference/configuration/st.set_page_config",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.date_input",
    "https://docs.streamlit.io/develop/api-reference/navigation/st.navigation",
    "https://docs.streamlit.io/develop/api-reference/caching-and-state/st.context",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecheckbox",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.checkbox",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.multiselect",
    "https://docs.streamlit.io/develop/api-reference/status/st.spinner",
    "https://docs.streamlit.io/develop/api-reference/media/st.image",
    "https://docs.streamlit.io/develop/api-reference/text/st.help",
    "https://docs.streamlit.io/develop/api-reference/execution-flow/st.rerun",
    "https://docs.streamlit.io/develop/api-reference/charts/st.bar_chart",
    "https://docs.streamlit.io/develop/api-reference/navigation/st.switch_page",
    "https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.toggle",
    "https://docs.streamlit.io/develop/api-reference#status-elements",
    "https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_function",
    "https://docs.streamlit.io/develop/api-reference/data/st.metric",
    "https://docs.streamlit.io/develop/api-reference#developer-tools",
    "https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart",
    "https://docs.streamlit.io/develop/api-reference#chat-elements",
    "https://docs.streamlit.io/develop/api-reference/text/st.subheader",
    "https://docs.streamlit.io/develop/api-reference/status/st.toast",
    "https://docs.streamlit.io/develop/api-reference/data/st.json",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.download_button",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treenumberinput",
    "https://docs.streamlit.io/develop/api-reference/status/st.exception",
    "https://docs.streamlit.io/develop/api-reference/caching-and-state/st.query_params",
    "https://docs.streamlit.io/develop/api-reference/charts/st.area_chart",
    "https://docs.streamlit.io/develop/api-reference/layout",
    "https://docs.streamlit.io/develop/api-reference/charts/st.pyplot",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.segmented_control",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.page_link",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.pills",
    "https://docs.streamlit.io/develop/api-reference/execution-flow/st.dialog",
    "https://docs.streamlit.io/develop/api-reference/layout/st.tabs",
    "https://docs.streamlit.io/develop/concepts",
    "https://docs.streamlit.io/develop/api-reference/media/st.audio",
    "https://docs.streamlit.io/develop/api-reference#setup-your-connection",
    "https://docs.streamlit.io/develop/api-reference/configuration/st.get_option",
    "https://docs.streamlit.io/knowledge-base/deploy",
    "https://docs.streamlit.io/develop/api-reference/media/st.logo",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.time_input",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.text_area",
    "https://docs.streamlit.io/develop/api-reference/caching-and-state/st.session_state",
    "https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_data",
    "https://docs.streamlit.io/get-started",
    "https://docs.streamlit.io/develop/api-reference/execution-flow/st.form_submit_button",
    "https://docs.streamlit.io/develop/api-reference/charts/st.altair_chart",
    "https://docs.streamlit.io/develop/api-reference/text/st.html",
    "https://docs.streamlit.io/knowledge-base/dependencies",
    "https://docs.streamlit.io/develop/api-reference/charts/st.line_chart",
    "https://docs.streamlit.io/develop/api-reference/connections/st.secrets",
    "https://docs.streamlit.io/deploy",
    "https://docs.streamlit.io/develop/api-reference#navigation-and-pages",
    "https://docs.streamlit.io/develop/api-reference/status",
    "https://docs.streamlit.io/develop/api-reference/media",
    "https://docs.streamlit.io/develop/api-reference/text/st.caption",
    "https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart",
    "https://docs.streamlit.io/develop/api-reference#configuration",
    "https://docs.streamlit.io/develop/api-reference#layouts-and-containers",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetimeinput",
    "https://docs.streamlit.io/develop/api-reference#secrets-management",
    "https://docs.streamlit.io/",
    "https://docs.streamlit.io/develop/api-reference/cli",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.radio",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextinput",
    "https://docs.streamlit.io/develop/api-reference/write-magic",
    "https://docs.streamlit.io/develop/api-reference/user/st.user",
    "https://docs.streamlit.io/develop/api-reference/connections",
    "https://docs.streamlit.io/deploy/tutorials",
    "https://docs.streamlit.io/develop/api-reference/charts/st.bokeh_chart",
    "https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_string",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treedateinput",
    "https://docs.streamlit.io/develop/api-reference/execution-flow/st.stop",
    "https://docs.streamlit.io/develop/api-reference/custom-components/st.components.v1.iframe",
    "https://docs.streamlit.io/develop/quick-reference",
    "https://docs.streamlit.io/develop/api-reference/data/st.table",
    "https://docs.streamlit.io/develop/api-reference/widgets/st.button",
    "https://docs.streamlit.io/develop/api-reference/status/st.info",
    "https://docs.streamlit.io/develop/api-reference/chat/st.chat_message",
    "https://docs.streamlit.io/develop/api-reference/chat/st.chat_input",
    "https://docs.streamlit.io/develop/api-reference/data/st.column_config",
    "https://docs.streamlit.io/deploy/snowflake",
    "https://docs.streamlit.io/develop/tutorials",
    "https://docs.streamlit.io/develop/api-reference/text/st.title",
    "https://docs.streamlit.io/develop/api-reference/text/st.header",
    "https://docs.streamlit.io/develop/api-reference#media-elements",
    "https://docs.streamlit.io/develop/api-reference/text/st.latex",
    "https://docs.streamlit.io/develop/api-reference/status/st.success",
    "https://docs.streamlit.io/develop/api-reference/charts/st.map",
    "https://docs.streamlit.io/develop/api-reference#text-elements",
    "https://docs.streamlit.io/develop/api-reference/text/st.echo",
    "https://docs.streamlit.io/develop/api-reference/execution-flow/st.form",
    "https://docs.streamlit.io/develop/api-reference/text/st.code",
    "https://docs.streamlit.io/develop/api-reference/layout/st.popover",
    "https://docs.streamlit.io/develop/api-reference/connections/st.connections.snowflakeconnection",
    "https://docs.streamlit.io/develop/api-reference/layout/st.sidebar",
    "https://docs.streamlit.io/develop/api-reference/connections/st.connections.sqlconnection",
    "https://docs.streamlit.io/develop/api-reference/text/st.badge",
    "https://docs.streamlit.io/develop/api-reference#build-your-own-connections",
    "https://docs.streamlit.io/develop/api-reference#custom-components",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treebutton",
    "https://docs.streamlit.io/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecolorpicker",
    "https://docs.streamlit.io/develop/api-reference/widgets",
    "https://docs.streamlit.io/develop/api-reference#authentication-and-user-info",
    "https://docs.streamlit.io/develop/api-reference/write-magic/st.write_stream"
  ],
  "scraped_data": [
    {
      "url": "https://docs.streamlit.io/",
      "content": {
        "type": "html",
        "raw_length": 6052,
        "title": null,
        "text": "Streamlit documentation\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](#Streamlit-documentation)Streamlit documentation\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n[_install\\_desktop_\n#### Setup and installation\nGet set up to start working with Streamlit.\n](/get-started/installation)\n[_dvr_\n#### API reference\nLearn about our APIs, with actionable explanations of specific functions and features.\n](/develop/api-reference)\n[_grid\\_view_\n#### App gallery\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n](https://streamlit.io/gallery)\n## [](#How-to-use-our-docs)How to use our docs\n[_rocket\\_launch_](/get-started)\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n[_description_](/develop)\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n[_cloud_](/deploy)\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n[_school_](/knowledge-base)\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n## What's new\n[_view\\_column_\n#### Multiselect columns\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n#### Color palette\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n#### Bar chart sorting\nYou can sort the bars in `st.bar_chart`.\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n#### Default tab\nYou can specify the default tab in `st.tabs`.\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n#### Chart column colors\nYou can set the color of chart columns.\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n#### Audio sample rate\nYou can configure the sample rate of audio in `st.audio_input`.\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n## Latest blog posts\n[View all updates](https://blog.streamlit.io/)\n## Join the community\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n[View forum](https://discuss.streamlit.io)\n![](/join.png)\n## Other Media\n*\n[\n##### GitHub\nView the Streamlit source code and issue tracker.\n](https://github.com/streamlit)\n*\n[\n##### YouTube\nWatch screencasts made by the Streamlit team and the community.\n](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*\n[\n##### Twitter\nFollow @streamlit on Twitter to keep up with the latest news.\n](https://twitter.com/streamlit)\n*\n[\n##### LinkedIn\nFollow @streamlit on the world's largest professional network.\n](https://www.linkedin.com/company/streamlit)\n*\n[\n##### Newsletter\nSign up for communications from Streamlit.\n](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n[_arrow\\_forward_Next: Get started](/get-started)\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit documentation\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n# [](#Streamlit-documentation)Streamlit documentation\n\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n\n[_install\\_desktop_\n\n#### Setup and installation\n\nGet set up to start working with Streamlit.\n\n\n\n](/get-started/installation)\n\n[_dvr_\n\n#### API reference\n\nLearn about our APIs, with actionable explanations of specific functions and features.\n\n\n\n](/develop/api-reference)\n\n[_grid\\_view_\n\n#### App gallery\n\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n\n\n\n](https://streamlit.io/gallery)\n\n## [](#How-to-use-our-docs)How to use our docs\n\n[_rocket\\_launch_](/get-started)\n\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n\n[_description_](/develop)\n\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n\n[_cloud_](/deploy)\n\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n\n[_school_](/knowledge-base)\n\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n\n## What's new\n\n[_view\\_column_\n\n#### Multiselect columns\n\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n\n#### Color palette\n\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n\n#### Bar chart sorting\n\nYou can sort the bars in `st.bar_chart`.\n\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n\n#### Default tab\n\nYou can specify the default tab in `st.tabs`.\n\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n\n#### Chart column colors\n\nYou can set the color of chart columns.\n\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n\n#### Audio sample rate\n\nYou can configure the sample rate of audio in `st.audio_input`.\n\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n\n## Latest blog posts\n\n[View all updates](https://blog.streamlit.io/)\n\n## Join the community\n\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n\n[View forum](https://discuss.streamlit.io)\n\n![](/join.png)\n\n## Other Media\n\n*   [\n    \n    ##### GitHub\n    \n    View the Streamlit source code and issue tracker.\n    \n    \n    \n    ](https://github.com/streamlit)\n*   [\n    \n    ##### YouTube\n    \n    Watch screencasts made by the Streamlit team and the community.\n    \n    \n    \n    ](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*   [\n    \n    ##### Twitter\n    \n    Follow @streamlit on Twitter to keep up with the latest news.\n    \n    \n    \n    ](https://twitter.com/streamlit)\n*   [\n    \n    ##### LinkedIn\n    \n    Follow @streamlit on the world's largest professional network.\n    \n    \n    \n    ](https://www.linkedin.com/company/streamlit)\n*   [\n    \n    ##### Newsletter\n    \n    Sign up for communications from Streamlit.\n    \n    \n    \n    ](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n\n[_arrow\\_forward_Next: Get started](/get-started)\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382900.5487957
    },
    {
      "url": "https://docs.streamlit.io/deploy/tutorials",
      "content": {
        "type": "html",
        "raw_length": 3905,
        "title": null,
        "text": "Deployment tutorials - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_remove_\n*\n[Docker](/deploy/tutorials/docker)\n*\n[Kubernetes](/deploy/tutorials/kubernetes)\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)/\n*\n[Other platforms](/deploy/tutorials)\n# [](/deploy/tutorials#deployment-tutorials)Deployment tutorials\nThis sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:\n[![screenshot](/images/deploy/streamlit-cloud.png)\n##### Streamlit Community Cloud\n](/deploy/streamlit-community-cloud/get-started)[![screenshot](/images/deploy/docker.png)\n##### Docker\n](/deploy/tutorials/docker)[![screenshot](/images/deploy/kubernetes.png)\n##### Kubernetes\n](/deploy/tutorials/kubernetes)\nWhile we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:\n*\n[How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).\n*\n[Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.\n*\n[Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.\n*\n[Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.\n*\n[Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.\n*\n[Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).\n[_arrow\\_back_Previous: Snowflake](/deploy/snowflake)[_arrow\\_forward_Next: Docker](/deploy/tutorials/docker)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Deployment tutorials - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _remove_\n        \n        *   [Docker](/deploy/tutorials/docker)\n            \n        *   [Kubernetes](/deploy/tutorials/kubernetes)\n            \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)/\n*   [Other platforms](/deploy/tutorials)\n\n# [](/deploy/tutorials#deployment-tutorials)Deployment tutorials\n\nThis sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:\n\n[![screenshot](/images/deploy/streamlit-cloud.png)\n\n##### Streamlit Community Cloud\n\n](/deploy/streamlit-community-cloud/get-started)[![screenshot](/images/deploy/docker.png)\n\n##### Docker\n\n](/deploy/tutorials/docker)[![screenshot](/images/deploy/kubernetes.png)\n\n##### Kubernetes\n\n](/deploy/tutorials/kubernetes)\n\nWhile we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:\n\n*   [How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).\n*   [Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.\n*   [Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.\n*   [Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.\n*   [Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.\n*   [Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).\n\n[_arrow\\_back_Previous: Snowflake](/deploy/snowflake)[_arrow\\_forward_Next: Docker](/deploy/tutorials/docker)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382900.5611558
    },
    {
      "url": "https://docs.streamlit.io/get-started/tutorials",
      "content": {
        "type": "html",
        "raw_length": 3264,
        "title": null,
        "text": "First steps building Streamlit apps - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_remove_\n*\n[Create an app](/get-started/tutorials/create-an-app)\n*\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app)\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Get started](/get-started)/\n*\n[First steps](/get-started/tutorials)\n# [](/get-started/tutorials#first-steps-building-streamlit-apps)First steps building Streamlit apps\nIf you've just read through our [Basic concepts](/get-started/fundamentals/main-concepts) and want to get your hands on Streamlit. Check out these tutorials. Make sure you have [installed Streamlit](/get-started/installation) so you can execute the code yourself.\n[_description_](/get-started/tutorials/create-an-app)\n[Create an app](/get-started/tutorials/create-an-app) uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n[_auto\\_stories_](/get-started/tutorials/create-a-multipage-app)\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app) walks through the easy steps to add pages to your app.\n[_arrow\\_back_Previous: Fundamentals](/get-started/fundamentals)[_arrow\\_forward_Next: Create an app](/get-started/tutorials/create-an-app)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "First steps building Streamlit apps - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _remove_\n        \n        *   [Create an app](/get-started/tutorials/create-an-app)\n            \n        *   [Create a multipage app](/get-started/tutorials/create-a-multipage-app)\n            \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Get started](/get-started)/\n*   [First steps](/get-started/tutorials)\n\n# [](/get-started/tutorials#first-steps-building-streamlit-apps)First steps building Streamlit apps\n\nIf you've just read through our [Basic concepts](/get-started/fundamentals/main-concepts) and want to get your hands on Streamlit. Check out these tutorials. Make sure you have [installed Streamlit](/get-started/installation) so you can execute the code yourself.\n\n[_description_](/get-started/tutorials/create-an-app)\n\n[Create an app](/get-started/tutorials/create-an-app) uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n\n[_auto\\_stories_](/get-started/tutorials/create-a-multipage-app)\n\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app) walks through the easy steps to add pages to your app.\n\n[_arrow\\_back_Previous: Fundamentals](/get-started/fundamentals)[_arrow\\_forward_Next: Create an app](/get-started/tutorials/create-an-app)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382900.5807545
    },
    {
      "url": "https://docs.streamlit.io/develop/tutorials",
      "content": {
        "type": "html",
        "raw_length": 4248,
        "title": null,
        "text": "Tutorials - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_remove_\n*\n[Authentication and personalization](/develop/tutorials/authentication)\n_add_\n*\n[Chat and LLM apps](/develop/tutorials/chat-and-llm-apps)\n_add_\n*\n[Configuration and theming](/develop/tutorials/configuration-and-theming)\n_add_\n*\n[Connect to data sources](/develop/tutorials/databases)\n_add_\n*\n[Elements](/develop/tutorials/elements)\n_add_\n*\n[Execution flow](/develop/tutorials/execution-flow)\n_add_\n*\n[Multipage apps](/develop/tutorials/multipage)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[Tutorials](/develop/tutorials)\n# [](/develop/tutorials#tutorials)Tutorials\nOur tutorials include step-by-step examples of building different types of apps in Streamlit.\n[\n##### Add user authentication\nAdd user authentication with Streamlit's built-in support for OpenID Connect.\n](/develop/tutorials/authentication)[\n##### Chat apps and LLMs\nWork with LLMs and create chat apps.\n](/develop/tutorials/chat-and-llm-apps)[\n##### Configuration and theming\nCustomize the appearance of your app.\n](/develop/tutorials/configuration-and-theming)[\n##### Connect to data sources\nConnect to popular datasources.\n](/develop/tutorials/databases)[\n##### Work with Streamlit's core elements\nWork with core elements like dataframes and charts.\n](/develop/tutorials/elements)[\n##### Use core features to work with Streamlit's execution model\nBuild simple apps and walk through examples to learn about Streamlit's core features and execution model.\n](/develop/tutorials/execution-flow)[\n##### Create multipage apps\nCreate multipage apps, navigation, and flows.\n](/develop/tutorials/multipage)\nWhen you're done developing your app, see our [deployment tutorials](/deploy/tutorials), too!\n[_arrow\\_back_Previous: API reference](/develop/api-reference)[_arrow\\_forward_Next: Authentication and personalization](/develop/tutorials/authentication)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Tutorials - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _remove_\n        \n        *   [Authentication and personalization](/develop/tutorials/authentication)\n            \n            _add_\n            \n        *   [Chat and LLM apps](/develop/tutorials/chat-and-llm-apps)\n            \n            _add_\n            \n        *   [Configuration and theming](/develop/tutorials/configuration-and-theming)\n            \n            _add_\n            \n        *   [Connect to data sources](/develop/tutorials/databases)\n            \n            _add_\n            \n        *   [Elements](/develop/tutorials/elements)\n            \n            _add_\n            \n        *   [Execution flow](/develop/tutorials/execution-flow)\n            \n            _add_\n            \n        *   [Multipage apps](/develop/tutorials/multipage)\n            \n            _add_\n            \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [Tutorials](/develop/tutorials)\n\n# [](/develop/tutorials#tutorials)Tutorials\n\nOur tutorials include step-by-step examples of building different types of apps in Streamlit.\n\n[\n\n##### Add user authentication\n\nAdd user authentication with Streamlit's built-in support for OpenID Connect.\n\n](/develop/tutorials/authentication)[\n\n##### Chat apps and LLMs\n\nWork with LLMs and create chat apps.\n\n](/develop/tutorials/chat-and-llm-apps)[\n\n##### Configuration and theming\n\nCustomize the appearance of your app.\n\n](/develop/tutorials/configuration-and-theming)[\n\n##### Connect to data sources\n\nConnect to popular datasources.\n\n](/develop/tutorials/databases)[\n\n##### Work with Streamlit's core elements\n\nWork with core elements like dataframes and charts.\n\n](/develop/tutorials/elements)[\n\n##### Use core features to work with Streamlit's execution model\n\nBuild simple apps and walk through examples to learn about Streamlit's core features and execution model.\n\n](/develop/tutorials/execution-flow)[\n\n##### Create multipage apps\n\nCreate multipage apps, navigation, and flows.\n\n](/develop/tutorials/multipage)\n\nWhen you're done developing your app, see our [deployment tutorials](/deploy/tutorials), too!\n\n[_arrow\\_back_Previous: API reference](/develop/api-reference)[_arrow\\_forward_Next: Authentication and personalization](/develop/tutorials/authentication)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382900.6595962
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference#data-elements",
      "content": {
        "type": "html",
        "raw_length": 81070,
        "title": null,
        "text": "API Reference - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_add_\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)\n# [](/develop/api-reference#api-reference)API reference\nStreamlit makes it easy for you to visualize, mutate, and share data. The API reference is organized by activity type, like displaying data or optimizing performance. Each section includes methods associated with the activity type, including examples.\nBrowse our API below and click to learn more about any of our available commands! 🎈\n## [](/develop/api-reference#display-almost-anything)Display almost anything\n### [](/develop/api-reference#write-and-magic)Write and magic\n[\n#### st.write\nWrite arguments to the app.\n`st.write(\"Hello **world**!\") st.write(my_data_frame) st.write(my_mpl_figure)`\n](/develop/api-reference/write-magic/st.write)[\n#### st.write\\_stream\nWrite generators or streams to the app with a typewriter effect.\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n](/develop/api-reference/write-magic/st.write_stream)[\n#### Magic\nAny time Streamlit sees either a variable or literal value on its own line, it automatically writes that to your app using `st.write`\n`\"Hello **world**!\" my_data_frame my_mpl_figure`\n](/develop/api-reference/write-magic/magic)\n### [](/develop/api-reference#text-elements)Text elements\n[![screenshot](/images/api/markdown.jpg)\n#### Markdown\nDisplay string formatted as Markdown.\n`st.markdown(\"Hello **world**!\")`\n](/develop/api-reference/text/st.markdown)[![screenshot](/images/api/title.jpg)\n#### Title\nDisplay text in title formatting.\n`st.title(\"The app title\")`\n](/develop/api-reference/text/st.title)[![screenshot](/images/api/header.jpg)\n#### Header\nDisplay text in header formatting.\n`st.header(\"This is a header\")`\n](/develop/api-reference/text/st.header)[![screenshot](/images/api/subheader.jpg)\n#### Subheader\nDisplay text in subheader formatting.\n`st.subheader(\"This is a subheader\")`\n](/develop/api-reference/text/st.subheader)[![screenshot](/images/api/badge.jpg)\n#### Badge\nDisplay a small, colored badge.\n`st.badge(\"New\")`\n](/develop/api-reference/text/st.badge)[![screenshot](/images/api/caption.jpg)\n#### Caption\nDisplay text in small font.\n`st.caption(\"This is written small caption text\")`\n](/develop/api-reference/text/st.caption)[![screenshot](/images/api/code.jpg)\n#### Code block\nDisplay a code block with optional syntax highlighting.\n`st.code(\"a = 1234\")`\n](/develop/api-reference/text/st.code)[![screenshot](/images/api/code.jpg)\n#### Echo\nDisplay some code in the app, then execute it. Useful for tutorials.\n`with st.echo(): st.write('This code will be printed')`\n](/develop/api-reference/text/st.echo)[![screenshot](/images/api/latex.jpg)\n#### LaTeX\nDisplay mathematical expressions formatted as LaTeX.\n`st.latex(\"\\int a x^2 \\,dx\")`\n](/develop/api-reference/text/st.latex)[![screenshot](/images/api/text.jpg)\n#### Preformatted text\nWrite fixed-width and preformatted text.\n`st.text(\"Hello world\")`\n](/develop/api-reference/text/st.text)[![screenshot](/images/api/divider.jpg)\n#### Divider\nDisplay a horizontal rule.\n`st.divider()`\n](/develop/api-reference/text/st.divider)[\n#### Get help\nDisplay object’s doc string, nicely formatted.\n`st.help(st.write) st.help(pd.DataFrame)`\n](/develop/api-reference/text/st.help)[\n#### Render HTML\nRenders HTML strings to your app.\n`st.html(\"Foo bar.\")`\n](/develop/api-reference/text/st.html)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/nlu.jpg)\n#### NLU\n](https://github.com/JohnSnowLabs/nlu)\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n[![screenshot](/images/api/components/extras-mentions.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n[![screenshot](/images/api/components/annotated-text.jpg)\n#### Annotated text\n](https://github.com/tvst/st-annotated-text)\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/nlu.jpg)\n#### NLU\n](https://github.com/JohnSnowLabs/nlu)\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n[![screenshot](/images/api/components/extras-mentions.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n[![screenshot](/images/api/components/annotated-text.jpg)\n#### Annotated text\n](https://github.com/tvst/st-annotated-text)\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/nlu.jpg)\n#### NLU\n](https://github.com/JohnSnowLabs/nlu)\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n[![screenshot](/images/api/components/extras-mentions.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\nNext\n### [](/develop/api-reference#data-elements)Data elements\n[![screenshot](/images/api/dataframe.jpg)\n#### Dataframes\nDisplay a dataframe as an interactive table.\n`st.dataframe(my_data_frame)`\n](/develop/api-reference/data/st.dataframe)[![screenshot](/images/api/data_editor.jpg)\n#### Data editor\nDisplay a data editor widget.\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/column_config.jpg)\n#### Column configuration\nConfigure the display and editing behavior of dataframes and data editors.\n`st.column_config.NumberColumn(\"Price (in USD)\", min_value=0, format=\"$%d\")`\n](/develop/api-reference/data/st.column_config)[![screenshot](/images/api/table.jpg)\n#### Static tables\nDisplay a static table.\n`st.table(my_data_frame)`\n](/develop/api-reference/data/st.table)[![screenshot](/images/api/metric.jpg)\n#### Metrics\nDisplay a metric in big bold font, with an optional indicator of how the metric changed.\n`st.metric(\"My metric\", 42, 2)`\n](/develop/api-reference/data/st.metric)[![screenshot](/images/api/json.jpg)\n#### Dicts and JSON\nDisplay object or string as a pretty-printed JSON string.\n`st.json(my_dict)`\n](/develop/api-reference/data/st.json)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n[![screenshot](/images/api/components/aggrid.jpg)\n#### Streamlit Aggrid\n](https://github.com/PablocFonseca/streamlit-aggrid)\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n#### Pandas Profiling\n](https://github.com/okld/streamlit-pandas-profiling)\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n[![screenshot](/images/api/components/aggrid.jpg)\n#### Streamlit Aggrid\n](https://github.com/PablocFonseca/streamlit-aggrid)\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n#### Pandas Profiling\n](https://github.com/okld/streamlit-pandas-profiling)\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\nNext\n### [](/develop/api-reference#chart-elements)Chart elements\n[![screenshot](/images/api/area_chart.jpg)\n#### Simple area charts\nDisplay an area chart.\n`st.area_chart(my_data_frame)`\n](/develop/api-reference/charts/st.area_chart)[![screenshot](/images/api/bar_chart.jpg)\n#### Simple bar charts\nDisplay a bar chart.\n`st.bar_chart(my_data_frame)`\n](/develop/api-reference/charts/st.bar_chart)[![screenshot](/images/api/line_chart.jpg)\n#### Simple line charts\nDisplay a line chart.\n`st.line_chart(my_data_frame)`\n](/develop/api-reference/charts/st.line_chart)[![screenshot](/images/api/scatter_chart.svg)\n#### Simple scatter charts\nDisplay a line chart.\n`st.scatter_chart(my_data_frame)`\n](/develop/api-reference/charts/st.scatter_chart)[![screenshot](/images/api/map.jpg)\n#### Scatterplots on maps\nDisplay a map with points on it.\n`st.map(my_data_frame)`\n](/develop/api-reference/charts/st.map)[![screenshot](/images/api/pyplot.jpg)\n#### Matplotlib\nDisplay a matplotlib.pyplot figure.\n`st.pyplot(my_mpl_figure)`\n](/develop/api-reference/charts/st.pyplot)[![screenshot](/images/api/vega_lite_chart.jpg)\n#### Altair\nDisplay a chart using the Altair library.\n`st.altair_chart(my_altair_chart)`\n](/develop/api-reference/charts/st.altair_chart)[![screenshot](/images/api/vega_lite_chart.jpg)\n#### Vega-Lite\nDisplay a chart using the Vega-Lite library.\n`st.vega_lite_chart(my_vega_lite_chart)`\n](/develop/api-reference/charts/st.vega_lite_chart)[![screenshot](/images/api/plotly_chart.jpg)\n#### Plotly\nDisplay an interactive Plotly chart.\n`st.plotly_chart(my_plotly_chart)`\n](/develop/api-reference/charts/st.plotly_chart)[![screenshot](/images/api/bokeh_chart.jpg)\n#### Bokeh\nDisplay an interactive Bokeh chart.\n`st.bokeh_chart(my_bokeh_chart)`\n](/develop/api-reference/charts/st.bokeh_chart)[![screenshot](/images/api/pydeck_chart.jpg)\n#### PyDeck\nDisplay a chart using the PyDeck library.\n`st.pydeck_chart(my_pydeck_chart)`\n](/develop/api-reference/charts/st.pydeck_chart)[![screenshot](/images/api/graphviz_chart.jpg)\n#### GraphViz\nDisplay a graph using the dagre-d3 library.\n`st.graphviz_chart(my_graphviz_spec)`\n](/develop/api-reference/charts/st.graphviz_chart)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n[![screenshot](/images/api/components/plost.jpg)\n#### Plost\n](https://github.com/tvst/plost)\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n[![screenshot](/images/api/components/hiplot.jpg)\n#### HiPlot\n](https://github.com/facebookresearch/hiplot)\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n[![screenshot](/images/api/components/echarts.jpg)\n#### ECharts\n](https://github.com/andfanilo/streamlit-echarts)\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/spacy.jpg)\n#### Spacy-Streamlit\n](https://github.com/explosion/spacy-streamlit)\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n[![screenshot](/images/api/components/agraph.jpg)\n#### Streamlit Agraph\n](https://github.com/ChrisDelClea/streamlit-agraph)\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n[![screenshot](/images/api/components/plost.jpg)\n#### Plost\n](https://github.com/tvst/plost)\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n[![screenshot](/images/api/components/hiplot.jpg)\n#### HiPlot\n](https://github.com/facebookresearch/hiplot)\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n[![screenshot](/images/api/components/echarts.jpg)\n#### ECharts\n](https://github.com/andfanilo/streamlit-echarts)\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/spacy.jpg)\n#### Spacy-Streamlit\n](https://github.com/explosion/spacy-streamlit)\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n[![screenshot](/images/api/components/agraph.jpg)\n#### Streamlit Agraph\n](https://github.com/ChrisDelClea/streamlit-agraph)\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\nNext\n### [](/develop/api-reference#input-widgets)Input widgets\n[![screenshot](/images/api/button.svg)\n#### Button\nDisplay a button widget.\n`clicked = st.button(\"Click me\")`\n](/develop/api-reference/widgets/st.button)[![screenshot](/images/api/download_button.svg)\n#### Download button\nDisplay a download button widget.\n`st.download_button(\"Download file\", file)`\n](/develop/api-reference/widgets/st.download_button)[![screenshot](/images/api/form_submit_button.svg)\n#### Form button\nDisplay a form submit button. For use with `st.form`.\n`st.form_submit_button(\"Sign up\")`\n](/develop/api-reference/execution-flow/st.form_submit_button)[![screenshot](/images/api/link_button.svg)\n#### Link button\nDisplay a link button.\n`st.link_button(\"Go to gallery\", url)`\n](/develop/api-reference/widgets/st.link_button)[![screenshot](/images/api/page_link.jpg)\n#### Page link\nDisplay a link to another page in a multipage app.\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n](/develop/api-reference/widgets/st.page_link)[![screenshot](/images/api/checkbox.jpg)\n#### Checkbox\nDisplay a checkbox widget.\n`selected = st.checkbox(\"I agree\")`\n](/develop/api-reference/widgets/st.checkbox)[![screenshot](/images/api/color_picker.jpg)\n#### Color picker\nDisplay a color picker widget.\n`color = st.color_picker(\"Pick a color\")`\n](/develop/api-reference/widgets/st.color_picker)[![screenshot](/images/api/feedback.jpg)\n#### Feedback\nDisplay a rating or sentiment button group.\n`st.feedback(\"stars\")`\n](/develop/api-reference/widgets/st.feedback)[![screenshot](/images/api/multiselect.jpg)\n#### Multiselect\nDisplay a multiselect widget. The multiselect widget starts as empty.\n`choices = st.multiselect(\"Buy\", [\"milk\", \"apples\", \"potatoes\"])`\n](/develop/api-reference/widgets/st.multiselect)[![screenshot](/images/api/pills.jpg)\n#### Pills\nDisplay a pill-button selection widget.\n`st.pills(\"Tags\", [\"Sports\", \"AI\", \"Politics\"])`\n](/develop/api-reference/widgets/st.pills)[![screenshot](/images/api/radio.jpg)\n#### Radio\nDisplay a radio button widget.\n`choice = st.radio(\"Pick one\", [\"cats\", \"dogs\"])`\n](/develop/api-reference/widgets/st.radio)[![screenshot](/images/api/segmented_control.jpg)\n#### Segmented control\nDisplay a segmented-button selection widget.\n`st.segmented_control(\"Filter\", [\"Open\", \"Closed\", \"All\"])`\n](/develop/api-reference/widgets/st.segmented_control)[![screenshot](/images/api/selectbox.jpg)\n#### Selectbox\nDisplay a select widget.\n`choice = st.selectbox(\"Pick one\", [\"cats\", \"dogs\"])`\n](/develop/api-reference/widgets/st.selectbox)[![screenshot](/images/api/select_slider.jpg)\n#### Select-slider\nDisplay a slider widget to select items from a list.\n`size = st.select_slider(\"Pick a size\", [\"S\", \"M\", \"L\"])`\n](/develop/api-reference/widgets/st.select_slider)[![screenshot](/images/api/toggle.jpg)\n#### Toggle\nDisplay a toggle widget.\n`activated = st.toggle(\"Activate\")`\n](/develop/api-reference/widgets/st.toggle)[![screenshot](/images/api/number_input.jpg)\n#### Number input\nDisplay a numeric input widget.\n`choice = st.number_input(\"Pick a number\", 0, 10)`\n](/develop/api-reference/widgets/st.number_input)[![screenshot](/images/api/slider.jpg)\n#### Slider\nDisplay a slider widget.\n`number = st.slider(\"Pick a number\", 0, 100)`\n](/develop/api-reference/widgets/st.slider)[![screenshot](/images/api/date_input.jpg)\n#### Date input\nDisplay a date input widget.\n`date = st.date_input(\"Your birthday\")`\n](/develop/api-reference/widgets/st.date_input)[![screenshot](/images/api/time_input.jpg)\n#### Time input\nDisplay a time input widget.\n`time = st.time_input(\"Meeting time\")`\n](/develop/api-reference/widgets/st.time_input)[![screenshot](/images/api/chat_input.jpg)\n#### Chat input\nDisplay a chat input widget.\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/text_area.jpg)\n#### Text-area\nDisplay a multi-line text input widget.\n`text = st.text_area(\"Text to translate\")`\n](/develop/api-reference/widgets/st.text_area)[![screenshot](/images/api/text_input.jpg)\n#### Text input\nDisplay a single-line text input widget.\n`name = st.text_input(\"First name\")`\n](/develop/api-reference/widgets/st.text_input)[![screenshot](/images/api/audio_input.jpg)\n#### Audio input\nDisplay a widget that allows users to record with their microphone.\n`speech = st.audio_input(\"Record a voice message\")`\n](/develop/api-reference/widgets/st.audio_input)[![screenshot](/images/api/data_editor.jpg)\n#### Data editor\nDisplay a data editor widget.\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/file_uploader.jpg)\n#### File uploader\nDisplay a file uploader widget.\n`data = st.file_uploader(\"Upload a CSV\")`\n](/develop/api-reference/widgets/st.file_uploader)[![screenshot](/images/api/camera_input.jpg)\n#### Camera input\nDisplay a widget that allows users to upload images directly from a camera.\n`image = st.camera_input(\"Take a picture\")`\n](/develop/api-reference/widgets/st.camera_input)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/chat.jpg)\n#### Streamlit Chat\n](https://github.com/AI-Yash/st-chat)\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n[![screenshot](/images/api/components/option-menu.jpg)\n#### Streamlit Option Menu\n](https://github.com/victoryhb/streamlit-option-menu)\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n[![screenshot](/images/api/components/extras-toggle.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n[![screenshot](/images/api/components/elements.jpg)\n#### Streamlit Elements\n](https://github.com/okld/streamlit-elements)\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/stqdm.jpg)\n#### Stqdm\n](https://github.com/Wirg/stqdm)\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n[![screenshot](/images/api/components/timeline.jpg)\n#### Timeline\n](https://github.com/innerdoc/streamlit-timeline)\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n[![screenshot](/images/api/components/camera-live.jpg)\n#### Camera input live\n](https://github.com/blackary/streamlit-camera-input-live)\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n[![screenshot](/images/api/components/ace.jpg)\n#### Streamlit Ace\n](https://github.com/okld/streamlit-ace)\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n`from streamlit_ace import st_ace content = st_ace() content`\n[![screenshot](/images/api/components/chat.jpg)\n#### Streamlit Chat\n](https://github.com/AI-Yash/st-chat)\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n[![screenshot](/images/api/components/option-menu.jpg)\n#### Streamlit Option Menu\n](https://github.com/victoryhb/streamlit-option-menu)\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n[![screenshot](/images/api/components/extras-toggle.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n[![screenshot](/images/api/components/elements.jpg)\n#### Streamlit Elements\n](https://github.com/okld/streamlit-elements)\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/stqdm.jpg)\n#### Stqdm\n](https://github.com/Wirg/stqdm)\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n[![screenshot](/images/api/components/timeline.jpg)\n#### Timeline\n](https://github.com/innerdoc/streamlit-timeline)\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n[![screenshot](/images/api/components/camera-live.jpg)\n#### Camera input live\n](https://github.com/blackary/streamlit-camera-input-live)\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n[![screenshot](/images/api/components/ace.jpg)\n#### Streamlit Ace\n](https://github.com/okld/streamlit-ace)\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n`from streamlit_ace import st_ace content = st_ace() content`\n[![screenshot](/images/api/components/chat.jpg)\n#### Streamlit Chat\n](https://github.com/AI-Yash/st-chat)\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n[![screenshot](/images/api/components/option-menu.jpg)\n#### Streamlit Option Menu\n](https://github.com/victoryhb/streamlit-option-menu)\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n[![screenshot](/images/api/components/extras-toggle.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\nNext\n### [](/develop/api-reference#media-elements)Media elements\n[![screenshot](/images/api/image.jpg)\n#### Image\nDisplay an image or list of images.\n`st.image(numpy_array) st.image(image_bytes) st.image(file) st.image(\"https://example.com/myimage.jpg\")`\n](/develop/api-reference/media/st.image)[![screenshot](/images/api/logo.jpg)\n#### Logo\nDisplay a logo in the upper-left corner of your app and its sidebar.\n`st.logo(\"logo.jpg\")`\n](/develop/api-reference/media/st.logo)[![screenshot](/images/api/pdf.jpg)\n#### PDF\nDisplay a PDF file.\n`st.pdf(\"my_document.pdf\")`\n](/develop/api-reference/media/st.pdf)[![screenshot](/images/api/audio.jpg)\n#### Audio\nDisplay an audio player.\n`st.audio(numpy_array) st.audio(audio_bytes) st.audio(file) st.audio(\"https://example.com/myaudio.mp3\", format=\"audio/mp3\")`\n](/develop/api-reference/media/st.audio)[![screenshot](/images/api/video.jpg)\n#### Video\nDisplay a video player.\n`st.video(numpy_array) st.video(video_bytes) st.video(file) st.video(\"https://example.com/myvideo.mp4\", format=\"video/mp4\")`\n](/develop/api-reference/media/st.video)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/cropper.jpg)\n#### Streamlit Cropper\n](https://github.com/turner-anderson/streamlit-cropper)\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/webrtc.jpg)\n#### Streamlit Webrtc\n](https://github.com/whitphx/streamlit-webrtc)\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/image-comparison.jpg)\n#### Image Comparison\n](https://github.com/fcakyon/streamlit-image-comparison)\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n[![screenshot](/images/api/components/cropper.jpg)\n#### Streamlit Cropper\n](https://github.com/turner-anderson/streamlit-cropper)\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/webrtc.jpg)\n#### Streamlit Webrtc\n](https://github.com/whitphx/streamlit-webrtc)\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/image-comparison.jpg)\n#### Image Comparison\n](https://github.com/fcakyon/streamlit-image-comparison)\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n[![screenshot](/images/api/components/cropper.jpg)\n#### Streamlit Cropper\n](https://github.com/turner-anderson/streamlit-cropper)\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\nNext\n### [](/develop/api-reference#layouts-and-containers)Layouts and containers\n[![screenshot](/images/api/columns.jpg)\n#### Columns\nInsert containers laid out as side-by-side columns.\n`col1, col2 = st.columns(2) col1.write(\"this is column 1\") col2.write(\"this is column 2\")`\n](/develop/api-reference/layout/st.columns)[![screenshot](/images/api/container.jpg)\n#### Container\nInsert a multi-element container.\n`c = st.container() st.write(\"This will show last\") c.write(\"This will show first\") c.write(\"This will show second\")`\n](/develop/api-reference/layout/st.container)[![screenshot](/images/api/dialog.jpg)\n#### Modal dialog\nInsert a modal dialog that can rerun independently from the rest of the script.\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n](/develop/api-reference/execution-flow/st.dialog)[![screenshot](/images/api/empty.jpg)\n#### Empty\nInsert a single-element container.\n`c = st.empty() st.write(\"This will show last\") c.write(\"This will be replaced\") c.write(\"This will show first\")`\n](/develop/api-reference/layout/st.empty)[![screenshot](/images/api/expander.jpg)\n#### Expander\nInsert a multi-element container that can be expanded/collapsed.\n`with st.expander(\"Open to see more\"): st.write(\"This is more content\")`\n](/develop/api-reference/layout/st.expander)[![screenshot](/images/api/popover.svg)\n#### Popover\nInsert a multi-element popover container that can be opened/closed.\n`with st.popover(\"Settings\"): st.checkbox(\"Show completed\")`\n](/develop/api-reference/layout/st.popover)[![screenshot](/images/api/sidebar.jpg)\n#### Sidebar\nDisplay items in a sidebar.\n`st.sidebar.write(\"This lives in the sidebar\") st.sidebar.button(\"Click me!\")`\n](/develop/api-reference/layout/st.sidebar)[![screenshot](/images/api/tabs.jpg)\n#### Tabs\nInsert containers separated into tabs.\n`tab1, tab2 = st.tabs([\"Tab 1\", \"Tab2\"]) tab1.write(\"this is tab 1\") tab2.write(\"this is tab 2\")`\n](/develop/api-reference/layout/st.tabs)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/elements.jpg)\n#### Streamlit Elements\n](https://github.com/okld/streamlit-elements)\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n[![screenshot](/images/api/components/pydantic.jpg)\n#### Pydantic\n](https://github.com/lukasmasuch/streamlit-pydantic)\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n[![screenshot](/images/api/components/pages.jpg)\n#### Streamlit Pages\n](https://github.com/blackary/st_pages)\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n### [](/develop/api-reference#chat-elements)Chat elements\nStreamlit provides a few commands to help you build conversational apps. These chat elements are designed to be used in conjunction with each other, but you can also use them separately.\n`st.chat_message` lets you insert a chat message container into the app so you can display messages from the user or the app. Chat containers can contain other Streamlit elements, including charts, tables, text, and more. `st.chat_input` lets you display a chat input widget so the user can type in a message.\n[![screenshot](/images/api/chat_input.jpg)\n#### Chat input\nDisplay a chat input widget.\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/chat_message.jpg)\n#### Chat message\nInsert a chat message container.\n`import numpy as np with st.chat_message(\"user\"): st.write(\"Hello 👋\") st.line_chart(np.random.randn(30, 3))`\n](/develop/api-reference/chat/st.chat_message)[![screenshot](/images/api/status.jpg)\n#### Status container\nDisplay output of long-running tasks in a container.\n`with st.status('Running'): do_something_slow()`\n](/develop/api-reference/status/st.status)[\n#### st.write\\_stream\nWrite generators or streams to the app with a typewriter effect.\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n](/develop/api-reference/write-magic/st.write_stream)\n### [](/develop/api-reference#status-elements)Status elements\n[![screenshot](/images/api/progress.jpg)\n#### Progress bar\nDisplay a progress bar.\n`for i in range(101): st.progress(i) do_something_slow()`\n](/develop/api-reference/status/st.progress)[![screenshot](/images/api/spinner.jpg)\n#### Spinner\nTemporarily displays a message while executing a block of code.\n`with st.spinner(\"Please wait...\"): do_something_slow()`\n](/develop/api-reference/status/st.spinner)[![screenshot](/images/api/status.jpg)\n#### Status container\nDisplay output of long-running tasks in a container.\n`with st.status('Running'): do_something_slow()`\n](/develop/api-reference/status/st.status)[![screenshot](/images/api/toast.jpg)\n#### Toast\nBriefly displays a toast message in the bottom-right corner.\n`st.toast('Butter!', icon='🧈')`\n](/develop/api-reference/status/st.toast)[![screenshot](/images/api/balloons.jpg)\n#### Balloons\nDisplay celebratory balloons!\n`do_something() # Celebrate when all done! st.balloons()`\n](/develop/api-reference/status/st.balloons)[![screenshot](/images/api/snow.jpg)\n#### Snowflakes\nDisplay celebratory snowflakes!\n`do_something() # Celebrate when all done! st.snow()`\n](/develop/api-reference/status/st.snow)[![screenshot](/images/api/success.jpg)\n#### Success box\nDisplay a success message.\n`st.success(\"Match found!\")`\n](/develop/api-reference/status/st.success)[![screenshot](/images/api/info.jpg)\n#### Info box\nDisplay an informational message.\n`st.info(\"Dataset is updated every day at midnight.\")`\n](/develop/api-reference/status/st.info)[![screenshot](/images/api/warning.jpg)\n#### Warning box\nDisplay warning message.\n`st.warning(\"Unable to fetch image. Skipping...\")`\n](/develop/api-reference/status/st.warning)[![screenshot](/images/api/error.jpg)\n#### Error box\nDisplay error message.\n`st.error(\"We encountered an error\")`\n](/develop/api-reference/status/st.error)[![screenshot](/images/api/exception.jpg)\n#### Exception output\nDisplay an exception.\n`e = RuntimeError(\"This is an exception of type RuntimeError\") st.exception(e)`\n](/develop/api-reference/status/st.exception)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/stqdm.jpg)\n#### Stqdm\n](https://github.com/Wirg/stqdm)\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n[![screenshot](/images/api/components/custom-notification-box.jpg)\n#### Custom notification box\n](https://github.com/Socvest/streamlit-custom-notification-box)\n[A custom notification box with the ability to close it out. Created by](https://github.com/Socvest/streamlit-custom-notification-box) [@Socvest](https://github.com/Socvest).\n`from streamlit_custom_notification_box import custom_notification_box styles = {'material-icons':{'color': 'red'}, 'text-icon-link-close-container': {'box-shadow': '#3896de 0px 4px'}, 'notification-text': {'':''}, 'close-button':{'':''}, 'link':{'':''}} custom_notification_box(icon='info', textDisplay='We are almost done with your registration...', externalLink='more info', url='#', styles=styles, key=\"foo\")`\n[![screenshot](/images/api/components/extras-emojis.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.let_it_rain import rain rain(emoji=\"🎈\", font_size=54, falling_speed=5, animation_length=\"infinite\",)`\n## [](/develop/api-reference#app-logic-and-configuration)App logic and configuration\n### [](/develop/api-reference#authentication-and-user-info)Authentication and user info\n[\n#### Log in a user\n`st.login()` starts an authentication flow with an identity provider.\n`st.login()`\n](/develop/api-reference/user/st.login)[\n#### Log out a user\n`st.logout()` removes a user's identity information.\n`st.logout()`\n](/develop/api-reference/user/st.logout)[\n#### User info\n`st.user` returns information about a logged-in user.\n`if st.user.is_logged_in: st.write(f\"Welcome back, {st.user.name}!\")`\n](/develop/api-reference/user/st.user)\n### [](/develop/api-reference#navigation-and-pages)Navigation and pages\n[![screenshot](/images/api/navigation.jpg)\n#### Navigation\nConfigure the available pages in a multipage app.\n`st.navigation({ \"Your account\" : [log_out, settings], \"Reports\" : [overview, usage], \"Tools\" : [search] })`\n](/develop/api-reference/navigation/st.navigation)[![screenshot](/images/api/page.jpg)\n#### Page\nDefine a page in a multipage app.\n`home = st.Page( \"home.py\", title=\"Home\", icon=\":material/home:\" )`\n](/develop/api-reference/navigation/st.page)[![screenshot](/images/api/page_link.jpg)\n#### Page link\nDisplay a link to another page in a multipage app.\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n](/develop/api-reference/widgets/st.page_link)[\n#### Switch page\nProgrammatically navigates to a specified page.\n`st.switch_page(\"pages/my_page.py\")`\n](/develop/api-reference/navigation/st.switch_page)\n### [](/develop/api-reference#execution-flow)Execution flow\n[![screenshot](/images/api/dialog.jpg)\n#### Modal dialog\nInsert a modal dialog that can rerun independently from the rest of the script.\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n](/develop/api-reference/execution-flow/st.dialog)[\n#### Forms\nCreate a form that batches elements together with a “Submit\" button.\n`with st.form(key='my_form'): name = st.text_input(\"Name\") email = st.text_input(\"Email\") st.form_submit_button(\"Sign up\")`\n](/develop/api-reference/execution-flow/st.form)[\n#### Fragments\nDefine a fragment to rerun independently from the rest of the script.\n`@st.fragment(run_every=\"10s\") def fragment(): df = get_data() st.line_chart(df)`\n](/develop/api-reference/execution-flow/st.fragment)[\n#### Rerun script\nRerun the script immediately.\n`st.rerun()`\n](/develop/api-reference/execution-flow/st.rerun)[\n#### Stop execution\nStops execution immediately.\n`st.stop()`\n](/develop/api-reference/execution-flow/st.stop)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/autorefresh.jpg)\n#### Autorefresh\n](https://github.com/kmcgrady/streamlit-autorefresh)\n[Force a refresh without tying up a script. Created by](https://github.com/kmcgrady/streamlit-autorefresh) [@kmcgrady](https://github.com/kmcgrady).\n`from streamlit_autorefresh import st_autorefresh st_autorefresh(interval=2000, limit=100, key=\"fizzbuzzcounter\")`\n[![screenshot](/images/api/components/pydantic.jpg)\n#### Pydantic\n](https://github.com/lukasmasuch/streamlit-pydantic)\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n[![screenshot](/images/api/components/pages.jpg)\n#### Streamlit Pages\n](https://github.com/blackary/st_pages)\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n### [](/develop/api-reference#caching-and-state)Caching and state\n[\n#### Cache data\nFunction decorator to cache functions that return data (e.g. dataframe transforms, database queries, ML inference).\n`@st.cache_data def long_function(param1, param2): # Perform expensive computation here or # fetch data from the web here return data`\n](/develop/api-reference/caching-and-state/st.cache_data)[\n#### Cache resource\nFunction decorator to cache functions that return global resources (e.g. database connections, ML models).\n`@st.cache_resource def init_model(): # Return a global resource here return pipeline( \"sentiment-analysis\", model=\"distilbert-base-uncased-finetuned-sst-2-english\" )`\n](/develop/api-reference/caching-and-state/st.cache_resource)[\n#### Session state\nSession state is a way to share variables between reruns, for each user session.\n`st.session_state['key'] = value`\n](/develop/api-reference/caching-and-state/st.session_state)[\n#### Query parameters\nGet, set, or clear the query parameters that are shown in the browser's URL bar.\n`st.query_params[key] = value st.query_params.clear()`\n](/develop/api-reference/caching-and-state/st.query_params)[\n#### Context\n`st.context` provides a read-only interface to access cookies, headers, locale, and other browser-session information.\n`st.context.cookies st.context.headers`\n](/develop/api-reference/caching-and-state/st.context)\n### [](/develop/api-reference#connections-and-databases)Connections and databases\n#### [](/develop/api-reference#setup-your-connection)Setup your connection\n[![screenshot](/images/api/connection.svg)\n#### Create a connection\nConnect to a data source or API\n`conn = st.connection('pets_db', type='sql') pet_owners = conn.query('select * from pet_owners') st.dataframe(pet_owners)`\n](/develop/api-reference/connections/st.connection)\n#### [](/develop/api-reference#built-in-connections)Built-in connections\n[![screenshot](/images/api/connections.SnowflakeConnection.svg)\n#### SnowflakeConnection\nA connection to Snowflake.\n`conn = st.connection('snowflake')`\n](/develop/api-reference/connections/st.connections.snowflakeconnection)[![screenshot](/images/api/connections.SQLConnection.svg)\n#### SQLConnection\nA connection to a SQL database using SQLAlchemy.\n`conn = st.connection('sql')`\n](/develop/api-reference/connections/st.connections.sqlconnection)\n#### [](/develop/api-reference#build-your-own-connections)Build your own connections\n[\n#### Connection base class\nBuild your own connection with `BaseConnection`.\n`class MyConnection(BaseConnection[myconn.MyConnection]): def _connect(self, **kwargs) -> MyConnection: return myconn.connect(**self._secrets, **kwargs) def query(self, query): return self._instance.query(query)`\n](/develop/api-reference/connections/st.connections.baseconnection)\n#### [](/develop/api-reference#secrets-management)Secrets management\n[\n#### Secrets singleton\nAccess secrets from a local TOML file.\n`key = st.secrets[\"OpenAI_key\"]`\n](/develop/api-reference/connections/st.secrets)[\n#### Secrets file\nSave your secrets in a per-project or per-profile TOML file.\n`OpenAI_key = \"\"`\n](/develop/api-reference/connections/secrets.toml)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/authenticator.jpg)\n#### Authenticator\n](https://github.com/mkhorasani/Streamlit-Authenticator)\n[A secure authentication module to validate user credentials. Created by](https://github.com/mkhorasani/Streamlit-Authenticator) [@mkhorasani](https://github.com/mkhorasani).\n`import streamlit_authenticator as stauth authenticator = stauth.Authenticate( config['credentials'], config['cookie']['name'], config['cookie']['key'], config['cookie']['expiry_days'], config['preauthorized'])`\n[![screenshot](/images/api/components/localstorage.jpg)\n#### WS localStorage\n](https://github.com/gagangoku/streamlit-ws-localstorage)\n[A simple synchronous way of accessing localStorage from your app. Created by](https://github.com/gagangoku/streamlit-ws-localstorage) [@gagangoku](https://github.com/gagangoku).\n`from streamlit_ws_localstorage import injectWebsocketCode ret = conn.setLocalStorageVal(key='k1', val='v1') st.write('ret: ' + ret)`\n[![screenshot](/images/api/components/auth0.jpg)\n#### Streamlit Auth0\n](https://github.com/conradbez/streamlit-auth0)\n[The fastest way to provide comprehensive login inside Streamlit. Created by](https://github.com/conradbez/streamlit-auth0) [@conradbez](https://github.com/conradbez).\n`from auth0_component import login_button user_info = login_button(clientId, domain = domain) st.write(user_info)`\n### [](/develop/api-reference#custom-components)Custom Components\n[\n#### Declare a component\nCreate and register a custom component.\n`from st.components.v1 import declare_component declare_component( \"custom_slider\", \"/frontend\", )`\n](/develop/api-reference/custom-components/st.components.v1.declare_component)[\n#### HTML\nDisplay an HTML string in an iframe.\n`from st.components.v1 import html html( \"Foo bar.\" )`\n](/develop/api-reference/custom-components/st.components.v1.html)[\n#### iframe\nLoad a remote URL in an iframe.\n`from st.components.v1 import iframe iframe( \"docs.streamlit.io\" )`\n](/develop/api-reference/custom-components/st.components.v1.iframe)\n### [](/develop/api-reference#configuration)Configuration\n[\n#### Configuration file\nConfigures the default settings for your app.\n`your-project/ ├── .streamlit/ │ └── config.toml └── your_app.py`\n](/develop/api-reference/configuration/config.toml)[\n#### Get config option\nRetrieve a single configuration option.\n`st.get_option(\"theme.primaryColor\")`\n](/develop/api-reference/configuration/st.get_option)[\n#### Set config option\nSet a single configuration option. (This is very limited.)\n`st.set_option(\"deprecation.showPyplotGlobalUse\", False)`\n](/develop/api-reference/configuration/st.set_option)[\n#### Set page title, favicon, and more\nConfigures the default settings of the page.\n`st.set_page_config( page_title=\"My app\", page_icon=\":shark:\", )`\n](/develop/api-reference/configuration/st.set_page_config)\n## [](/develop/api-reference#developer-tools)Developer tools\n### [](/develop/api-reference#app-testing)App testing\n[\n#### st.testing.v1.AppTest\n`st.testing.v1.AppTest` simulates a running Streamlit app for testing.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.secrets[\"WORD\"] = \"Foobar\" at.run() assert not at.exception at.text_input(\"word\").input(\"Bazbat\").run() assert at.warning[0].value == \"Try again.\"`\n](/develop/api-reference/app-testing/st.testing.v1.apptest)[\n#### AppTest.from\\_file\n`st.testing.v1.AppTest.from_file` initializes a simulated app from a file.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.run()`\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_file)[\n#### AppTest.from\\_string\n`st.testing.v1.AppTest.from_string` initializes a simulated app from a string.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_string(app_script_as_string) at.run()`\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_string)[\n#### AppTest.from\\_function\n`st.testing.v1.AppTest.from_function` initializes a simulated app from a function.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_function(app_script_as_callable) at.run()`\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_function)[\n#### Block\nA representation of container elements, including:\n*\n`st.chat_message`\n*\n`st.columns`\n*\n`st.sidebar`\n*\n`st.tabs`\n*\nThe main body of the app.\n`# at.sidebar returns a Block at.sidebar.button[0].click().run() assert not at.exception`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeblock)[\n#### Element\nThe base class for representation of all elements, including:\n*\n`st.title`\n*\n`st.header`\n*\n`st.markdown`\n*\n`st.dataframe`\n`# at.title returns a sequence of Title # Title inherits from Element assert at.title[0].value == \"My awesome app\"`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeelement)[\n#### Button\nA representation of `st.button` and `st.form_submit_button`.\n`at.button[0].click().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treebutton)[\n#### ChatInput\nA representation of `st.chat_input`.\n`at.chat_input[0].set_value(\"What is Streamlit?\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treechatinput)[\n#### Checkbox\nA representation of `st.checkbox`.\n`at.checkbox[0].check().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecheckbox)[\n#### ColorPicker\nA representation of `st.color_picker`.\n`at.color_picker[0].pick(\"#FF4B4B\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecolorpicker)[\n#### DateInput\nA representation of `st.date_input`.\n`release_date = datetime.date(2023, 10, 26) at.date_input[0].set_value(release_date).run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treedateinput)[\n#### Multiselect\nA representation of `st.multiselect`.\n`at.multiselect[0].select(\"New York\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treemultiselect)[\n#### NumberInput\nA representation of `st.number_input`.\n`at.number_input[0].increment().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treenumberinput)[\n#### Radio\nA representation of `st.radio`.\n`at.radio[0].set_value(\"New York\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeradio)[\n#### SelectSlider\nA representation of `st.select_slider`.\n`at.select_slider[0].set_range(\"A\",\"C\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectslider)[\n#### Selectbox\nA representation of `st.selectbox`.\n`at.selectbox[0].select(\"New York\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectbox)[\n#### Slider\nA representation of `st.slider`.\n`at.slider[0].set_range(2,5).run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeslider)[\n#### TextArea\nA representation of `st.text_area`.\n`at.text_area[0].input(\"Streamlit is awesome!\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextarea)[\n#### TextInput\nA representation of `st.text_input`.\n`at.text_input[0].input(\"Streamlit\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextinput)[\n#### TimeInput\nA representation of `st.time_input`.\n`at.time_input[0].increment().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetimeinput)[\n#### Toggle\nA representation of `st.toggle`.\n`at.toggle[0].set_value(\"True\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetoggle)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n#### Pandas Profiling\n](https://github.com/okld/streamlit-pandas-profiling)\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n[![screenshot](/images/api/components/ace.jpg)\n#### Streamlit Ace\n](https://github.com/okld/streamlit-ace)\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n`from streamlit_ace import st_ace content = st_ace() content`\n[![screenshot](/images/api/components/analytics.jpg)\n#### Streamlit Analytics\n](https://github.com/jrieke/streamlit-analytics)\n[Track & visualize user interactions with your streamlit app. Created by](https://github.com/jrieke/streamlit-analytics) [@jrieke](https://github.com/jrieke).\n`import streamlit_analytics with streamlit_analytics.track(): st.text_input(\"Write something\")`\n[_arrow\\_back_Previous: Concepts](/develop/concepts)[_arrow\\_forward_Next: Write and magic](/develop/api-reference/write-magic)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2"
      },
      "raw_result": "API Reference - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _add_\n            \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)\n\n# [](/develop/api-reference#api-reference)API reference\n\nStreamlit makes it easy for you to visualize, mutate, and share data. The API reference is organized by activity type, like displaying data or optimizing performance. Each section includes methods associated with the activity type, including examples.\n\nBrowse our API below and click to learn more about any of our available commands! 🎈\n\n## [](/develop/api-reference#display-almost-anything)Display almost anything\n\n### [](/develop/api-reference#write-and-magic)Write and magic\n\n  \n\n[\n\n#### st.write\n\nWrite arguments to the app.\n\n`st.write(\"Hello **world**!\") st.write(my_data_frame) st.write(my_mpl_figure)`\n\n\n\n](/develop/api-reference/write-magic/st.write)[\n\n#### st.write\\_stream\n\nWrite generators or streams to the app with a typewriter effect.\n\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n\n\n\n](/develop/api-reference/write-magic/st.write_stream)[\n\n#### Magic\n\nAny time Streamlit sees either a variable or literal value on its own line, it automatically writes that to your app using `st.write`\n\n`\"Hello **world**!\" my_data_frame my_mpl_figure`\n\n\n\n](/develop/api-reference/write-magic/magic)\n\n### [](/develop/api-reference#text-elements)Text elements\n\n  \n\n[![screenshot](/images/api/markdown.jpg)\n\n#### Markdown\n\nDisplay string formatted as Markdown.\n\n`st.markdown(\"Hello **world**!\")`\n\n\n\n](/develop/api-reference/text/st.markdown)[![screenshot](/images/api/title.jpg)\n\n#### Title\n\nDisplay text in title formatting.\n\n`st.title(\"The app title\")`\n\n\n\n](/develop/api-reference/text/st.title)[![screenshot](/images/api/header.jpg)\n\n#### Header\n\nDisplay text in header formatting.\n\n`st.header(\"This is a header\")`\n\n\n\n](/develop/api-reference/text/st.header)[![screenshot](/images/api/subheader.jpg)\n\n#### Subheader\n\nDisplay text in subheader formatting.\n\n`st.subheader(\"This is a subheader\")`\n\n\n\n](/develop/api-reference/text/st.subheader)[![screenshot](/images/api/badge.jpg)\n\n#### Badge\n\nDisplay a small, colored badge.\n\n`st.badge(\"New\")`\n\n\n\n](/develop/api-reference/text/st.badge)[![screenshot](/images/api/caption.jpg)\n\n#### Caption\n\nDisplay text in small font.\n\n`st.caption(\"This is written small caption text\")`\n\n\n\n](/develop/api-reference/text/st.caption)[![screenshot](/images/api/code.jpg)\n\n#### Code block\n\nDisplay a code block with optional syntax highlighting.\n\n`st.code(\"a = 1234\")`\n\n\n\n](/develop/api-reference/text/st.code)[![screenshot](/images/api/code.jpg)\n\n#### Echo\n\nDisplay some code in the app, then execute it. Useful for tutorials.\n\n`with st.echo(): st.write('This code will be printed')`\n\n\n\n](/develop/api-reference/text/st.echo)[![screenshot](/images/api/latex.jpg)\n\n#### LaTeX\n\nDisplay mathematical expressions formatted as LaTeX.\n\n`st.latex(\"\\int a x^2 \\,dx\")`\n\n\n\n](/develop/api-reference/text/st.latex)[![screenshot](/images/api/text.jpg)\n\n#### Preformatted text\n\nWrite fixed-width and preformatted text.\n\n`st.text(\"Hello world\")`\n\n\n\n](/develop/api-reference/text/st.text)[![screenshot](/images/api/divider.jpg)\n\n#### Divider\n\nDisplay a horizontal rule.\n\n`st.divider()`\n\n\n\n](/develop/api-reference/text/st.divider)[\n\n#### Get help\n\nDisplay object’s doc string, nicely formatted.\n\n`st.help(st.write) st.help(pd.DataFrame)`\n\n\n\n](/develop/api-reference/text/st.help)[\n\n#### Render HTML\n\nRenders HTML strings to your app.\n\n`st.html(\"<p>Foo bar.</p>\")`\n\n\n\n](/develop/api-reference/text/st.html)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/nlu.jpg)\n\n#### NLU\n\n](https://github.com/JohnSnowLabs/nlu)\n\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n\n[![screenshot](/images/api/components/extras-mentions.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n\n[![screenshot](/images/api/components/annotated-text.jpg)\n\n#### Annotated text\n\n](https://github.com/tvst/st-annotated-text)\n\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/nlu.jpg)\n\n#### NLU\n\n](https://github.com/JohnSnowLabs/nlu)\n\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n\n[![screenshot](/images/api/components/extras-mentions.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n\n[![screenshot](/images/api/components/annotated-text.jpg)\n\n#### Annotated text\n\n](https://github.com/tvst/st-annotated-text)\n\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/nlu.jpg)\n\n#### NLU\n\n](https://github.com/JohnSnowLabs/nlu)\n\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n\n[![screenshot](/images/api/components/extras-mentions.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n\nNext\n\n### [](/develop/api-reference#data-elements)Data elements\n\n  \n\n[![screenshot](/images/api/dataframe.jpg)\n\n#### Dataframes\n\nDisplay a dataframe as an interactive table.\n\n`st.dataframe(my_data_frame)`\n\n\n\n](/develop/api-reference/data/st.dataframe)[![screenshot](/images/api/data_editor.jpg)\n\n#### Data editor\n\nDisplay a data editor widget.\n\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n\n\n\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/column_config.jpg)\n\n#### Column configuration\n\nConfigure the display and editing behavior of dataframes and data editors.\n\n`st.column_config.NumberColumn(\"Price (in USD)\", min_value=0, format=\"$%d\")`\n\n\n\n](/develop/api-reference/data/st.column_config)[![screenshot](/images/api/table.jpg)\n\n#### Static tables\n\nDisplay a static table.\n\n`st.table(my_data_frame)`\n\n\n\n](/develop/api-reference/data/st.table)[![screenshot](/images/api/metric.jpg)\n\n#### Metrics\n\nDisplay a metric in big bold font, with an optional indicator of how the metric changed.\n\n`st.metric(\"My metric\", 42, 2)`\n\n\n\n](/develop/api-reference/data/st.metric)[![screenshot](/images/api/json.jpg)\n\n#### Dicts and JSON\n\nDisplay object or string as a pretty-printed JSON string.\n\n`st.json(my_dict)`\n\n\n\n](/develop/api-reference/data/st.json)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n\n[![screenshot](/images/api/components/aggrid.jpg)\n\n#### Streamlit Aggrid\n\n](https://github.com/PablocFonseca/streamlit-aggrid)\n\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n\n#### Pandas Profiling\n\n](https://github.com/okld/streamlit-pandas-profiling)\n\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n\n[![screenshot](/images/api/components/aggrid.jpg)\n\n#### Streamlit Aggrid\n\n](https://github.com/PablocFonseca/streamlit-aggrid)\n\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n\n#### Pandas Profiling\n\n](https://github.com/okld/streamlit-pandas-profiling)\n\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n\nNext\n\n### [](/develop/api-reference#chart-elements)Chart elements\n\n  \n\n[![screenshot](/images/api/area_chart.jpg)\n\n#### Simple area charts\n\nDisplay an area chart.\n\n`st.area_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.area_chart)[![screenshot](/images/api/bar_chart.jpg)\n\n#### Simple bar charts\n\nDisplay a bar chart.\n\n`st.bar_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.bar_chart)[![screenshot](/images/api/line_chart.jpg)\n\n#### Simple line charts\n\nDisplay a line chart.\n\n`st.line_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.line_chart)[![screenshot](/images/api/scatter_chart.svg)\n\n#### Simple scatter charts\n\nDisplay a line chart.\n\n`st.scatter_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.scatter_chart)[![screenshot](/images/api/map.jpg)\n\n#### Scatterplots on maps\n\nDisplay a map with points on it.\n\n`st.map(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.map)[![screenshot](/images/api/pyplot.jpg)\n\n#### Matplotlib\n\nDisplay a matplotlib.pyplot figure.\n\n`st.pyplot(my_mpl_figure)`\n\n\n\n](/develop/api-reference/charts/st.pyplot)[![screenshot](/images/api/vega_lite_chart.jpg)\n\n#### Altair\n\nDisplay a chart using the Altair library.\n\n`st.altair_chart(my_altair_chart)`\n\n\n\n](/develop/api-reference/charts/st.altair_chart)[![screenshot](/images/api/vega_lite_chart.jpg)\n\n#### Vega-Lite\n\nDisplay a chart using the Vega-Lite library.\n\n`st.vega_lite_chart(my_vega_lite_chart)`\n\n\n\n](/develop/api-reference/charts/st.vega_lite_chart)[![screenshot](/images/api/plotly_chart.jpg)\n\n#### Plotly\n\nDisplay an interactive Plotly chart.\n\n`st.plotly_chart(my_plotly_chart)`\n\n\n\n](/develop/api-reference/charts/st.plotly_chart)[![screenshot](/images/api/bokeh_chart.jpg)\n\n#### Bokeh\n\nDisplay an interactive Bokeh chart.\n\n`st.bokeh_chart(my_bokeh_chart)`\n\n\n\n](/develop/api-reference/charts/st.bokeh_chart)[![screenshot](/images/api/pydeck_chart.jpg)\n\n#### PyDeck\n\nDisplay a chart using the PyDeck library.\n\n`st.pydeck_chart(my_pydeck_chart)`\n\n\n\n](/develop/api-reference/charts/st.pydeck_chart)[![screenshot](/images/api/graphviz_chart.jpg)\n\n#### GraphViz\n\nDisplay a graph using the dagre-d3 library.\n\n`st.graphviz_chart(my_graphviz_spec)`\n\n\n\n](/develop/api-reference/charts/st.graphviz_chart)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n\n[![screenshot](/images/api/components/plost.jpg)\n\n#### Plost\n\n](https://github.com/tvst/plost)\n\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n\n[![screenshot](/images/api/components/hiplot.jpg)\n\n#### HiPlot\n\n](https://github.com/facebookresearch/hiplot)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n\n[![screenshot](/images/api/components/echarts.jpg)\n\n#### ECharts\n\n](https://github.com/andfanilo/streamlit-echarts)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/spacy.jpg)\n\n#### Spacy-Streamlit\n\n](https://github.com/explosion/spacy-streamlit)\n\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n\n[![screenshot](/images/api/components/agraph.jpg)\n\n#### Streamlit Agraph\n\n](https://github.com/ChrisDelClea/streamlit-agraph)\n\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n\n[![screenshot](/images/api/components/plost.jpg)\n\n#### Plost\n\n](https://github.com/tvst/plost)\n\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n\n[![screenshot](/images/api/components/hiplot.jpg)\n\n#### HiPlot\n\n](https://github.com/facebookresearch/hiplot)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n\n[![screenshot](/images/api/components/echarts.jpg)\n\n#### ECharts\n\n](https://github.com/andfanilo/streamlit-echarts)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/spacy.jpg)\n\n#### Spacy-Streamlit\n\n](https://github.com/explosion/spacy-streamlit)\n\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n\n[![screenshot](/images/api/components/agraph.jpg)\n\n#### Streamlit Agraph\n\n](https://github.com/ChrisDelClea/streamlit-agraph)\n\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n\nNext\n\n### [](/develop/api-reference#input-widgets)Input widgets\n\n  \n\n[![screenshot](/images/api/button.svg)\n\n#### Button\n\nDisplay a button widget.\n\n`clicked = st.button(\"Click me\")`\n\n\n\n](/develop/api-reference/widgets/st.button)[![screenshot](/images/api/download_button.svg)\n\n#### Download button\n\nDisplay a download button widget.\n\n`st.download_button(\"Download file\", file)`\n\n\n\n](/develop/api-reference/widgets/st.download_button)[![screenshot](/images/api/form_submit_button.svg)\n\n#### Form button\n\nDisplay a form submit button. For use with `st.form`.\n\n`st.form_submit_button(\"Sign up\")`\n\n\n\n](/develop/api-reference/execution-flow/st.form_submit_button)[![screenshot](/images/api/link_button.svg)\n\n#### Link button\n\nDisplay a link button.\n\n`st.link_button(\"Go to gallery\", url)`\n\n\n\n](/develop/api-reference/widgets/st.link_button)[![screenshot](/images/api/page_link.jpg)\n\n#### Page link\n\nDisplay a link to another page in a multipage app.\n\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n\n\n\n](/develop/api-reference/widgets/st.page_link)[![screenshot](/images/api/checkbox.jpg)\n\n#### Checkbox\n\nDisplay a checkbox widget.\n\n`selected = st.checkbox(\"I agree\")`\n\n\n\n](/develop/api-reference/widgets/st.checkbox)[![screenshot](/images/api/color_picker.jpg)\n\n#### Color picker\n\nDisplay a color picker widget.\n\n`color = st.color_picker(\"Pick a color\")`\n\n\n\n](/develop/api-reference/widgets/st.color_picker)[![screenshot](/images/api/feedback.jpg)\n\n#### Feedback\n\nDisplay a rating or sentiment button group.\n\n`st.feedback(\"stars\")`\n\n\n\n](/develop/api-reference/widgets/st.feedback)[![screenshot](/images/api/multiselect.jpg)\n\n#### Multiselect\n\nDisplay a multiselect widget. The multiselect widget starts as empty.\n\n`choices = st.multiselect(\"Buy\", [\"milk\", \"apples\", \"potatoes\"])`\n\n\n\n](/develop/api-reference/widgets/st.multiselect)[![screenshot](/images/api/pills.jpg)\n\n#### Pills\n\nDisplay a pill-button selection widget.\n\n`st.pills(\"Tags\", [\"Sports\", \"AI\", \"Politics\"])`\n\n\n\n](/develop/api-reference/widgets/st.pills)[![screenshot](/images/api/radio.jpg)\n\n#### Radio\n\nDisplay a radio button widget.\n\n`choice = st.radio(\"Pick one\", [\"cats\", \"dogs\"])`\n\n\n\n](/develop/api-reference/widgets/st.radio)[![screenshot](/images/api/segmented_control.jpg)\n\n#### Segmented control\n\nDisplay a segmented-button selection widget.\n\n`st.segmented_control(\"Filter\", [\"Open\", \"Closed\", \"All\"])`\n\n\n\n](/develop/api-reference/widgets/st.segmented_control)[![screenshot](/images/api/selectbox.jpg)\n\n#### Selectbox\n\nDisplay a select widget.\n\n`choice = st.selectbox(\"Pick one\", [\"cats\", \"dogs\"])`\n\n\n\n](/develop/api-reference/widgets/st.selectbox)[![screenshot](/images/api/select_slider.jpg)\n\n#### Select-slider\n\nDisplay a slider widget to select items from a list.\n\n`size = st.select_slider(\"Pick a size\", [\"S\", \"M\", \"L\"])`\n\n\n\n](/develop/api-reference/widgets/st.select_slider)[![screenshot](/images/api/toggle.jpg)\n\n#### Toggle\n\nDisplay a toggle widget.\n\n`activated = st.toggle(\"Activate\")`\n\n\n\n](/develop/api-reference/widgets/st.toggle)[![screenshot](/images/api/number_input.jpg)\n\n#### Number input\n\nDisplay a numeric input widget.\n\n`choice = st.number_input(\"Pick a number\", 0, 10)`\n\n\n\n](/develop/api-reference/widgets/st.number_input)[![screenshot](/images/api/slider.jpg)\n\n#### Slider\n\nDisplay a slider widget.\n\n`number = st.slider(\"Pick a number\", 0, 100)`\n\n\n\n](/develop/api-reference/widgets/st.slider)[![screenshot](/images/api/date_input.jpg)\n\n#### Date input\n\nDisplay a date input widget.\n\n`date = st.date_input(\"Your birthday\")`\n\n\n\n](/develop/api-reference/widgets/st.date_input)[![screenshot](/images/api/time_input.jpg)\n\n#### Time input\n\nDisplay a time input widget.\n\n`time = st.time_input(\"Meeting time\")`\n\n\n\n](/develop/api-reference/widgets/st.time_input)[![screenshot](/images/api/chat_input.jpg)\n\n#### Chat input\n\nDisplay a chat input widget.\n\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n\n\n\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/text_area.jpg)\n\n#### Text-area\n\nDisplay a multi-line text input widget.\n\n`text = st.text_area(\"Text to translate\")`\n\n\n\n](/develop/api-reference/widgets/st.text_area)[![screenshot](/images/api/text_input.jpg)\n\n#### Text input\n\nDisplay a single-line text input widget.\n\n`name = st.text_input(\"First name\")`\n\n\n\n](/develop/api-reference/widgets/st.text_input)[![screenshot](/images/api/audio_input.jpg)\n\n#### Audio input\n\nDisplay a widget that allows users to record with their microphone.\n\n`speech = st.audio_input(\"Record a voice message\")`\n\n\n\n](/develop/api-reference/widgets/st.audio_input)[![screenshot](/images/api/data_editor.jpg)\n\n#### Data editor\n\nDisplay a data editor widget.\n\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n\n\n\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/file_uploader.jpg)\n\n#### File uploader\n\nDisplay a file uploader widget.\n\n`data = st.file_uploader(\"Upload a CSV\")`\n\n\n\n](/develop/api-reference/widgets/st.file_uploader)[![screenshot](/images/api/camera_input.jpg)\n\n#### Camera input\n\nDisplay a widget that allows users to upload images directly from a camera.\n\n`image = st.camera_input(\"Take a picture\")`\n\n\n\n](/develop/api-reference/widgets/st.camera_input)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/chat.jpg)\n\n#### Streamlit Chat\n\n](https://github.com/AI-Yash/st-chat)\n\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n\n[![screenshot](/images/api/components/option-menu.jpg)\n\n#### Streamlit Option Menu\n\n](https://github.com/victoryhb/streamlit-option-menu)\n\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n\n[![screenshot](/images/api/components/extras-toggle.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n\n[![screenshot](/images/api/components/elements.jpg)\n\n#### Streamlit Elements\n\n](https://github.com/okld/streamlit-elements)\n\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/stqdm.jpg)\n\n#### Stqdm\n\n](https://github.com/Wirg/stqdm)\n\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n\n[![screenshot](/images/api/components/timeline.jpg)\n\n#### Timeline\n\n](https://github.com/innerdoc/streamlit-timeline)\n\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n\n[![screenshot](/images/api/components/camera-live.jpg)\n\n#### Camera input live\n\n](https://github.com/blackary/streamlit-camera-input-live)\n\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n\n[![screenshot](/images/api/components/ace.jpg)\n\n#### Streamlit Ace\n\n](https://github.com/okld/streamlit-ace)\n\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n\n`from streamlit_ace import st_ace content = st_ace() content`\n\n[![screenshot](/images/api/components/chat.jpg)\n\n#### Streamlit Chat\n\n](https://github.com/AI-Yash/st-chat)\n\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n\n[![screenshot](/images/api/components/option-menu.jpg)\n\n#### Streamlit Option Menu\n\n](https://github.com/victoryhb/streamlit-option-menu)\n\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n\n[![screenshot](/images/api/components/extras-toggle.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n\n[![screenshot](/images/api/components/elements.jpg)\n\n#### Streamlit Elements\n\n](https://github.com/okld/streamlit-elements)\n\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/stqdm.jpg)\n\n#### Stqdm\n\n](https://github.com/Wirg/stqdm)\n\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n\n[![screenshot](/images/api/components/timeline.jpg)\n\n#### Timeline\n\n](https://github.com/innerdoc/streamlit-timeline)\n\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n\n[![screenshot](/images/api/components/camera-live.jpg)\n\n#### Camera input live\n\n](https://github.com/blackary/streamlit-camera-input-live)\n\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n\n[![screenshot](/images/api/components/ace.jpg)\n\n#### Streamlit Ace\n\n](https://github.com/okld/streamlit-ace)\n\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n\n`from streamlit_ace import st_ace content = st_ace() content`\n\n[![screenshot](/images/api/components/chat.jpg)\n\n#### Streamlit Chat\n\n](https://github.com/AI-Yash/st-chat)\n\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n\n[![screenshot](/images/api/components/option-menu.jpg)\n\n#### Streamlit Option Menu\n\n](https://github.com/victoryhb/streamlit-option-menu)\n\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n\n[![screenshot](/images/api/components/extras-toggle.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n\nNext\n\n### [](/develop/api-reference#media-elements)Media elements\n\n  \n\n[![screenshot](/images/api/image.jpg)\n\n#### Image\n\nDisplay an image or list of images.\n\n`st.image(numpy_array) st.image(image_bytes) st.image(file) st.image(\"https://example.com/myimage.jpg\")`\n\n\n\n](/develop/api-reference/media/st.image)[![screenshot](/images/api/logo.jpg)\n\n#### Logo\n\nDisplay a logo in the upper-left corner of your app and its sidebar.\n\n`st.logo(\"logo.jpg\")`\n\n\n\n](/develop/api-reference/media/st.logo)[![screenshot](/images/api/pdf.jpg)\n\n#### PDF\n\nDisplay a PDF file.\n\n`st.pdf(\"my_document.pdf\")`\n\n\n\n](/develop/api-reference/media/st.pdf)[![screenshot](/images/api/audio.jpg)\n\n#### Audio\n\nDisplay an audio player.\n\n`st.audio(numpy_array) st.audio(audio_bytes) st.audio(file) st.audio(\"https://example.com/myaudio.mp3\", format=\"audio/mp3\")`\n\n\n\n](/develop/api-reference/media/st.audio)[![screenshot](/images/api/video.jpg)\n\n#### Video\n\nDisplay a video player.\n\n`st.video(numpy_array) st.video(video_bytes) st.video(file) st.video(\"https://example.com/myvideo.mp4\", format=\"video/mp4\")`\n\n\n\n](/develop/api-reference/media/st.video)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/cropper.jpg)\n\n#### Streamlit Cropper\n\n](https://github.com/turner-anderson/streamlit-cropper)\n\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/webrtc.jpg)\n\n#### Streamlit Webrtc\n\n](https://github.com/whitphx/streamlit-webrtc)\n\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/image-comparison.jpg)\n\n#### Image Comparison\n\n](https://github.com/fcakyon/streamlit-image-comparison)\n\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n\n[![screenshot](/images/api/components/cropper.jpg)\n\n#### Streamlit Cropper\n\n](https://github.com/turner-anderson/streamlit-cropper)\n\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/webrtc.jpg)\n\n#### Streamlit Webrtc\n\n](https://github.com/whitphx/streamlit-webrtc)\n\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/image-comparison.jpg)\n\n#### Image Comparison\n\n](https://github.com/fcakyon/streamlit-image-comparison)\n\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n\n[![screenshot](/images/api/components/cropper.jpg)\n\n#### Streamlit Cropper\n\n](https://github.com/turner-anderson/streamlit-cropper)\n\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\nNext\n\n### [](/develop/api-reference#layouts-and-containers)Layouts and containers\n\n  \n\n[![screenshot](/images/api/columns.jpg)\n\n#### Columns\n\nInsert containers laid out as side-by-side columns.\n\n`col1, col2 = st.columns(2) col1.write(\"this is column 1\") col2.write(\"this is column 2\")`\n\n\n\n](/develop/api-reference/layout/st.columns)[![screenshot](/images/api/container.jpg)\n\n#### Container\n\nInsert a multi-element container.\n\n`c = st.container() st.write(\"This will show last\") c.write(\"This will show first\") c.write(\"This will show second\")`\n\n\n\n](/develop/api-reference/layout/st.container)[![screenshot](/images/api/dialog.jpg)\n\n#### Modal dialog\n\nInsert a modal dialog that can rerun independently from the rest of the script.\n\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n\n\n\n](/develop/api-reference/execution-flow/st.dialog)[![screenshot](/images/api/empty.jpg)\n\n#### Empty\n\nInsert a single-element container.\n\n`c = st.empty() st.write(\"This will show last\") c.write(\"This will be replaced\") c.write(\"This will show first\")`\n\n\n\n](/develop/api-reference/layout/st.empty)[![screenshot](/images/api/expander.jpg)\n\n#### Expander\n\nInsert a multi-element container that can be expanded/collapsed.\n\n`with st.expander(\"Open to see more\"): st.write(\"This is more content\")`\n\n\n\n](/develop/api-reference/layout/st.expander)[![screenshot](/images/api/popover.svg)\n\n#### Popover\n\nInsert a multi-element popover container that can be opened/closed.\n\n`with st.popover(\"Settings\"): st.checkbox(\"Show completed\")`\n\n\n\n](/develop/api-reference/layout/st.popover)[![screenshot](/images/api/sidebar.jpg)\n\n#### Sidebar\n\nDisplay items in a sidebar.\n\n`st.sidebar.write(\"This lives in the sidebar\") st.sidebar.button(\"Click me!\")`\n\n\n\n](/develop/api-reference/layout/st.sidebar)[![screenshot](/images/api/tabs.jpg)\n\n#### Tabs\n\nInsert containers separated into tabs.\n\n`tab1, tab2 = st.tabs([\"Tab 1\", \"Tab2\"]) tab1.write(\"this is tab 1\") tab2.write(\"this is tab 2\")`\n\n\n\n](/develop/api-reference/layout/st.tabs)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/elements.jpg)\n\n#### Streamlit Elements\n\n](https://github.com/okld/streamlit-elements)\n\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n\n[![screenshot](/images/api/components/pydantic.jpg)\n\n#### Pydantic\n\n](https://github.com/lukasmasuch/streamlit-pydantic)\n\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n\n[![screenshot](/images/api/components/pages.jpg)\n\n#### Streamlit Pages\n\n](https://github.com/blackary/st_pages)\n\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n\n### [](/develop/api-reference#chat-elements)Chat elements\n\n  \n\nStreamlit provides a few commands to help you build conversational apps. These chat elements are designed to be used in conjunction with each other, but you can also use them separately.\n\n`st.chat_message` lets you insert a chat message container into the app so you can display messages from the user or the app. Chat containers can contain other Streamlit elements, including charts, tables, text, and more. `st.chat_input` lets you display a chat input widget so the user can type in a message.\n\n[![screenshot](/images/api/chat_input.jpg)\n\n#### Chat input\n\nDisplay a chat input widget.\n\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n\n\n\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/chat_message.jpg)\n\n#### Chat message\n\nInsert a chat message container.\n\n`import numpy as np with st.chat_message(\"user\"): st.write(\"Hello 👋\") st.line_chart(np.random.randn(30, 3))`\n\n\n\n](/develop/api-reference/chat/st.chat_message)[![screenshot](/images/api/status.jpg)\n\n#### Status container\n\nDisplay output of long-running tasks in a container.\n\n`with st.status('Running'): do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.status)[\n\n#### st.write\\_stream\n\nWrite generators or streams to the app with a typewriter effect.\n\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n\n\n\n](/develop/api-reference/write-magic/st.write_stream)\n\n### [](/develop/api-reference#status-elements)Status elements\n\n  \n\n[![screenshot](/images/api/progress.jpg)\n\n#### Progress bar\n\nDisplay a progress bar.\n\n`for i in range(101): st.progress(i) do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.progress)[![screenshot](/images/api/spinner.jpg)\n\n#### Spinner\n\nTemporarily displays a message while executing a block of code.\n\n`with st.spinner(\"Please wait...\"): do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.spinner)[![screenshot](/images/api/status.jpg)\n\n#### Status container\n\nDisplay output of long-running tasks in a container.\n\n`with st.status('Running'): do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.status)[![screenshot](/images/api/toast.jpg)\n\n#### Toast\n\nBriefly displays a toast message in the bottom-right corner.\n\n`st.toast('Butter!', icon='🧈')`\n\n\n\n](/develop/api-reference/status/st.toast)[![screenshot](/images/api/balloons.jpg)\n\n#### Balloons\n\nDisplay celebratory balloons!\n\n`do_something() # Celebrate when all done! st.balloons()`\n\n\n\n](/develop/api-reference/status/st.balloons)[![screenshot](/images/api/snow.jpg)\n\n#### Snowflakes\n\nDisplay celebratory snowflakes!\n\n`do_something() # Celebrate when all done! st.snow()`\n\n\n\n](/develop/api-reference/status/st.snow)[![screenshot](/images/api/success.jpg)\n\n#### Success box\n\nDisplay a success message.\n\n`st.success(\"Match found!\")`\n\n\n\n](/develop/api-reference/status/st.success)[![screenshot](/images/api/info.jpg)\n\n#### Info box\n\nDisplay an informational message.\n\n`st.info(\"Dataset is updated every day at midnight.\")`\n\n\n\n](/develop/api-reference/status/st.info)[![screenshot](/images/api/warning.jpg)\n\n#### Warning box\n\nDisplay warning message.\n\n`st.warning(\"Unable to fetch image. Skipping...\")`\n\n\n\n](/develop/api-reference/status/st.warning)[![screenshot](/images/api/error.jpg)\n\n#### Error box\n\nDisplay error message.\n\n`st.error(\"We encountered an error\")`\n\n\n\n](/develop/api-reference/status/st.error)[![screenshot](/images/api/exception.jpg)\n\n#### Exception output\n\nDisplay an exception.\n\n`e = RuntimeError(\"This is an exception of type RuntimeError\") st.exception(e)`\n\n\n\n](/develop/api-reference/status/st.exception)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/stqdm.jpg)\n\n#### Stqdm\n\n](https://github.com/Wirg/stqdm)\n\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n\n[![screenshot](/images/api/components/custom-notification-box.jpg)\n\n#### Custom notification box\n\n](https://github.com/Socvest/streamlit-custom-notification-box)\n\n[A custom notification box with the ability to close it out. Created by](https://github.com/Socvest/streamlit-custom-notification-box) [@Socvest](https://github.com/Socvest).\n\n`from streamlit_custom_notification_box import custom_notification_box styles = {'material-icons':{'color': 'red'}, 'text-icon-link-close-container': {'box-shadow': '#3896de 0px 4px'}, 'notification-text': {'':''}, 'close-button':{'':''}, 'link':{'':''}} custom_notification_box(icon='info', textDisplay='We are almost done with your registration...', externalLink='more info', url='#', styles=styles, key=\"foo\")`\n\n[![screenshot](/images/api/components/extras-emojis.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.let_it_rain import rain rain(emoji=\"🎈\", font_size=54, falling_speed=5, animation_length=\"infinite\",)`\n\n## [](/develop/api-reference#app-logic-and-configuration)App logic and configuration\n\n### [](/develop/api-reference#authentication-and-user-info)Authentication and user info\n\n  \n\n[\n\n#### Log in a user\n\n`st.login()` starts an authentication flow with an identity provider.\n\n`st.login()`\n\n\n\n](/develop/api-reference/user/st.login)[\n\n#### Log out a user\n\n`st.logout()` removes a user's identity information.\n\n`st.logout()`\n\n\n\n](/develop/api-reference/user/st.logout)[\n\n#### User info\n\n`st.user` returns information about a logged-in user.\n\n`if st.user.is_logged_in: st.write(f\"Welcome back, {st.user.name}!\")`\n\n\n\n](/develop/api-reference/user/st.user)\n\n### [](/develop/api-reference#navigation-and-pages)Navigation and pages\n\n  \n\n[![screenshot](/images/api/navigation.jpg)\n\n#### Navigation\n\nConfigure the available pages in a multipage app.\n\n`st.navigation({ \"Your account\" : [log_out, settings], \"Reports\" : [overview, usage], \"Tools\" : [search] })`\n\n\n\n](/develop/api-reference/navigation/st.navigation)[![screenshot](/images/api/page.jpg)\n\n#### Page\n\nDefine a page in a multipage app.\n\n`home = st.Page( \"home.py\", title=\"Home\", icon=\":material/home:\" )`\n\n\n\n](/develop/api-reference/navigation/st.page)[![screenshot](/images/api/page_link.jpg)\n\n#### Page link\n\nDisplay a link to another page in a multipage app.\n\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n\n\n\n](/develop/api-reference/widgets/st.page_link)[\n\n#### Switch page\n\nProgrammatically navigates to a specified page.\n\n`st.switch_page(\"pages/my_page.py\")`\n\n\n\n](/develop/api-reference/navigation/st.switch_page)\n\n### [](/develop/api-reference#execution-flow)Execution flow\n\n  \n\n[![screenshot](/images/api/dialog.jpg)\n\n#### Modal dialog\n\nInsert a modal dialog that can rerun independently from the rest of the script.\n\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n\n\n\n](/develop/api-reference/execution-flow/st.dialog)[\n\n#### Forms\n\nCreate a form that batches elements together with a “Submit\" button.\n\n`with st.form(key='my_form'): name = st.text_input(\"Name\") email = st.text_input(\"Email\") st.form_submit_button(\"Sign up\")`\n\n\n\n](/develop/api-reference/execution-flow/st.form)[\n\n#### Fragments\n\nDefine a fragment to rerun independently from the rest of the script.\n\n`@st.fragment(run_every=\"10s\") def fragment(): df = get_data() st.line_chart(df)`\n\n\n\n](/develop/api-reference/execution-flow/st.fragment)[\n\n#### Rerun script\n\nRerun the script immediately.\n\n`st.rerun()`\n\n\n\n](/develop/api-reference/execution-flow/st.rerun)[\n\n#### Stop execution\n\nStops execution immediately.\n\n`st.stop()`\n\n\n\n](/develop/api-reference/execution-flow/st.stop)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/autorefresh.jpg)\n\n#### Autorefresh\n\n](https://github.com/kmcgrady/streamlit-autorefresh)\n\n[Force a refresh without tying up a script. Created by](https://github.com/kmcgrady/streamlit-autorefresh) [@kmcgrady](https://github.com/kmcgrady).\n\n`from streamlit_autorefresh import st_autorefresh st_autorefresh(interval=2000, limit=100, key=\"fizzbuzzcounter\")`\n\n[![screenshot](/images/api/components/pydantic.jpg)\n\n#### Pydantic\n\n](https://github.com/lukasmasuch/streamlit-pydantic)\n\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n\n[![screenshot](/images/api/components/pages.jpg)\n\n#### Streamlit Pages\n\n](https://github.com/blackary/st_pages)\n\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n\n### [](/develop/api-reference#caching-and-state)Caching and state\n\n  \n\n[\n\n#### Cache data\n\nFunction decorator to cache functions that return data (e.g. dataframe transforms, database queries, ML inference).\n\n`@st.cache_data def long_function(param1, param2): # Perform expensive computation here or # fetch data from the web here return data`\n\n\n\n](/develop/api-reference/caching-and-state/st.cache_data)[\n\n#### Cache resource\n\nFunction decorator to cache functions that return global resources (e.g. database connections, ML models).\n\n`@st.cache_resource def init_model(): # Return a global resource here return pipeline( \"sentiment-analysis\", model=\"distilbert-base-uncased-finetuned-sst-2-english\" )`\n\n\n\n](/develop/api-reference/caching-and-state/st.cache_resource)[\n\n#### Session state\n\nSession state is a way to share variables between reruns, for each user session.\n\n`st.session_state['key'] = value`\n\n\n\n](/develop/api-reference/caching-and-state/st.session_state)[\n\n#### Query parameters\n\nGet, set, or clear the query parameters that are shown in the browser's URL bar.\n\n`st.query_params[key] = value st.query_params.clear()`\n\n\n\n](/develop/api-reference/caching-and-state/st.query_params)[\n\n#### Context\n\n`st.context` provides a read-only interface to access cookies, headers, locale, and other browser-session information.\n\n`st.context.cookies st.context.headers`\n\n\n\n](/develop/api-reference/caching-and-state/st.context)\n\n### [](/develop/api-reference#connections-and-databases)Connections and databases\n\n#### [](/develop/api-reference#setup-your-connection)Setup your connection\n\n[![screenshot](/images/api/connection.svg)\n\n#### Create a connection\n\nConnect to a data source or API\n\n`conn = st.connection('pets_db', type='sql') pet_owners = conn.query('select * from pet_owners') st.dataframe(pet_owners)`\n\n\n\n](/develop/api-reference/connections/st.connection)\n\n#### [](/develop/api-reference#built-in-connections)Built-in connections\n\n[![screenshot](/images/api/connections.SnowflakeConnection.svg)\n\n#### SnowflakeConnection\n\nA connection to Snowflake.\n\n`conn = st.connection('snowflake')`\n\n\n\n](/develop/api-reference/connections/st.connections.snowflakeconnection)[![screenshot](/images/api/connections.SQLConnection.svg)\n\n#### SQLConnection\n\nA connection to a SQL database using SQLAlchemy.\n\n`conn = st.connection('sql')`\n\n\n\n](/develop/api-reference/connections/st.connections.sqlconnection)\n\n#### [](/develop/api-reference#build-your-own-connections)Build your own connections\n\n[\n\n#### Connection base class\n\nBuild your own connection with `BaseConnection`.\n\n`class MyConnection(BaseConnection[myconn.MyConnection]): def _connect(self, **kwargs) -> MyConnection: return myconn.connect(**self._secrets, **kwargs) def query(self, query): return self._instance.query(query)`\n\n\n\n](/develop/api-reference/connections/st.connections.baseconnection)\n\n#### [](/develop/api-reference#secrets-management)Secrets management\n\n[\n\n#### Secrets singleton\n\nAccess secrets from a local TOML file.\n\n`key = st.secrets[\"OpenAI_key\"]`\n\n\n\n](/develop/api-reference/connections/st.secrets)[\n\n#### Secrets file\n\nSave your secrets in a per-project or per-profile TOML file.\n\n`OpenAI_key = \"<YOUR_SECRET_KEY>\"`\n\n\n\n](/develop/api-reference/connections/secrets.toml)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/authenticator.jpg)\n\n#### Authenticator\n\n](https://github.com/mkhorasani/Streamlit-Authenticator)\n\n[A secure authentication module to validate user credentials. Created by](https://github.com/mkhorasani/Streamlit-Authenticator) [@mkhorasani](https://github.com/mkhorasani).\n\n`import streamlit_authenticator as stauth authenticator = stauth.Authenticate( config['credentials'], config['cookie']['name'], config['cookie']['key'], config['cookie']['expiry_days'], config['preauthorized'])`\n\n[![screenshot](/images/api/components/localstorage.jpg)\n\n#### WS localStorage\n\n](https://github.com/gagangoku/streamlit-ws-localstorage)\n\n[A simple synchronous way of accessing localStorage from your app. Created by](https://github.com/gagangoku/streamlit-ws-localstorage) [@gagangoku](https://github.com/gagangoku).\n\n`from streamlit_ws_localstorage import injectWebsocketCode ret = conn.setLocalStorageVal(key='k1', val='v1') st.write('ret: ' + ret)`\n\n[![screenshot](/images/api/components/auth0.jpg)\n\n#### Streamlit Auth0\n\n](https://github.com/conradbez/streamlit-auth0)\n\n[The fastest way to provide comprehensive login inside Streamlit. Created by](https://github.com/conradbez/streamlit-auth0) [@conradbez](https://github.com/conradbez).\n\n`from auth0_component import login_button user_info = login_button(clientId, domain = domain) st.write(user_info)`\n\n### [](/develop/api-reference#custom-components)Custom Components\n\n  \n\n[\n\n#### Declare a component\n\nCreate and register a custom component.\n\n`from st.components.v1 import declare_component declare_component( \"custom_slider\", \"/frontend\", )`\n\n\n\n](/develop/api-reference/custom-components/st.components.v1.declare_component)[\n\n#### HTML\n\nDisplay an HTML string in an iframe.\n\n`from st.components.v1 import html html( \"<p>Foo bar.</p>\" )`\n\n\n\n](/develop/api-reference/custom-components/st.components.v1.html)[\n\n#### iframe\n\nLoad a remote URL in an iframe.\n\n`from st.components.v1 import iframe iframe( \"docs.streamlit.io\" )`\n\n\n\n](/develop/api-reference/custom-components/st.components.v1.iframe)\n\n### [](/develop/api-reference#configuration)Configuration\n\n  \n\n[\n\n#### Configuration file\n\nConfigures the default settings for your app.\n\n`your-project/ ├── .streamlit/ │ └── config.toml └── your_app.py`\n\n\n\n](/develop/api-reference/configuration/config.toml)[\n\n#### Get config option\n\nRetrieve a single configuration option.\n\n`st.get_option(\"theme.primaryColor\")`\n\n\n\n](/develop/api-reference/configuration/st.get_option)[\n\n#### Set config option\n\nSet a single configuration option. (This is very limited.)\n\n`st.set_option(\"deprecation.showPyplotGlobalUse\", False)`\n\n\n\n](/develop/api-reference/configuration/st.set_option)[\n\n#### Set page title, favicon, and more\n\nConfigures the default settings of the page.\n\n`st.set_page_config( page_title=\"My app\", page_icon=\":shark:\", )`\n\n\n\n](/develop/api-reference/configuration/st.set_page_config)\n\n## [](/develop/api-reference#developer-tools)Developer tools\n\n### [](/develop/api-reference#app-testing)App testing\n\n  \n\n[\n\n#### st.testing.v1.AppTest\n\n`st.testing.v1.AppTest` simulates a running Streamlit app for testing.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.secrets[\"WORD\"] = \"Foobar\" at.run() assert not at.exception at.text_input(\"word\").input(\"Bazbat\").run() assert at.warning[0].value == \"Try again.\"`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest)[\n\n#### AppTest.from\\_file\n\n`st.testing.v1.AppTest.from_file` initializes a simulated app from a file.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.run()`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_file)[\n\n#### AppTest.from\\_string\n\n`st.testing.v1.AppTest.from_string` initializes a simulated app from a string.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_string(app_script_as_string) at.run()`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_string)[\n\n#### AppTest.from\\_function\n\n`st.testing.v1.AppTest.from_function` initializes a simulated app from a function.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_function(app_script_as_callable) at.run()`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_function)[\n\n#### Block\n\nA representation of container elements, including:\n\n*   `st.chat_message`\n*   `st.columns`\n*   `st.sidebar`\n*   `st.tabs`\n*   The main body of the app.\n\n`# at.sidebar returns a Block at.sidebar.button[0].click().run() assert not at.exception`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeblock)[\n\n#### Element\n\nThe base class for representation of all elements, including:\n\n*   `st.title`\n*   `st.header`\n*   `st.markdown`\n*   `st.dataframe`\n\n`# at.title returns a sequence of Title # Title inherits from Element assert at.title[0].value == \"My awesome app\"`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeelement)[\n\n#### Button\n\nA representation of `st.button` and `st.form_submit_button`.\n\n`at.button[0].click().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treebutton)[\n\n#### ChatInput\n\nA representation of `st.chat_input`.\n\n`at.chat_input[0].set_value(\"What is Streamlit?\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treechatinput)[\n\n#### Checkbox\n\nA representation of `st.checkbox`.\n\n`at.checkbox[0].check().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecheckbox)[\n\n#### ColorPicker\n\nA representation of `st.color_picker`.\n\n`at.color_picker[0].pick(\"#FF4B4B\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecolorpicker)[\n\n#### DateInput\n\nA representation of `st.date_input`.\n\n`release_date = datetime.date(2023, 10, 26) at.date_input[0].set_value(release_date).run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treedateinput)[\n\n#### Multiselect\n\nA representation of `st.multiselect`.\n\n`at.multiselect[0].select(\"New York\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treemultiselect)[\n\n#### NumberInput\n\nA representation of `st.number_input`.\n\n`at.number_input[0].increment().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treenumberinput)[\n\n#### Radio\n\nA representation of `st.radio`.\n\n`at.radio[0].set_value(\"New York\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeradio)[\n\n#### SelectSlider\n\nA representation of `st.select_slider`.\n\n`at.select_slider[0].set_range(\"A\",\"C\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectslider)[\n\n#### Selectbox\n\nA representation of `st.selectbox`.\n\n`at.selectbox[0].select(\"New York\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectbox)[\n\n#### Slider\n\nA representation of `st.slider`.\n\n`at.slider[0].set_range(2,5).run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeslider)[\n\n#### TextArea\n\nA representation of `st.text_area`.\n\n`at.text_area[0].input(\"Streamlit is awesome!\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextarea)[\n\n#### TextInput\n\nA representation of `st.text_input`.\n\n`at.text_input[0].input(\"Streamlit\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextinput)[\n\n#### TimeInput\n\nA representation of `st.time_input`.\n\n`at.time_input[0].increment().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetimeinput)[\n\n#### Toggle\n\nA representation of `st.toggle`.\n\n`at.toggle[0].set_value(\"True\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetoggle)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n\n#### Pandas Profiling\n\n](https://github.com/okld/streamlit-pandas-profiling)\n\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n\n[![screenshot](/images/api/components/ace.jpg)\n\n#### Streamlit Ace\n\n](https://github.com/okld/streamlit-ace)\n\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n\n`from streamlit_ace import st_ace content = st_ace() content`\n\n[![screenshot](/images/api/components/analytics.jpg)\n\n#### Streamlit Analytics\n\n](https://github.com/jrieke/streamlit-analytics)\n\n[Track & visualize user interactions with your streamlit app. Created by](https://github.com/jrieke/streamlit-analytics) [@jrieke](https://github.com/jrieke).\n\n`import streamlit_analytics with streamlit_analytics.track(): st.text_input(\"Write something\")`\n\n[_arrow\\_back_Previous: Concepts](/develop/concepts)[_arrow\\_forward_Next: Write and magic](/develop/api-reference/write-magic)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382901.0580525
    }
  ]
}
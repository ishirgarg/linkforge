{
  "crawl_info": {
    "documentation_url": "https://docs.streamlit.io/develop/api-reference",
    "max_urls": 5,
    "crawled_at": "2025-10-25 02:02:49",
    "total_pages": 5,
    "successful_pages": 5,
    "failed_pages": 0
  },
  "scraped_data": [
    {
      "url": "https://docs.streamlit.io/develop/tutorials",
      "content": {
        "type": "html",
        "raw_length": 4248,
        "title": null,
        "text": "Tutorials - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_remove_\n*\n[Authentication and personalization](/develop/tutorials/authentication)\n_add_\n*\n[Chat and LLM apps](/develop/tutorials/chat-and-llm-apps)\n_add_\n*\n[Configuration and theming](/develop/tutorials/configuration-and-theming)\n_add_\n*\n[Connect to data sources](/develop/tutorials/databases)\n_add_\n*\n[Elements](/develop/tutorials/elements)\n_add_\n*\n[Execution flow](/develop/tutorials/execution-flow)\n_add_\n*\n[Multipage apps](/develop/tutorials/multipage)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[Tutorials](/develop/tutorials)\n# [](/develop/tutorials#tutorials)Tutorials\nOur tutorials include step-by-step examples of building different types of apps in Streamlit.\n[\n##### Add user authentication\nAdd user authentication with Streamlit's built-in support for OpenID Connect.\n](/develop/tutorials/authentication)[\n##### Chat apps and LLMs\nWork with LLMs and create chat apps.\n](/develop/tutorials/chat-and-llm-apps)[\n##### Configuration and theming\nCustomize the appearance of your app.\n](/develop/tutorials/configuration-and-theming)[\n##### Connect to data sources\nConnect to popular datasources.\n](/develop/tutorials/databases)[\n##### Work with Streamlit's core elements\nWork with core elements like dataframes and charts.\n](/develop/tutorials/elements)[\n##### Use core features to work with Streamlit's execution model\nBuild simple apps and walk through examples to learn about Streamlit's core features and execution model.\n](/develop/tutorials/execution-flow)[\n##### Create multipage apps\nCreate multipage apps, navigation, and flows.\n](/develop/tutorials/multipage)\nWhen you're done developing your app, see our [deployment tutorials](/deploy/tutorials), too!\n[_arrow\\_back_Previous: API reference](/develop/api-reference)[_arrow\\_forward_Next: Authentication and personalization](/develop/tutorials/authentication)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Tutorials - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _remove_\n        \n        *   [Authentication and personalization](/develop/tutorials/authentication)\n            \n            _add_\n            \n        *   [Chat and LLM apps](/develop/tutorials/chat-and-llm-apps)\n            \n            _add_\n            \n        *   [Configuration and theming](/develop/tutorials/configuration-and-theming)\n            \n            _add_\n            \n        *   [Connect to data sources](/develop/tutorials/databases)\n            \n            _add_\n            \n        *   [Elements](/develop/tutorials/elements)\n            \n            _add_\n            \n        *   [Execution flow](/develop/tutorials/execution-flow)\n            \n            _add_\n            \n        *   [Multipage apps](/develop/tutorials/multipage)\n            \n            _add_\n            \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [Tutorials](/develop/tutorials)\n\n# [](/develop/tutorials#tutorials)Tutorials\n\nOur tutorials include step-by-step examples of building different types of apps in Streamlit.\n\n[\n\n##### Add user authentication\n\nAdd user authentication with Streamlit's built-in support for OpenID Connect.\n\n](/develop/tutorials/authentication)[\n\n##### Chat apps and LLMs\n\nWork with LLMs and create chat apps.\n\n](/develop/tutorials/chat-and-llm-apps)[\n\n##### Configuration and theming\n\nCustomize the appearance of your app.\n\n](/develop/tutorials/configuration-and-theming)[\n\n##### Connect to data sources\n\nConnect to popular datasources.\n\n](/develop/tutorials/databases)[\n\n##### Work with Streamlit's core elements\n\nWork with core elements like dataframes and charts.\n\n](/develop/tutorials/elements)[\n\n##### Use core features to work with Streamlit's execution model\n\nBuild simple apps and walk through examples to learn about Streamlit's core features and execution model.\n\n](/develop/tutorials/execution-flow)[\n\n##### Create multipage apps\n\nCreate multipage apps, navigation, and flows.\n\n](/develop/tutorials/multipage)\n\nWhen you're done developing your app, see our [deployment tutorials](/deploy/tutorials), too!\n\n[_arrow\\_back_Previous: API reference](/develop/api-reference)[_arrow\\_forward_Next: Authentication and personalization](/develop/tutorials/authentication)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382967.0473223
    },
    {
      "url": "https://docs.streamlit.io/deploy/tutorials",
      "content": {
        "type": "html",
        "raw_length": 3905,
        "title": null,
        "text": "Deployment tutorials - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_remove_\n*\n[Docker](/deploy/tutorials/docker)\n*\n[Kubernetes](/deploy/tutorials/kubernetes)\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)/\n*\n[Other platforms](/deploy/tutorials)\n# [](/deploy/tutorials#deployment-tutorials)Deployment tutorials\nThis sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:\n[![screenshot](/images/deploy/streamlit-cloud.png)\n##### Streamlit Community Cloud\n](/deploy/streamlit-community-cloud/get-started)[![screenshot](/images/deploy/docker.png)\n##### Docker\n](/deploy/tutorials/docker)[![screenshot](/images/deploy/kubernetes.png)\n##### Kubernetes\n](/deploy/tutorials/kubernetes)\nWhile we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:\n*\n[How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).\n*\n[Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.\n*\n[Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.\n*\n[Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.\n*\n[Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.\n*\n[Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).\n[_arrow\\_back_Previous: Snowflake](/deploy/snowflake)[_arrow\\_forward_Next: Docker](/deploy/tutorials/docker)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Deployment tutorials - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _remove_\n        \n        *   [Docker](/deploy/tutorials/docker)\n            \n        *   [Kubernetes](/deploy/tutorials/kubernetes)\n            \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)/\n*   [Other platforms](/deploy/tutorials)\n\n# [](/deploy/tutorials#deployment-tutorials)Deployment tutorials\n\nThis sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:\n\n[![screenshot](/images/deploy/streamlit-cloud.png)\n\n##### Streamlit Community Cloud\n\n](/deploy/streamlit-community-cloud/get-started)[![screenshot](/images/deploy/docker.png)\n\n##### Docker\n\n](/deploy/tutorials/docker)[![screenshot](/images/deploy/kubernetes.png)\n\n##### Kubernetes\n\n](/deploy/tutorials/kubernetes)\n\nWhile we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:\n\n*   [How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).\n*   [Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.\n*   [Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.\n*   [Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.\n*   [Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.\n*   [Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).\n\n[_arrow\\_back_Previous: Snowflake](/deploy/snowflake)[_arrow\\_forward_Next: Docker](/deploy/tutorials/docker)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382967.123021
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_function",
      "content": {
        "type": "html",
        "raw_length": 64804,
        "title": null,
        "text": "st.testing.v1.AppTest - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_add_\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_remove_\n*\n[st.testing.v1.AppTest](/develop/api-reference/app-testing/st.testing.v1.apptest)\n*\n[Testing element classes](/develop/api-reference/app-testing/testing-element-classes)\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)/\n*\n[App testing](/develop/api-reference/app-testing)/\n*\n[st.testing.v1.AppTest](/develop/api-reference/app-testing/st.testing.v1.apptest)\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#the-apptest-class)The AppTest class\n## [](#sttestingv1apptest)st.testing.v1.AppTest\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nA simulated Streamlit app to check the correctness of displayed elements and outputs.\nAn instance of AppTest simulates a running Streamlit app. This class provides methods to set up, manipulate, and inspect the app contents via API instead of a browser UI. It can be used to write automated tests of an app in various scenarios. These can then be run using a tool like pytest.\nAppTest can be initialized by one of three class methods:\n*\n[st.testing.v1.AppTest.from\\_file](#apptestfrom_file) (recommended)\n*\n[st.testing.v1.AppTest.from\\_string](#apptestfrom_string)\n*\n[st.testing.v1.AppTest.from\\_function](#apptestfrom_function)\nOnce initialized, Session State and widget values can be updated and the script can be run. Unlike an actual live-running Streamlit app, you need to call AppTest.run() explicitly to re-run the app after changing a widget value. Switching pages also requires an explicit, follow-up call to AppTest.run().\nAppTest enables developers to build tests on their app as-is, in the familiar python test format, without major refactoring or abstracting out logic to be tested separately from the UI. Tests can run quickly with very low overhead. A typical pattern is to build a suite of tests for an app that ensure consistent functionality as the app evolves, and run the tests locally and/or in a CI environment like Github Actions.\nNote\nAppTest only supports testing a single page of an app per instance. For multipage apps, each page will need to be tested separately. AppTest is not yet compatible with multipage apps using st.navigation and st.Page.\nClass description[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L98 \"View st.AppTest source code on GitHub\")\nst.testing.v1.AppTest(script\\_path, \\*, default\\_timeout, args=None, kwargs=None)\nMethods\n[get](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestget)(element\\_type)\nGet elements or widgets of the specified type.\n[run](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestrun)(\\*, timeout=None)\nRun the script from the current state.\n[switch\\_page](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestswitch_page)(page\\_path)\nSwitch to another page of the app.\nAttributes\nsecrets (dict\\[str, Any\\])\nDictionary of secrets to be used the simulated app. Use dict-like syntax to set secret values for the simulated app.\nsession\\_state (SafeSessionState)\nSession State for the simulated app. SafeSessionState object supports read and write operations as usual for Streamlit apps.\nquery\\_params (dict\\[str, Any\\])\nDictionary of query parameters to be used by the simluated app. Use dict-like syntax to set query\\_params values for the simulated app.\n[button](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton)\nSequence of all st.button and st.form\\_submit\\_button widgets.\n[button\\_group](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton_group)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton_group)\nSequence of all st.feedback widgets.\n[caption](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcaption)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcaption)\nSequence of all st.caption elements.\n[chat\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_input)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_input)\nSequence of all st.chat\\_input widgets.\n[chat\\_message](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_message)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_message)\nSequence of all st.chat\\_message elements.\n[checkbox](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcheckbox)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcheckbox)\nSequence of all st.checkbox widgets.\n[code](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcode)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcode)\nSequence of all st.code elements.\n[color\\_picker](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolor_picker)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolor_picker)\nSequence of all st.color\\_picker widgets.\n[columns](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolumns)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolumns)\nSequence of all columns within st.columns elements.\n[dataframe](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdataframe)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdataframe)\nSequence of all st.dataframe elements.\n[date\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdate_input)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdate_input)\nSequence of all st.date\\_input widgets.\n[divider](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdivider)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdivider)\nSequence of all st.divider elements.\n[error](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesterror)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesterror)\nSequence of all st.error elements.\n[exception](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexception)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexception)\nSequence of all st.exception elements.\n[expander](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexpander)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexpander)\nSequence of all st.expander elements.\n[header](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestheader)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestheader)\nSequence of all st.header elements.\n[info](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestinfo)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestinfo)\nSequence of all st.info elements.\n[json](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestjson)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestjson)\nSequence of all st.json elements.\n[latex](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestlatex)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestlatex)\nSequence of all st.latex elements.\n[main](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmain)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmain)\nSequence of elements within the main body of the app.\n[markdown](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmarkdown)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmarkdown)\nSequence of all st.markdown elements.\n[metric](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmetric)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmetric)\nSequence of all st.metric elements.\n[multiselect](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmultiselect)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmultiselect)\nSequence of all st.multiselect widgets.\n[number\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestnumber_input)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestnumber_input)\nSequence of all st.number\\_input widgets.\n[radio](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestradio)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestradio)\nSequence of all st.radio widgets.\n[select\\_slider](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselect_slider)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselect_slider)\nSequence of all st.select\\_slider widgets.\n[selectbox](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselectbox)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselectbox)\nSequence of all st.selectbox widgets.\n[sidebar](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsidebar)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsidebar)\nSequence of all elements within st.sidebar.\n[slider](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestslider)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestslider)\nSequence of all st.slider widgets.\n[status](/develop/api-reference/app-testing/st.testing.v1.apptest#appteststatus)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#appteststatus)\nSequence of all st.status elements.\n[subheader](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsubheader)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsubheader)\nSequence of all st.subheader elements.\n[success](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsuccess)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsuccess)\nSequence of all st.success elements.\n[table](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttable)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttable)\nSequence of all st.table elements.\n[tabs](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttabs)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttabs)\nSequence of all tabs within st.tabs elements.\n[text](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext)\nSequence of all st.text elements.\n[text\\_area](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_area)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_area)\nSequence of all st.text\\_area widgets.\n[text\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_input)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_input)\nSequence of all st.text\\_input widgets.\n[time\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttime_input)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttime_input)\nSequence of all st.time\\_input widgets.\n[title](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttitle)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttitle)\nSequence of all st.title elements.\n[toast](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoast)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoast)\nSequence of all st.toast elements.\n[toggle](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoggle)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoggle)\nSequence of all st.toggle widgets.\n[warning](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestwarning)\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestwarning)\nSequence of all st.warning elements.\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#initialize-a-simulated-app-using-apptest)Initialize a simulated app using AppTest\n## [](#apptestfrom_file)AppTest.from\\_file\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nCreate an instance of AppTest to simulate an app page defined within a file.\nThis option is most convenient for CI workflows and testing of published apps. The script must be executable on its own and so must contain all necessary imports.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L275 \"View st.from_file source code on GitHub\")\nAppTest.from\\_file(cls, script\\_path, \\*, default\\_timeout=3)\nParameters\nscript\\_path (str | Path)\nPath to a script file. The path should be absolute or relative to the file calling .from\\_file.\ndefault\\_timeout (float)\nDefault time in seconds before a script run is timed out. Can be overridden for individual .run() calls.\nReturns\n(AppTest)\nA simulated Streamlit app for testing. The simulated app can be executed via .run().\n## [](#apptestfrom_string)AppTest.from\\_string\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nCreate an instance of AppTest to simulate an app page defined within a string.\nThis is useful for testing short scripts that fit comfortably as an inline string in the test itself, without having to create a separate file for it. The script must be executable on its own and so must contain all necessary imports.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L178 \"View st.from_string source code on GitHub\")\nAppTest.from\\_string(cls, script, \\*, default\\_timeout=3)\nParameters\nscript (str)\nThe string contents of the script to be run.\ndefault\\_timeout (float)\nDefault time in seconds before a script run is timed out. Can be overridden for individual .run() calls.\nReturns\n(AppTest)\nA simulated Streamlit app for testing. The simulated app can be executed via .run().\n## [](#apptestfrom_function)AppTest.from\\_function\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nCreate an instance of AppTest to simulate an app page defined within a function.\nThis is similar to AppTest.from\\_string(), but more convenient to write with IDE assistance. The script must be executable on its own and so must contain all necessary imports.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L225 \"View st.from_function source code on GitHub\")\nAppTest.from\\_function(cls, script, \\*, default\\_timeout=3, args=None, kwargs=None)\nParameters\nscript (Callable)\nA function whose body will be used as a script. Must be runnable in isolation, so it must include any necessary imports.\ndefault\\_timeout (float)\nDefault time in seconds before a script run is timed out. Can be overridden for individual .run() calls.\nargs (tuple)\nAn optional tuple of args to pass to the script function.\nkwargs (dict)\nAn optional dict of kwargs to pass to the script function.\nReturns\n(AppTest)\nA simulated Streamlit app for testing. The simulated app can be executed via .run().\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#run-an-apptest-script)Run an AppTest script\n## [](#apptestrun)AppTest.run\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nRun the script from the current state.\nThis is equivalent to manually rerunning the app or the rerun that occurs upon user interaction. AppTest.run() must be manually called after updating a widget value or switching pages as script reruns do not occur automatically as they do for live-running Streamlit apps.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L375 \"View st.run source code on GitHub\")\nAppTest.run(\\*, timeout=None)\nParameters\ntimeout (float or None)\nThe maximum number of seconds to run the script. If timeout is None (default), Streamlit uses the default timeout set for the instance of AppTest.\nReturns\n(AppTest)\nself\n## [](#apptestswitch_page)AppTest.switch\\_page\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSwitch to another page of the app.\nThis method does not automatically rerun the app. Use a follow-up call to AppTest.run() to obtain the elements on the selected page.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L398 \"View st.switch_page source code on GitHub\")\nAppTest.switch\\_page(page\\_path)\nParameters\npage\\_path (str)\nPath of the page to switch to. The path must be relative to the main script's location (e.g. \"pages/my\\_page.py\").\nReturns\n(AppTest)\nself\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#get-apptest-script-elements)Get AppTest script elements\nThe main value of `AppTest` is providing an API to programmatically inspect and interact with the elements and widgets produced by a running Streamlit app. Using the `AppTest.` properties or `AppTest.get()` method returns a collection of all the elements or widgets of the specified type that would have been displayed by running the app.\nNote that you can also retrieve elements within a specific container in the same way - first retrieve the container, then retrieve the elements just in that container.\n## [](#apptestget)AppTest.get\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nGet elements or widgets of the specified type.\nThis method returns the collection of all elements or widgets of the specified type on the current page. Retrieve a specific element by using its index (order on page) or key lookup.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L1032 \"View st.get source code on GitHub\")\nAppTest.get(element\\_type)\nParameters\nelement\\_type (str)\nAn element attribute of AppTest. For example, \"button\", \"caption\", or \"chat\\_input\".\nReturns\n(Sequence of Elements)\nSequence of elements of the given type. Individual elements can be accessed from a Sequence by index (order on the page). When getting and element\\_type that is a widget, individual widgets can be accessed by key. For example, at.get(\"text\")\\[0\\] for the first st.text element or at.get(\"slider\")(key=\"my\\_key\") for the st.slider widget with a given key.\n## [](#apptestbutton)AppTest.button\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.button and st.form\\_submit\\_button widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L453 \"View st.button source code on GitHub\")\nAppTest.button\nReturns\n(WidgetList of Button)\nSequence of all st.button and st.form\\_submit\\_button widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.button\\[0\\] for the first widget or at.button(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestcaption)AppTest.caption\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.caption elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L482 \"View st.caption source code on GitHub\")\nAppTest.caption\nReturns\n(ElementList of Caption)\nSequence of all st.caption elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.caption\\[0\\] for the first element. Caption is an extension of the Element class.\n## [](#apptestchat_input)AppTest.chat\\_input\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.chat\\_input widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L496 \"View st.chat_input source code on GitHub\")\nAppTest.chat\\_input\nReturns\n(WidgetList of ChatInput)\nSequence of all st.chat\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.chat\\_input\\[0\\] for the first widget or at.chat\\_input(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestchat_message)AppTest.chat\\_message\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.chat\\_message elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L510 \"View st.chat_message source code on GitHub\")\nAppTest.chat\\_message\nReturns\n(Sequence of ChatMessage)\nSequence of all st.chat\\_message elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.chat\\_message\\[0\\] for the first element. ChatMessage is an extension of the Block class.\n## [](#apptestcheckbox)AppTest.checkbox\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.checkbox widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L524 \"View st.checkbox source code on GitHub\")\nAppTest.checkbox\nReturns\n(WidgetList of Checkbox)\nSequence of all st.checkbox widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.checkbox\\[0\\] for the first widget or at.checkbox(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestcode)AppTest.code\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.code elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L538 \"View st.code source code on GitHub\")\nAppTest.code\nReturns\n(ElementList of Code)\nSequence of all st.code elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.code\\[0\\] for the first element. Code is an extension of the Element class.\n## [](#apptestcolor_picker)AppTest.color\\_picker\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.color\\_picker widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L552 \"View st.color_picker source code on GitHub\")\nAppTest.color\\_picker\nReturns\n(WidgetList of ColorPicker)\nSequence of all st.color\\_picker widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.color\\_picker\\[0\\] for the first widget or at.color\\_picker(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestcolumns)AppTest.columns\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all columns within st.columns elements.\nEach column within a single st.columns will be returned as a separate Column in the Sequence.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L566 \"View st.columns source code on GitHub\")\nAppTest.columns\nReturns\n(Sequence of Column)\nSequence of all columns within st.columns elements. Individual columns can be accessed from an ElementList by index (order on the page). For example, at.columns\\[0\\] for the first column. Column is an extension of the Block class.\n## [](#apptestdataframe)AppTest.dataframe\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.dataframe elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L583 \"View st.dataframe source code on GitHub\")\nAppTest.dataframe\nReturns\n(ElementList of Dataframe)\nSequence of all st.dataframe elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.dataframe\\[0\\] for the first element. Dataframe is an extension of the Element class.\n## [](#apptestdate_input)AppTest.date\\_input\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.date\\_input widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L597 \"View st.date_input source code on GitHub\")\nAppTest.date\\_input\nReturns\n(WidgetList of DateInput)\nSequence of all st.date\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.date\\_input\\[0\\] for the first widget or at.date\\_input(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestdivider)AppTest.divider\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.divider elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L611 \"View st.divider source code on GitHub\")\nAppTest.divider\nReturns\n(ElementList of Divider)\nSequence of all st.divider elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.divider\\[0\\] for the first element. Divider is an extension of the Element class.\n## [](#apptesterror)AppTest.error\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.error elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L625 \"View st.error source code on GitHub\")\nAppTest.error\nReturns\n(ElementList of Error)\nSequence of all st.error elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.error\\[0\\] for the first element. Error is an extension of the Element class.\n## [](#apptestexception)AppTest.exception\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.exception elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L639 \"View st.exception source code on GitHub\")\nAppTest.exception\nReturns\n(ElementList of Exception)\nSequence of all st.exception elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.exception\\[0\\] for the first element. Exception is an extension of the Element class.\n## [](#apptestexpander)AppTest.expander\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.expander elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L653 \"View st.expander source code on GitHub\")\nAppTest.expander\nReturns\n(Sequence of Expandable)\nSequence of all st.expander elements. Individual elements can be accessed from a Sequence by index (order on the page). For example, at.expander\\[0\\] for the first element. Expandable is an extension of the Block class.\n## [](#apptestheader)AppTest.header\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.header elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L667 \"View st.header source code on GitHub\")\nAppTest.header\nReturns\n(ElementList of Header)\nSequence of all st.header elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.header\\[0\\] for the first element. Header is an extension of the Element class.\n## [](#apptestinfo)AppTest.info\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.info elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L681 \"View st.info source code on GitHub\")\nAppTest.info\nReturns\n(ElementList of Info)\nSequence of all st.info elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.info\\[0\\] for the first element. Info is an extension of the Element class.\n## [](#apptestjson)AppTest.json\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.json elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L695 \"View st.json source code on GitHub\")\nAppTest.json\nReturns\n(ElementList of Json)\nSequence of all st.json elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.json\\[0\\] for the first element. Json is an extension of the Element class.\n## [](#apptestlatex)AppTest.latex\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.latex elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L709 \"View st.latex source code on GitHub\")\nAppTest.latex\nReturns\n(ElementList of Latex)\nSequence of all st.latex elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.latex\\[0\\] for the first element. Latex is an extension of the Element class.\n## [](#apptestmain)AppTest.main\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of elements within the main body of the app.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L427 \"View st.main source code on GitHub\")\nAppTest.main\nReturns\n(Block)\nA container of elements. Block can be queried for elements in the same manner as AppTest. For example, Block.checkbox will return all st.checkbox within the associated container.\n## [](#apptestmarkdown)AppTest.markdown\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.markdown elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L723 \"View st.markdown source code on GitHub\")\nAppTest.markdown\nReturns\n(ElementList of Markdown)\nSequence of all st.markdown elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.markdown\\[0\\] for the first element. Markdown is an extension of the Element class.\n## [](#apptestmetric)AppTest.metric\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.metric elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L737 \"View st.metric source code on GitHub\")\nAppTest.metric\nReturns\n(ElementList of Metric)\nSequence of all st.metric elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.metric\\[0\\] for the first element. Metric is an extension of the Element class.\n## [](#apptestmultiselect)AppTest.multiselect\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.multiselect widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L751 \"View st.multiselect source code on GitHub\")\nAppTest.multiselect\nReturns\n(WidgetList of Multiselect)\nSequence of all st.multiselect widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.multiselect\\[0\\] for the first widget or at.multiselect(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestnumber_input)AppTest.number\\_input\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.number\\_input widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L765 \"View st.number_input source code on GitHub\")\nAppTest.number\\_input\nReturns\n(WidgetList of NumberInput)\nSequence of all st.number\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.number\\_input\\[0\\] for the first widget or at.number\\_input(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestradio)AppTest.radio\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.radio widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L779 \"View st.radio source code on GitHub\")\nAppTest.radio\nReturns\n(WidgetList of Radio)\nSequence of all st.radio widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.radio\\[0\\] for the first widget or at.radio(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestselect_slider)AppTest.select\\_slider\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.select\\_slider widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L793 \"View st.select_slider source code on GitHub\")\nAppTest.select\\_slider\nReturns\n(WidgetList of SelectSlider)\nSequence of all st.select\\_slider widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.select\\_slider\\[0\\] for the first widget or at.select\\_slider(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestselectbox)AppTest.selectbox\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.selectbox widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L807 \"View st.selectbox source code on GitHub\")\nAppTest.selectbox\nReturns\n(WidgetList of Selectbox)\nSequence of all st.selectbox widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.selectbox\\[0\\] for the first widget or at.selectbox(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestsidebar)AppTest.sidebar\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all elements within st.sidebar.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L440 \"View st.sidebar source code on GitHub\")\nAppTest.sidebar\nReturns\n(Block)\nA container of elements. Block can be queried for elements in the same manner as AppTest. For example, Block.checkbox will return all st.checkbox within the associated container.\n## [](#apptestslider)AppTest.slider\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.slider widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L821 \"View st.slider source code on GitHub\")\nAppTest.slider\nReturns\n(WidgetList of Slider)\nSequence of all st.slider widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.slider\\[0\\] for the first widget or at.slider(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestsubheader)AppTest.subheader\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.subheader elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L835 \"View st.subheader source code on GitHub\")\nAppTest.subheader\nReturns\n(ElementList of Subheader)\nSequence of all st.subheader elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.subheader\\[0\\] for the first element. Subheader is an extension of the Element class.\n## [](#apptestsuccess)AppTest.success\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.success elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L849 \"View st.success source code on GitHub\")\nAppTest.success\nReturns\n(ElementList of Success)\nSequence of all st.success elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.success\\[0\\] for the first element. Success is an extension of the Element class.\n## [](#appteststatus)AppTest.status\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.status elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L863 \"View st.status source code on GitHub\")\nAppTest.status\nReturns\n(Sequence of Status)\nSequence of all st.status elements. Individual elements can be accessed from a Sequence by index (order on the page). For example, at.status\\[0\\] for the first element. Status is an extension of the Block class.\n## [](#apptesttable)AppTest.table\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.table elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L877 \"View st.table source code on GitHub\")\nAppTest.table\nReturns\n(ElementList of Table)\nSequence of all st.table elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.table\\[0\\] for the first element. Table is an extension of the Element class.\n## [](#apptesttabs)AppTest.tabs\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all tabs within st.tabs elements.\nEach tab within a single st.tabs will be returned as a separate Tab in the Sequence. Additionally, the tab labels are forwarded to each Tab element as a property. For example, st.tabs(\"A\",\"B\") will yield two Tab objects, with Tab.label returning \"A\" and \"B\", respectively.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L891 \"View st.tabs source code on GitHub\")\nAppTest.tabs\nReturns\n(Sequence of Tab)\nSequence of all tabs within st.tabs elements. Individual tabs can be accessed from an ElementList by index (order on the page). For example, at.tabs\\[0\\] for the first tab. Tab is an extension of the Block class.\n## [](#apptesttext)AppTest.text\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.text elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L911 \"View st.text source code on GitHub\")\nAppTest.text\nReturns\n(ElementList of Text)\nSequence of all st.text elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.text\\[0\\] for the first element. Text is an extension of the Element class.\n## [](#apptesttext_area)AppTest.text\\_area\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.text\\_area widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L925 \"View st.text_area source code on GitHub\")\nAppTest.text\\_area\nReturns\n(WidgetList of TextArea)\nSequence of all st.text\\_area widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.text\\_area\\[0\\] for the first widget or at.text\\_area(key=\"my\\_key\") for a widget with a given key.\n## [](#apptesttext_input)AppTest.text\\_input\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.text\\_input widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L939 \"View st.text_input source code on GitHub\")\nAppTest.text\\_input\nReturns\n(WidgetList of TextInput)\nSequence of all st.text\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.text\\_input\\[0\\] for the first widget or at.text\\_input(key=\"my\\_key\") for a widget with a given key.\n## [](#apptesttime_input)AppTest.time\\_input\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.time\\_input widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L953 \"View st.time_input source code on GitHub\")\nAppTest.time\\_input\nReturns\n(WidgetList of TimeInput)\nSequence of all st.time\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.time\\_input\\[0\\] for the first widget or at.time\\_input(key=\"my\\_key\") for a widget with a given key.\n## [](#apptesttitle)AppTest.title\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.title elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L967 \"View st.title source code on GitHub\")\nAppTest.title\nReturns\n(ElementList of Title)\nSequence of all st.title elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.title\\[0\\] for the first element. Title is an extension of the Element class.\n## [](#apptesttoast)AppTest.toast\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.toast elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L981 \"View st.toast source code on GitHub\")\nAppTest.toast\nReturns\n(ElementList of Toast)\nSequence of all st.toast elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.toast\\[0\\] for the first element. Toast is an extension of the Element class.\n## [](#apptesttoggle)AppTest.toggle\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.toggle widgets.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L995 \"View st.toggle source code on GitHub\")\nAppTest.toggle\nReturns\n(WidgetList of Toggle)\nSequence of all st.toggle widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.toggle\\[0\\] for the first widget or at.toggle(key=\"my\\_key\") for a widget with a given key.\n## [](#apptestwarning)AppTest.warning\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nSequence of all st.warning elements.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L1009 \"View st.warning source code on GitHub\")\nAppTest.warning\nReturns\n(ElementList of Warning)\nSequence of all st.warning elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.warning\\[0\\] for the first element. Warning is an extension of the Element class.\n[_arrow\\_back_Previous: App testing](/develop/api-reference/app-testing)[_arrow\\_forward_Next: Testing element classes](/develop/api-reference/app-testing/testing-element-classes)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "st.testing.v1.AppTest - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _add_\n            \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _remove_\n            \n            *   [st.testing.v1.AppTest](/develop/api-reference/app-testing/st.testing.v1.apptest)\n                \n            *   [Testing element classes](/develop/api-reference/app-testing/testing-element-classes)\n                \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)/\n*   [App testing](/develop/api-reference/app-testing)/\n*   [st.testing.v1.AppTest](/develop/api-reference/app-testing/st.testing.v1.apptest)\n\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#the-apptest-class)The AppTest class\n\n## [](#sttestingv1apptest)st.testing.v1.AppTest\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nA simulated Streamlit app to check the correctness of displayed elements and outputs.\n\nAn instance of AppTest simulates a running Streamlit app. This class provides methods to set up, manipulate, and inspect the app contents via API instead of a browser UI. It can be used to write automated tests of an app in various scenarios. These can then be run using a tool like pytest.\n\nAppTest can be initialized by one of three class methods:\n\n*   [st.testing.v1.AppTest.from\\_file](#apptestfrom_file) (recommended)\n*   [st.testing.v1.AppTest.from\\_string](#apptestfrom_string)\n*   [st.testing.v1.AppTest.from\\_function](#apptestfrom_function)\n\nOnce initialized, Session State and widget values can be updated and the script can be run. Unlike an actual live-running Streamlit app, you need to call AppTest.run() explicitly to re-run the app after changing a widget value. Switching pages also requires an explicit, follow-up call to AppTest.run().\n\nAppTest enables developers to build tests on their app as-is, in the familiar python test format, without major refactoring or abstracting out logic to be tested separately from the UI. Tests can run quickly with very low overhead. A typical pattern is to build a suite of tests for an app that ensure consistent functionality as the app evolves, and run the tests locally and/or in a CI environment like Github Actions.\n\nNote\n\nAppTest only supports testing a single page of an app per instance. For multipage apps, each page will need to be tested separately. AppTest is not yet compatible with multipage apps using st.navigation and st.Page.\n\nClass description[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L98 \"View st.AppTest source code on GitHub\")\n\nst.testing.v1.AppTest(script\\_path, \\*, default\\_timeout, args=None, kwargs=None)\n\nMethods\n\n[get](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestget)(element\\_type)\n\nGet elements or widgets of the specified type.\n\n[run](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestrun)(\\*, timeout=None)\n\nRun the script from the current state.\n\n[switch\\_page](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestswitch_page)(page\\_path)\n\nSwitch to another page of the app.\n\nAttributes\n\nsecrets (dict\\[str, Any\\])\n\nDictionary of secrets to be used the simulated app. Use dict-like syntax to set secret values for the simulated app.\n\nsession\\_state (SafeSessionState)\n\nSession State for the simulated app. SafeSessionState object supports read and write operations as usual for Streamlit apps.\n\nquery\\_params (dict\\[str, Any\\])\n\nDictionary of query parameters to be used by the simluated app. Use dict-like syntax to set query\\_params values for the simulated app.\n\n[button](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton)\n\nSequence of all st.button and st.form\\_submit\\_button widgets.\n\n[button\\_group](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton_group)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton_group)\n\nSequence of all st.feedback widgets.\n\n[caption](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcaption)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcaption)\n\nSequence of all st.caption elements.\n\n[chat\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_input)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_input)\n\nSequence of all st.chat\\_input widgets.\n\n[chat\\_message](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_message)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_message)\n\nSequence of all st.chat\\_message elements.\n\n[checkbox](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcheckbox)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcheckbox)\n\nSequence of all st.checkbox widgets.\n\n[code](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcode)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcode)\n\nSequence of all st.code elements.\n\n[color\\_picker](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolor_picker)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolor_picker)\n\nSequence of all st.color\\_picker widgets.\n\n[columns](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolumns)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolumns)\n\nSequence of all columns within st.columns elements.\n\n[dataframe](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdataframe)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdataframe)\n\nSequence of all st.dataframe elements.\n\n[date\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdate_input)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdate_input)\n\nSequence of all st.date\\_input widgets.\n\n[divider](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdivider)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdivider)\n\nSequence of all st.divider elements.\n\n[error](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesterror)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesterror)\n\nSequence of all st.error elements.\n\n[exception](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexception)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexception)\n\nSequence of all st.exception elements.\n\n[expander](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexpander)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexpander)\n\nSequence of all st.expander elements.\n\n[header](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestheader)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestheader)\n\nSequence of all st.header elements.\n\n[info](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestinfo)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestinfo)\n\nSequence of all st.info elements.\n\n[json](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestjson)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestjson)\n\nSequence of all st.json elements.\n\n[latex](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestlatex)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestlatex)\n\nSequence of all st.latex elements.\n\n[main](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmain)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmain)\n\nSequence of elements within the main body of the app.\n\n[markdown](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmarkdown)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmarkdown)\n\nSequence of all st.markdown elements.\n\n[metric](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmetric)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmetric)\n\nSequence of all st.metric elements.\n\n[multiselect](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmultiselect)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestmultiselect)\n\nSequence of all st.multiselect widgets.\n\n[number\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestnumber_input)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestnumber_input)\n\nSequence of all st.number\\_input widgets.\n\n[radio](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestradio)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestradio)\n\nSequence of all st.radio widgets.\n\n[select\\_slider](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselect_slider)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselect_slider)\n\nSequence of all st.select\\_slider widgets.\n\n[selectbox](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselectbox)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestselectbox)\n\nSequence of all st.selectbox widgets.\n\n[sidebar](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsidebar)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsidebar)\n\nSequence of all elements within st.sidebar.\n\n[slider](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestslider)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestslider)\n\nSequence of all st.slider widgets.\n\n[status](/develop/api-reference/app-testing/st.testing.v1.apptest#appteststatus)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#appteststatus)\n\nSequence of all st.status elements.\n\n[subheader](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsubheader)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsubheader)\n\nSequence of all st.subheader elements.\n\n[success](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsuccess)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestsuccess)\n\nSequence of all st.success elements.\n\n[table](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttable)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttable)\n\nSequence of all st.table elements.\n\n[tabs](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttabs)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttabs)\n\nSequence of all tabs within st.tabs elements.\n\n[text](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext)\n\nSequence of all st.text elements.\n\n[text\\_area](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_area)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_area)\n\nSequence of all st.text\\_area widgets.\n\n[text\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_input)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttext_input)\n\nSequence of all st.text\\_input widgets.\n\n[time\\_input](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttime_input)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttime_input)\n\nSequence of all st.time\\_input widgets.\n\n[title](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttitle)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttitle)\n\nSequence of all st.title elements.\n\n[toast](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoast)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoast)\n\nSequence of all st.toast elements.\n\n[toggle](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoggle)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptesttoggle)\n\nSequence of all st.toggle widgets.\n\n[warning](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestwarning)\n\n[](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestwarning)\n\nSequence of all st.warning elements.\n\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#initialize-a-simulated-app-using-apptest)Initialize a simulated app using AppTest\n\n## [](#apptestfrom_file)AppTest.from\\_file\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nCreate an instance of AppTest to simulate an app page defined within a file.\n\nThis option is most convenient for CI workflows and testing of published apps. The script must be executable on its own and so must contain all necessary imports.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L275 \"View st.from_file source code on GitHub\")\n\nAppTest.from\\_file(cls, script\\_path, \\*, default\\_timeout=3)\n\nParameters\n\nscript\\_path (str | Path)\n\nPath to a script file. The path should be absolute or relative to the file calling .from\\_file.\n\ndefault\\_timeout (float)\n\nDefault time in seconds before a script run is timed out. Can be overridden for individual .run() calls.\n\nReturns\n\n(AppTest)\n\nA simulated Streamlit app for testing. The simulated app can be executed via .run().\n\n## [](#apptestfrom_string)AppTest.from\\_string\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nCreate an instance of AppTest to simulate an app page defined within a string.\n\nThis is useful for testing short scripts that fit comfortably as an inline string in the test itself, without having to create a separate file for it. The script must be executable on its own and so must contain all necessary imports.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L178 \"View st.from_string source code on GitHub\")\n\nAppTest.from\\_string(cls, script, \\*, default\\_timeout=3)\n\nParameters\n\nscript (str)\n\nThe string contents of the script to be run.\n\ndefault\\_timeout (float)\n\nDefault time in seconds before a script run is timed out. Can be overridden for individual .run() calls.\n\nReturns\n\n(AppTest)\n\nA simulated Streamlit app for testing. The simulated app can be executed via .run().\n\n## [](#apptestfrom_function)AppTest.from\\_function\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nCreate an instance of AppTest to simulate an app page defined within a function.\n\nThis is similar to AppTest.from\\_string(), but more convenient to write with IDE assistance. The script must be executable on its own and so must contain all necessary imports.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L225 \"View st.from_function source code on GitHub\")\n\nAppTest.from\\_function(cls, script, \\*, default\\_timeout=3, args=None, kwargs=None)\n\nParameters\n\nscript (Callable)\n\nA function whose body will be used as a script. Must be runnable in isolation, so it must include any necessary imports.\n\ndefault\\_timeout (float)\n\nDefault time in seconds before a script run is timed out. Can be overridden for individual .run() calls.\n\nargs (tuple)\n\nAn optional tuple of args to pass to the script function.\n\nkwargs (dict)\n\nAn optional dict of kwargs to pass to the script function.\n\nReturns\n\n(AppTest)\n\nA simulated Streamlit app for testing. The simulated app can be executed via .run().\n\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#run-an-apptest-script)Run an AppTest script\n\n## [](#apptestrun)AppTest.run\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nRun the script from the current state.\n\nThis is equivalent to manually rerunning the app or the rerun that occurs upon user interaction. AppTest.run() must be manually called after updating a widget value or switching pages as script reruns do not occur automatically as they do for live-running Streamlit apps.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L375 \"View st.run source code on GitHub\")\n\nAppTest.run(\\*, timeout=None)\n\nParameters\n\ntimeout (float or None)\n\nThe maximum number of seconds to run the script. If timeout is None (default), Streamlit uses the default timeout set for the instance of AppTest.\n\nReturns\n\n(AppTest)\n\nself\n\n## [](#apptestswitch_page)AppTest.switch\\_page\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSwitch to another page of the app.\n\nThis method does not automatically rerun the app. Use a follow-up call to AppTest.run() to obtain the elements on the selected page.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L398 \"View st.switch_page source code on GitHub\")\n\nAppTest.switch\\_page(page\\_path)\n\nParameters\n\npage\\_path (str)\n\nPath of the page to switch to. The path must be relative to the main script's location (e.g. \"pages/my\\_page.py\").\n\nReturns\n\n(AppTest)\n\nself\n\n# [](/develop/api-reference/app-testing/st.testing.v1.apptest#get-apptest-script-elements)Get AppTest script elements\n\nThe main value of `AppTest` is providing an API to programmatically inspect and interact with the elements and widgets produced by a running Streamlit app. Using the `AppTest.<element type>` properties or `AppTest.get()` method returns a collection of all the elements or widgets of the specified type that would have been displayed by running the app.\n\nNote that you can also retrieve elements within a specific container in the same way - first retrieve the container, then retrieve the elements just in that container.\n\n## [](#apptestget)AppTest.get\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nGet elements or widgets of the specified type.\n\nThis method returns the collection of all elements or widgets of the specified type on the current page. Retrieve a specific element by using its index (order on page) or key lookup.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L1032 \"View st.get source code on GitHub\")\n\nAppTest.get(element\\_type)\n\nParameters\n\nelement\\_type (str)\n\nAn element attribute of AppTest. For example, \"button\", \"caption\", or \"chat\\_input\".\n\nReturns\n\n(Sequence of Elements)\n\nSequence of elements of the given type. Individual elements can be accessed from a Sequence by index (order on the page). When getting and element\\_type that is a widget, individual widgets can be accessed by key. For example, at.get(\"text\")\\[0\\] for the first st.text element or at.get(\"slider\")(key=\"my\\_key\") for the st.slider widget with a given key.\n\n## [](#apptestbutton)AppTest.button\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.button and st.form\\_submit\\_button widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L453 \"View st.button source code on GitHub\")\n\nAppTest.button\n\nReturns\n\n(WidgetList of Button)\n\nSequence of all st.button and st.form\\_submit\\_button widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.button\\[0\\] for the first widget or at.button(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestcaption)AppTest.caption\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.caption elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L482 \"View st.caption source code on GitHub\")\n\nAppTest.caption\n\nReturns\n\n(ElementList of Caption)\n\nSequence of all st.caption elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.caption\\[0\\] for the first element. Caption is an extension of the Element class.\n\n## [](#apptestchat_input)AppTest.chat\\_input\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.chat\\_input widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L496 \"View st.chat_input source code on GitHub\")\n\nAppTest.chat\\_input\n\nReturns\n\n(WidgetList of ChatInput)\n\nSequence of all st.chat\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.chat\\_input\\[0\\] for the first widget or at.chat\\_input(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestchat_message)AppTest.chat\\_message\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.chat\\_message elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L510 \"View st.chat_message source code on GitHub\")\n\nAppTest.chat\\_message\n\nReturns\n\n(Sequence of ChatMessage)\n\nSequence of all st.chat\\_message elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.chat\\_message\\[0\\] for the first element. ChatMessage is an extension of the Block class.\n\n## [](#apptestcheckbox)AppTest.checkbox\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.checkbox widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L524 \"View st.checkbox source code on GitHub\")\n\nAppTest.checkbox\n\nReturns\n\n(WidgetList of Checkbox)\n\nSequence of all st.checkbox widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.checkbox\\[0\\] for the first widget or at.checkbox(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestcode)AppTest.code\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.code elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L538 \"View st.code source code on GitHub\")\n\nAppTest.code\n\nReturns\n\n(ElementList of Code)\n\nSequence of all st.code elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.code\\[0\\] for the first element. Code is an extension of the Element class.\n\n## [](#apptestcolor_picker)AppTest.color\\_picker\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.color\\_picker widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L552 \"View st.color_picker source code on GitHub\")\n\nAppTest.color\\_picker\n\nReturns\n\n(WidgetList of ColorPicker)\n\nSequence of all st.color\\_picker widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.color\\_picker\\[0\\] for the first widget or at.color\\_picker(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestcolumns)AppTest.columns\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all columns within st.columns elements.\n\nEach column within a single st.columns will be returned as a separate Column in the Sequence.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L566 \"View st.columns source code on GitHub\")\n\nAppTest.columns\n\nReturns\n\n(Sequence of Column)\n\nSequence of all columns within st.columns elements. Individual columns can be accessed from an ElementList by index (order on the page). For example, at.columns\\[0\\] for the first column. Column is an extension of the Block class.\n\n## [](#apptestdataframe)AppTest.dataframe\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.dataframe elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L583 \"View st.dataframe source code on GitHub\")\n\nAppTest.dataframe\n\nReturns\n\n(ElementList of Dataframe)\n\nSequence of all st.dataframe elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.dataframe\\[0\\] for the first element. Dataframe is an extension of the Element class.\n\n## [](#apptestdate_input)AppTest.date\\_input\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.date\\_input widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L597 \"View st.date_input source code on GitHub\")\n\nAppTest.date\\_input\n\nReturns\n\n(WidgetList of DateInput)\n\nSequence of all st.date\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.date\\_input\\[0\\] for the first widget or at.date\\_input(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestdivider)AppTest.divider\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.divider elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L611 \"View st.divider source code on GitHub\")\n\nAppTest.divider\n\nReturns\n\n(ElementList of Divider)\n\nSequence of all st.divider elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.divider\\[0\\] for the first element. Divider is an extension of the Element class.\n\n## [](#apptesterror)AppTest.error\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.error elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L625 \"View st.error source code on GitHub\")\n\nAppTest.error\n\nReturns\n\n(ElementList of Error)\n\nSequence of all st.error elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.error\\[0\\] for the first element. Error is an extension of the Element class.\n\n## [](#apptestexception)AppTest.exception\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.exception elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L639 \"View st.exception source code on GitHub\")\n\nAppTest.exception\n\nReturns\n\n(ElementList of Exception)\n\nSequence of all st.exception elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.exception\\[0\\] for the first element. Exception is an extension of the Element class.\n\n## [](#apptestexpander)AppTest.expander\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.expander elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L653 \"View st.expander source code on GitHub\")\n\nAppTest.expander\n\nReturns\n\n(Sequence of Expandable)\n\nSequence of all st.expander elements. Individual elements can be accessed from a Sequence by index (order on the page). For example, at.expander\\[0\\] for the first element. Expandable is an extension of the Block class.\n\n## [](#apptestheader)AppTest.header\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.header elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L667 \"View st.header source code on GitHub\")\n\nAppTest.header\n\nReturns\n\n(ElementList of Header)\n\nSequence of all st.header elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.header\\[0\\] for the first element. Header is an extension of the Element class.\n\n## [](#apptestinfo)AppTest.info\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.info elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L681 \"View st.info source code on GitHub\")\n\nAppTest.info\n\nReturns\n\n(ElementList of Info)\n\nSequence of all st.info elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.info\\[0\\] for the first element. Info is an extension of the Element class.\n\n## [](#apptestjson)AppTest.json\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.json elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L695 \"View st.json source code on GitHub\")\n\nAppTest.json\n\nReturns\n\n(ElementList of Json)\n\nSequence of all st.json elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.json\\[0\\] for the first element. Json is an extension of the Element class.\n\n## [](#apptestlatex)AppTest.latex\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.latex elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L709 \"View st.latex source code on GitHub\")\n\nAppTest.latex\n\nReturns\n\n(ElementList of Latex)\n\nSequence of all st.latex elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.latex\\[0\\] for the first element. Latex is an extension of the Element class.\n\n## [](#apptestmain)AppTest.main\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of elements within the main body of the app.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L427 \"View st.main source code on GitHub\")\n\nAppTest.main\n\nReturns\n\n(Block)\n\nA container of elements. Block can be queried for elements in the same manner as AppTest. For example, Block.checkbox will return all st.checkbox within the associated container.\n\n## [](#apptestmarkdown)AppTest.markdown\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.markdown elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L723 \"View st.markdown source code on GitHub\")\n\nAppTest.markdown\n\nReturns\n\n(ElementList of Markdown)\n\nSequence of all st.markdown elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.markdown\\[0\\] for the first element. Markdown is an extension of the Element class.\n\n## [](#apptestmetric)AppTest.metric\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.metric elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L737 \"View st.metric source code on GitHub\")\n\nAppTest.metric\n\nReturns\n\n(ElementList of Metric)\n\nSequence of all st.metric elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.metric\\[0\\] for the first element. Metric is an extension of the Element class.\n\n## [](#apptestmultiselect)AppTest.multiselect\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.multiselect widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L751 \"View st.multiselect source code on GitHub\")\n\nAppTest.multiselect\n\nReturns\n\n(WidgetList of Multiselect)\n\nSequence of all st.multiselect widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.multiselect\\[0\\] for the first widget or at.multiselect(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestnumber_input)AppTest.number\\_input\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.number\\_input widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L765 \"View st.number_input source code on GitHub\")\n\nAppTest.number\\_input\n\nReturns\n\n(WidgetList of NumberInput)\n\nSequence of all st.number\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.number\\_input\\[0\\] for the first widget or at.number\\_input(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestradio)AppTest.radio\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.radio widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L779 \"View st.radio source code on GitHub\")\n\nAppTest.radio\n\nReturns\n\n(WidgetList of Radio)\n\nSequence of all st.radio widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.radio\\[0\\] for the first widget or at.radio(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestselect_slider)AppTest.select\\_slider\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.select\\_slider widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L793 \"View st.select_slider source code on GitHub\")\n\nAppTest.select\\_slider\n\nReturns\n\n(WidgetList of SelectSlider)\n\nSequence of all st.select\\_slider widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.select\\_slider\\[0\\] for the first widget or at.select\\_slider(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestselectbox)AppTest.selectbox\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.selectbox widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L807 \"View st.selectbox source code on GitHub\")\n\nAppTest.selectbox\n\nReturns\n\n(WidgetList of Selectbox)\n\nSequence of all st.selectbox widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.selectbox\\[0\\] for the first widget or at.selectbox(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestsidebar)AppTest.sidebar\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all elements within st.sidebar.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L440 \"View st.sidebar source code on GitHub\")\n\nAppTest.sidebar\n\nReturns\n\n(Block)\n\nA container of elements. Block can be queried for elements in the same manner as AppTest. For example, Block.checkbox will return all st.checkbox within the associated container.\n\n## [](#apptestslider)AppTest.slider\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.slider widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L821 \"View st.slider source code on GitHub\")\n\nAppTest.slider\n\nReturns\n\n(WidgetList of Slider)\n\nSequence of all st.slider widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.slider\\[0\\] for the first widget or at.slider(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestsubheader)AppTest.subheader\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.subheader elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L835 \"View st.subheader source code on GitHub\")\n\nAppTest.subheader\n\nReturns\n\n(ElementList of Subheader)\n\nSequence of all st.subheader elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.subheader\\[0\\] for the first element. Subheader is an extension of the Element class.\n\n## [](#apptestsuccess)AppTest.success\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.success elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L849 \"View st.success source code on GitHub\")\n\nAppTest.success\n\nReturns\n\n(ElementList of Success)\n\nSequence of all st.success elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.success\\[0\\] for the first element. Success is an extension of the Element class.\n\n## [](#appteststatus)AppTest.status\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.status elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L863 \"View st.status source code on GitHub\")\n\nAppTest.status\n\nReturns\n\n(Sequence of Status)\n\nSequence of all st.status elements. Individual elements can be accessed from a Sequence by index (order on the page). For example, at.status\\[0\\] for the first element. Status is an extension of the Block class.\n\n## [](#apptesttable)AppTest.table\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.table elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L877 \"View st.table source code on GitHub\")\n\nAppTest.table\n\nReturns\n\n(ElementList of Table)\n\nSequence of all st.table elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.table\\[0\\] for the first element. Table is an extension of the Element class.\n\n## [](#apptesttabs)AppTest.tabs\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all tabs within st.tabs elements.\n\nEach tab within a single st.tabs will be returned as a separate Tab in the Sequence. Additionally, the tab labels are forwarded to each Tab element as a property. For example, st.tabs(\"A\",\"B\") will yield two Tab objects, with Tab.label returning \"A\" and \"B\", respectively.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L891 \"View st.tabs source code on GitHub\")\n\nAppTest.tabs\n\nReturns\n\n(Sequence of Tab)\n\nSequence of all tabs within st.tabs elements. Individual tabs can be accessed from an ElementList by index (order on the page). For example, at.tabs\\[0\\] for the first tab. Tab is an extension of the Block class.\n\n## [](#apptesttext)AppTest.text\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.text elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L911 \"View st.text source code on GitHub\")\n\nAppTest.text\n\nReturns\n\n(ElementList of Text)\n\nSequence of all st.text elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.text\\[0\\] for the first element. Text is an extension of the Element class.\n\n## [](#apptesttext_area)AppTest.text\\_area\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.text\\_area widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L925 \"View st.text_area source code on GitHub\")\n\nAppTest.text\\_area\n\nReturns\n\n(WidgetList of TextArea)\n\nSequence of all st.text\\_area widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.text\\_area\\[0\\] for the first widget or at.text\\_area(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptesttext_input)AppTest.text\\_input\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.text\\_input widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L939 \"View st.text_input source code on GitHub\")\n\nAppTest.text\\_input\n\nReturns\n\n(WidgetList of TextInput)\n\nSequence of all st.text\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.text\\_input\\[0\\] for the first widget or at.text\\_input(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptesttime_input)AppTest.time\\_input\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.time\\_input widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L953 \"View st.time_input source code on GitHub\")\n\nAppTest.time\\_input\n\nReturns\n\n(WidgetList of TimeInput)\n\nSequence of all st.time\\_input widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.time\\_input\\[0\\] for the first widget or at.time\\_input(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptesttitle)AppTest.title\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.title elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L967 \"View st.title source code on GitHub\")\n\nAppTest.title\n\nReturns\n\n(ElementList of Title)\n\nSequence of all st.title elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.title\\[0\\] for the first element. Title is an extension of the Element class.\n\n## [](#apptesttoast)AppTest.toast\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.toast elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L981 \"View st.toast source code on GitHub\")\n\nAppTest.toast\n\nReturns\n\n(ElementList of Toast)\n\nSequence of all st.toast elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.toast\\[0\\] for the first element. Toast is an extension of the Element class.\n\n## [](#apptesttoggle)AppTest.toggle\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.toggle widgets.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L995 \"View st.toggle source code on GitHub\")\n\nAppTest.toggle\n\nReturns\n\n(WidgetList of Toggle)\n\nSequence of all st.toggle widgets. Individual widgets can be accessed from a WidgetList by index (order on the page) or key. For example, at.toggle\\[0\\] for the first widget or at.toggle(key=\"my\\_key\") for a widget with a given key.\n\n## [](#apptestwarning)AppTest.warning\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nSequence of all st.warning elements.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/testing/v1/app_test.py#L1009 \"View st.warning source code on GitHub\")\n\nAppTest.warning\n\nReturns\n\n(ElementList of Warning)\n\nSequence of all st.warning elements. Individual elements can be accessed from an ElementList by index (order on the page). For example, at.warning\\[0\\] for the first element. Warning is an extension of the Element class.\n\n[_arrow\\_back_Previous: App testing](/develop/api-reference/app-testing)[_arrow\\_forward_Next: Testing element classes](/develop/api-reference/app-testing/testing-element-classes)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382967.4210763
    },
    {
      "url": "https://docs.streamlit.io/",
      "content": {
        "type": "html",
        "raw_length": 6052,
        "title": null,
        "text": "Streamlit documentation\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](#Streamlit-documentation)Streamlit documentation\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n[_install\\_desktop_\n#### Setup and installation\nGet set up to start working with Streamlit.\n](/get-started/installation)\n[_dvr_\n#### API reference\nLearn about our APIs, with actionable explanations of specific functions and features.\n](/develop/api-reference)\n[_grid\\_view_\n#### App gallery\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n](https://streamlit.io/gallery)\n## [](#How-to-use-our-docs)How to use our docs\n[_rocket\\_launch_](/get-started)\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n[_description_](/develop)\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n[_cloud_](/deploy)\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n[_school_](/knowledge-base)\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n## What's new\n[_view\\_column_\n#### Multiselect columns\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n#### Color palette\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n#### Bar chart sorting\nYou can sort the bars in `st.bar_chart`.\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n#### Default tab\nYou can specify the default tab in `st.tabs`.\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n#### Chart column colors\nYou can set the color of chart columns.\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n#### Audio sample rate\nYou can configure the sample rate of audio in `st.audio_input`.\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n## Latest blog posts\n[View all updates](https://blog.streamlit.io/)\n## Join the community\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n[View forum](https://discuss.streamlit.io)\n![](/join.png)\n## Other Media\n*\n[\n##### GitHub\nView the Streamlit source code and issue tracker.\n](https://github.com/streamlit)\n*\n[\n##### YouTube\nWatch screencasts made by the Streamlit team and the community.\n](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*\n[\n##### Twitter\nFollow @streamlit on Twitter to keep up with the latest news.\n](https://twitter.com/streamlit)\n*\n[\n##### LinkedIn\nFollow @streamlit on the world's largest professional network.\n](https://www.linkedin.com/company/streamlit)\n*\n[\n##### Newsletter\nSign up for communications from Streamlit.\n](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n[_arrow\\_forward_Next: Get started](/get-started)\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit documentation\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n# [](#Streamlit-documentation)Streamlit documentation\n\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n\n[_install\\_desktop_\n\n#### Setup and installation\n\nGet set up to start working with Streamlit.\n\n\n\n](/get-started/installation)\n\n[_dvr_\n\n#### API reference\n\nLearn about our APIs, with actionable explanations of specific functions and features.\n\n\n\n](/develop/api-reference)\n\n[_grid\\_view_\n\n#### App gallery\n\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n\n\n\n](https://streamlit.io/gallery)\n\n## [](#How-to-use-our-docs)How to use our docs\n\n[_rocket\\_launch_](/get-started)\n\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n\n[_description_](/develop)\n\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n\n[_cloud_](/deploy)\n\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n\n[_school_](/knowledge-base)\n\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n\n## What's new\n\n[_view\\_column_\n\n#### Multiselect columns\n\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n\n#### Color palette\n\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n\n#### Bar chart sorting\n\nYou can sort the bars in `st.bar_chart`.\n\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n\n#### Default tab\n\nYou can specify the default tab in `st.tabs`.\n\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n\n#### Chart column colors\n\nYou can set the color of chart columns.\n\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n\n#### Audio sample rate\n\nYou can configure the sample rate of audio in `st.audio_input`.\n\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n\n## Latest blog posts\n\n[View all updates](https://blog.streamlit.io/)\n\n## Join the community\n\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n\n[View forum](https://discuss.streamlit.io)\n\n![](/join.png)\n\n## Other Media\n\n*   [\n    \n    ##### GitHub\n    \n    View the Streamlit source code and issue tracker.\n    \n    \n    \n    ](https://github.com/streamlit)\n*   [\n    \n    ##### YouTube\n    \n    Watch screencasts made by the Streamlit team and the community.\n    \n    \n    \n    ](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*   [\n    \n    ##### Twitter\n    \n    Follow @streamlit on Twitter to keep up with the latest news.\n    \n    \n    \n    ](https://twitter.com/streamlit)\n*   [\n    \n    ##### LinkedIn\n    \n    Follow @streamlit on the world's largest professional network.\n    \n    \n    \n    ](https://www.linkedin.com/company/streamlit)\n*   [\n    \n    ##### Newsletter\n    \n    Sign up for communications from Streamlit.\n    \n    \n    \n    ](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n\n[_arrow\\_forward_Next: Get started](/get-started)\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382968.2016108
    },
    {
      "url": "https://docs.streamlit.io/get-started/tutorials",
      "content": {
        "type": "html",
        "raw_length": 3264,
        "title": null,
        "text": "First steps building Streamlit apps - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_remove_\n*\n[Create an app](/get-started/tutorials/create-an-app)\n*\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app)\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Get started](/get-started)/\n*\n[First steps](/get-started/tutorials)\n# [](/get-started/tutorials#first-steps-building-streamlit-apps)First steps building Streamlit apps\nIf you've just read through our [Basic concepts](/get-started/fundamentals/main-concepts) and want to get your hands on Streamlit. Check out these tutorials. Make sure you have [installed Streamlit](/get-started/installation) so you can execute the code yourself.\n[_description_](/get-started/tutorials/create-an-app)\n[Create an app](/get-started/tutorials/create-an-app) uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n[_auto\\_stories_](/get-started/tutorials/create-a-multipage-app)\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app) walks through the easy steps to add pages to your app.\n[_arrow\\_back_Previous: Fundamentals](/get-started/fundamentals)[_arrow\\_forward_Next: Create an app](/get-started/tutorials/create-an-app)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "First steps building Streamlit apps - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _remove_\n        \n        *   [Create an app](/get-started/tutorials/create-an-app)\n            \n        *   [Create a multipage app](/get-started/tutorials/create-a-multipage-app)\n            \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Get started](/get-started)/\n*   [First steps](/get-started/tutorials)\n\n# [](/get-started/tutorials#first-steps-building-streamlit-apps)First steps building Streamlit apps\n\nIf you've just read through our [Basic concepts](/get-started/fundamentals/main-concepts) and want to get your hands on Streamlit. Check out these tutorials. Make sure you have [installed Streamlit](/get-started/installation) so you can execute the code yourself.\n\n[_description_](/get-started/tutorials/create-an-app)\n\n[Create an app](/get-started/tutorials/create-an-app) uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n\n[_auto\\_stories_](/get-started/tutorials/create-a-multipage-app)\n\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app) walks through the easy steps to add pages to your app.\n\n[_arrow\\_back_Previous: Fundamentals](/get-started/fundamentals)[_arrow\\_forward_Next: Create an app](/get-started/tutorials/create-an-app)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761382968.2106376
    }
  ]
}
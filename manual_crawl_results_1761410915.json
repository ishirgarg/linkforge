{
  "crawl_info": {
    "documentation_url": "https://docs.streamlit.io",
    "total_urls_found": 28,
    "urls_scraped": 28,
    "successful_scrapes": 28,
    "failed_scrapes": 0,
    "crawled_at": "2025-10-25 09:48:35"
  },
  "all_urls_found": [
    "https://docs.streamlit.io/develop/api-reference/widgets/st.audio_input?utm_source=streamlit",
    "https://docs.streamlit.io/get-started/fundamentals",
    "https://docs.streamlit.io/knowledge-base/deploy",
    "https://docs.streamlit.io/deploy/snowflake",
    "https://docs.streamlit.io/get-started/tutorials",
    "https://docs.streamlit.io/develop/concepts",
    "https://docs.streamlit.io/develop/api-reference/charts/st.bar_chart?utm_source=streamlit",
    "https://docs.streamlit.io/knowledge-base",
    "https://docs.streamlit.io",
    "https://docs.streamlit.io/",
    "https://docs.streamlit.io#How-to-use-our-docs",
    "https://docs.streamlit.io/develop",
    "https://docs.streamlit.io/get-started",
    "https://docs.streamlit.io/knowledge-base/dependencies",
    "https://docs.streamlit.io/deploy/streamlit-community-cloud",
    "https://docs.streamlit.io/get-started/installation",
    "https://docs.streamlit.io/develop/api-reference",
    "https://docs.streamlit.io/develop/tutorials",
    "https://docs.streamlit.io#Streamlit-documentation",
    "https://docs.streamlit.io/deploy",
    "https://docs.streamlit.io/develop/api-reference/layout/st.tabs?utm_source=streamlit",
    "https://docs.streamlit.io/develop/quick-reference",
    "https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit",
    "https://docs.streamlit.io/deploy/tutorials",
    "https://docs.streamlit.io/deploy/concepts",
    "https://docs.streamlit.io/knowledge-base/using-streamlit",
    "https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit",
    "https://docs.streamlit.io/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette"
  ],
  "scraped_data": [
    {
      "url": "https://docs.streamlit.io/knowledge-base/dependencies",
      "content": {
        "type": "html",
        "raw_length": 2979,
        "title": null,
        "text": "Installing dependencies - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Knowledge base](/knowledge-base)/\n*\n[Installing dependencies](/knowledge-base/dependencies)\n# [](/knowledge-base/dependencies#installing-dependencies)Installing dependencies\n*\n[ModuleNotFoundError: No module named](/knowledge-base/dependencies/module-not-found-error)\n*\n[ImportError: libGL.so.1: cannot open shared object file: No such file or directory](/knowledge-base/dependencies/libgl)\n*\n[ERROR: No matching distribution found for](/knowledge-base/dependencies/no-matching-distribution)\n*\n[How to install a package not on PyPI/Conda but available on GitHub](/knowledge-base/dependencies/install-package-not-pypi-conda-available-github)\n[_arrow\\_back_Previous: FAQ](/knowledge-base/using-streamlit)[_arrow\\_forward_Next: How to install a package not on PyPI or Conda but available on GitHub](/knowledge-base/dependencies/install-package-not-pypi-conda-available-github)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Installing dependencies - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Knowledge base](/knowledge-base)/\n*   [Installing dependencies](/knowledge-base/dependencies)\n\n# [](/knowledge-base/dependencies#installing-dependencies)Installing dependencies\n\n*   [ModuleNotFoundError: No module named](/knowledge-base/dependencies/module-not-found-error)\n*   [ImportError: libGL.so.1: cannot open shared object file: No such file or directory](/knowledge-base/dependencies/libgl)\n*   [ERROR: No matching distribution found for](/knowledge-base/dependencies/no-matching-distribution)\n*   [How to install a package not on PyPI/Conda but available on GitHub](/knowledge-base/dependencies/install-package-not-pypi-conda-available-github)\n\n[_arrow\\_back_Previous: FAQ](/knowledge-base/using-streamlit)[_arrow\\_forward_Next: How to install a package not on PyPI or Conda but available on GitHub](/knowledge-base/dependencies/install-package-not-pypi-conda-available-github)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.2139893
    },
    {
      "url": "https://docs.streamlit.io/deploy/streamlit-community-cloud",
      "content": {
        "type": "html",
        "raw_length": 5365,
        "title": null,
        "text": "Streamlit Community Cloud - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_remove_\n*\n[Get started](/deploy/streamlit-community-cloud/get-started)\n_add_\n*\n[Deploy your app](/deploy/streamlit-community-cloud/deploy-your-app)\n_add_\n*\n[Manage your app](/deploy/streamlit-community-cloud/manage-your-app)\n_add_\n*\n[Share your app](/deploy/streamlit-community-cloud/share-your-app)\n_add_\n*\n[Manage your account](/deploy/streamlit-community-cloud/manage-your-account)\n_add_\n*\n[Status and limitations](/deploy/streamlit-community-cloud/status)\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)/\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n# [](/deploy/streamlit-community-cloud#welcome-to-streamlit-community-cloud)Welcome to Streamlit Community Cloud\nWith Streamlit Community Cloud, you can create, deploy, and manage your Streamlit apps — all for free. Share your apps with the world and build a customized profile page to display your work. Your Community Cloud account connects directly to your GitHub repositories (public or private). Most apps will launch in only a few minutes. Community Cloud handles all of the containerization, so deploying is easy. Bring your own code, or start from one of our popular templates. Rapidly prototype, explore, and update apps by simply changing your code in GitHub. Most changes appear immediately!\nWant to avoid the work of setting up a local development environment? Community Cloud can help you quickly configure a codespace to develop in the cloud. Start coding or editing a Streamlit app with just a few clicks. See [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).\nGo to our [Community Cloud quickstart](/deploy/streamlit-community-cloud/get-started/quickstart) to speed-run through creating your account, deploying an example app, and editing it using GitHub Codespaces. If you haven't built your first Streamlit app yet, see [Get started with Streamlit](/get-started).\n[_arrow\\_forward_](/deploy/streamlit-community-cloud/get-started)\n[Get started.](/deploy/streamlit-community-cloud/get-started) Learn about Streamlit Community Cloud accounts and how to create one.\n[_flight\\_takeoff_](/deploy/streamlit-community-cloud/deploy-your-app)\n[Deploy your app.](/deploy/streamlit-community-cloud/deploy-your-app) A step-by-step guide on how to get your app deployed.\n[_settings_](/deploy/streamlit-community-cloud/manage-your-app)\n[Manage your app.](/deploy/streamlit-community-cloud/manage-your-app) Access logs, reboot apps, set favorites, and more. Jump into a GitHub codespace to edit your app in the cloud.\n[_share_](/deploy/streamlit-community-cloud/share-your-app)\n[Share your app.](/deploy/streamlit-community-cloud/share-your-app) Share or embed your app.\n[_manage\\_accounts_](/deploy/streamlit-community-cloud/manage-your-account)\n[Manage your account.](/deploy/streamlit-community-cloud/manage-your-account) Update your email, manage connections, or delete your account.\n[_arrow\\_back_Previous: Concepts](/deploy/concepts)[_arrow\\_forward_Next: Get started](/deploy/streamlit-community-cloud/get-started)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit Community Cloud - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _remove_\n        \n        *   [Get started](/deploy/streamlit-community-cloud/get-started)\n            \n            _add_\n            \n        *   [Deploy your app](/deploy/streamlit-community-cloud/deploy-your-app)\n            \n            _add_\n            \n        *   [Manage your app](/deploy/streamlit-community-cloud/manage-your-app)\n            \n            _add_\n            \n        *   [Share your app](/deploy/streamlit-community-cloud/share-your-app)\n            \n            _add_\n            \n        *   [Manage your account](/deploy/streamlit-community-cloud/manage-your-account)\n            \n            _add_\n            \n        *   [Status and limitations](/deploy/streamlit-community-cloud/status)\n            \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)/\n*   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n\n# [](/deploy/streamlit-community-cloud#welcome-to-streamlit-community-cloud)Welcome to Streamlit Community Cloud\n\nWith Streamlit Community Cloud, you can create, deploy, and manage your Streamlit apps — all for free. Share your apps with the world and build a customized profile page to display your work. Your Community Cloud account connects directly to your GitHub repositories (public or private). Most apps will launch in only a few minutes. Community Cloud handles all of the containerization, so deploying is easy. Bring your own code, or start from one of our popular templates. Rapidly prototype, explore, and update apps by simply changing your code in GitHub. Most changes appear immediately!\n\nWant to avoid the work of setting up a local development environment? Community Cloud can help you quickly configure a codespace to develop in the cloud. Start coding or editing a Streamlit app with just a few clicks. See [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).\n\nGo to our [Community Cloud quickstart](/deploy/streamlit-community-cloud/get-started/quickstart) to speed-run through creating your account, deploying an example app, and editing it using GitHub Codespaces. If you haven't built your first Streamlit app yet, see [Get started with Streamlit](/get-started).\n\n[_arrow\\_forward_](/deploy/streamlit-community-cloud/get-started)\n\n[Get started.](/deploy/streamlit-community-cloud/get-started) Learn about Streamlit Community Cloud accounts and how to create one.\n\n[_flight\\_takeoff_](/deploy/streamlit-community-cloud/deploy-your-app)\n\n[Deploy your app.](/deploy/streamlit-community-cloud/deploy-your-app) A step-by-step guide on how to get your app deployed.\n\n[_settings_](/deploy/streamlit-community-cloud/manage-your-app)\n\n[Manage your app.](/deploy/streamlit-community-cloud/manage-your-app) Access logs, reboot apps, set favorites, and more. Jump into a GitHub codespace to edit your app in the cloud.\n\n[_share_](/deploy/streamlit-community-cloud/share-your-app)\n\n[Share your app.](/deploy/streamlit-community-cloud/share-your-app) Share or embed your app.\n\n[_manage\\_accounts_](/deploy/streamlit-community-cloud/manage-your-account)\n\n[Manage your account.](/deploy/streamlit-community-cloud/manage-your-account) Update your email, manage connections, or delete your account.\n\n[_arrow\\_back_Previous: Concepts](/deploy/concepts)[_arrow\\_forward_Next: Get started](/deploy/streamlit-community-cloud/get-started)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.2170053
    },
    {
      "url": "https://docs.streamlit.io#How-to-use-our-docs",
      "content": {
        "type": "html",
        "raw_length": 6052,
        "title": null,
        "text": "Streamlit documentation\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](#Streamlit-documentation)Streamlit documentation\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n[_install\\_desktop_\n#### Setup and installation\nGet set up to start working with Streamlit.\n](/get-started/installation)\n[_dvr_\n#### API reference\nLearn about our APIs, with actionable explanations of specific functions and features.\n](/develop/api-reference)\n[_grid\\_view_\n#### App gallery\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n](https://streamlit.io/gallery)\n## [](#How-to-use-our-docs)How to use our docs\n[_rocket\\_launch_](/get-started)\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n[_description_](/develop)\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n[_cloud_](/deploy)\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n[_school_](/knowledge-base)\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n## What's new\n[_view\\_column_\n#### Multiselect columns\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n#### Color palette\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n#### Bar chart sorting\nYou can sort the bars in `st.bar_chart`.\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n#### Default tab\nYou can specify the default tab in `st.tabs`.\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n#### Chart column colors\nYou can set the color of chart columns.\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n#### Audio sample rate\nYou can configure the sample rate of audio in `st.audio_input`.\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n## Latest blog posts\n[View all updates](https://blog.streamlit.io/)\n## Join the community\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n[View forum](https://discuss.streamlit.io)\n![](/join.png)\n## Other Media\n*\n[\n##### GitHub\nView the Streamlit source code and issue tracker.\n](https://github.com/streamlit)\n*\n[\n##### YouTube\nWatch screencasts made by the Streamlit team and the community.\n](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*\n[\n##### Twitter\nFollow @streamlit on Twitter to keep up with the latest news.\n](https://twitter.com/streamlit)\n*\n[\n##### LinkedIn\nFollow @streamlit on the world's largest professional network.\n](https://www.linkedin.com/company/streamlit)\n*\n[\n##### Newsletter\nSign up for communications from Streamlit.\n](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n[_arrow\\_forward_Next: Get started](/get-started)\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit documentation\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n# [](#Streamlit-documentation)Streamlit documentation\n\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n\n[_install\\_desktop_\n\n#### Setup and installation\n\nGet set up to start working with Streamlit.\n\n\n\n](/get-started/installation)\n\n[_dvr_\n\n#### API reference\n\nLearn about our APIs, with actionable explanations of specific functions and features.\n\n\n\n](/develop/api-reference)\n\n[_grid\\_view_\n\n#### App gallery\n\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n\n\n\n](https://streamlit.io/gallery)\n\n## [](#How-to-use-our-docs)How to use our docs\n\n[_rocket\\_launch_](/get-started)\n\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n\n[_description_](/develop)\n\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n\n[_cloud_](/deploy)\n\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n\n[_school_](/knowledge-base)\n\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n\n## What's new\n\n[_view\\_column_\n\n#### Multiselect columns\n\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n\n#### Color palette\n\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n\n#### Bar chart sorting\n\nYou can sort the bars in `st.bar_chart`.\n\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n\n#### Default tab\n\nYou can specify the default tab in `st.tabs`.\n\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n\n#### Chart column colors\n\nYou can set the color of chart columns.\n\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n\n#### Audio sample rate\n\nYou can configure the sample rate of audio in `st.audio_input`.\n\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n\n## Latest blog posts\n\n[View all updates](https://blog.streamlit.io/)\n\n## Join the community\n\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n\n[View forum](https://discuss.streamlit.io)\n\n![](/join.png)\n\n## Other Media\n\n*   [\n    \n    ##### GitHub\n    \n    View the Streamlit source code and issue tracker.\n    \n    \n    \n    ](https://github.com/streamlit)\n*   [\n    \n    ##### YouTube\n    \n    Watch screencasts made by the Streamlit team and the community.\n    \n    \n    \n    ](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*   [\n    \n    ##### Twitter\n    \n    Follow @streamlit on Twitter to keep up with the latest news.\n    \n    \n    \n    ](https://twitter.com/streamlit)\n*   [\n    \n    ##### LinkedIn\n    \n    Follow @streamlit on the world's largest professional network.\n    \n    \n    \n    ](https://www.linkedin.com/company/streamlit)\n*   [\n    \n    ##### Newsletter\n    \n    Sign up for communications from Streamlit.\n    \n    \n    \n    ](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n\n[_arrow\\_forward_Next: Get started](/get-started)\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.2269967
    },
    {
      "url": "https://docs.streamlit.io/get-started/installation",
      "content": {
        "type": "html",
        "raw_length": 5442,
        "title": null,
        "text": "Install Streamlit - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_remove_\n*\nLOCAL DEVELOPMENT\n* * *\n*\n[Use Streamlit Playground](/get-started/installation/streamlit-playground)\n*\n[Install via command line](/get-started/installation/command-line)\n*\n[Install via Anaconda Distribution](/get-started/installation/anaconda-distribution)\n*\nCLOUD DEVELOPMENT\n* * *\n*\n[Use GitHub Codespaces](/get-started/installation/community-cloud)\n*\n[Use Snowflake](/get-started/installation/streamlit-in-snowflake)\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Get started](/get-started)/\n*\n[Installation](/get-started/installation)\n# [](/get-started/installation#install-streamlit)Install Streamlit\nThere are multiple ways to set up your development environment and install Streamlit. Developing locally with Python installed on your own computer is the most common scenario.\n_star_\n#### Tip\nTry a Streamlit Playground that runs in your browser — no installation required. (Note that this is not how Streamlit is meant to be used, because it has many downsides. That's why it's a _playground_!)\n[_arrow\\_forward_Instructions for the playground](/get-started/installation/streamlit-playground)\n## [](/get-started/installation#summary-for-experienced-python-developers)Summary for experienced Python developers\n1.\nTo set up your Python environment and test your installation, execute the following terminal commands:\n`pip install streamlit streamlit hello`\n2.\nJump to our [Basic concepts](/get-started/fundamentals/main-concepts).\n## [](/get-started/installation#install-streamlit-on-your-machine)Install Streamlit on your machine\n### [](/get-started/installation#option-1-i-like-the-command-line)Option 1: I like the command line\nInstall Streamlit on your own machine using tools like `venv` and `pip`.\n[_arrow\\_forward_Instructions for the command line](/get-started/installation/command-line)\n### [](/get-started/installation#option-2-i-prefer-a-graphical-interface)Option 2: I prefer a graphical interface\nInstall Streamlit using the Anaconda Distribution graphical user interface. This is also the best approach if you're on Windows or don't have Python set up.\n[_arrow\\_forward_Instructions for Anaconda Distribution](/get-started/installation/anaconda-distribution)\n## [](/get-started/installation#create-an-app-in-the-cloud)Create an app in the cloud\n### [](/get-started/installation#option-1-i-want-a-free-cloud-environment)Option 1: I want a free cloud environment\nUse Streamlit Community Cloud with GitHub Codespaces so you don't have to go through the trouble of installing Python and setting up an environment.\n[_arrow\\_forward_Instructions for GitHub Codespaces](/get-started/installation/community-cloud)\n### [](/get-started/installation#option-2-i-need-something-secure-controlled-and-in-the-cloud)Option 2: I need something secure, controlled, and in the cloud\nUse Streamlit in Snowflake to code your apps in the cloud, right alongside your data with role-based access controls.\n[_arrow\\_forward_Instructions for Snowflake](/get-started/installation/streamlit-in-snowflake)\n[_arrow\\_back_Previous: Get started](/get-started)[_arrow\\_forward_Next: Use Streamlit Playground](/get-started/installation/streamlit-playground)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Install Streamlit - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _remove_\n        \n        *   LOCAL DEVELOPMENT\n            \n            * * *\n            \n        *   [Use Streamlit Playground](/get-started/installation/streamlit-playground)\n            \n        *   [Install via command line](/get-started/installation/command-line)\n            \n        *   [Install via Anaconda Distribution](/get-started/installation/anaconda-distribution)\n            \n        *   CLOUD DEVELOPMENT\n            \n            * * *\n            \n        *   [Use GitHub Codespaces](/get-started/installation/community-cloud)\n            \n        *   [Use Snowflake](/get-started/installation/streamlit-in-snowflake)\n            \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Get started](/get-started)/\n*   [Installation](/get-started/installation)\n\n# [](/get-started/installation#install-streamlit)Install Streamlit\n\nThere are multiple ways to set up your development environment and install Streamlit. Developing locally with Python installed on your own computer is the most common scenario.\n\n_star_\n\n#### Tip\n\nTry a Streamlit Playground that runs in your browser — no installation required. (Note that this is not how Streamlit is meant to be used, because it has many downsides. That's why it's a _playground_!)\n\n[_arrow\\_forward_Instructions for the playground](/get-started/installation/streamlit-playground)\n\n## [](/get-started/installation#summary-for-experienced-python-developers)Summary for experienced Python developers\n\n1.  To set up your Python environment and test your installation, execute the following terminal commands:\n    \n    `pip install streamlit streamlit hello`\n    \n2.  Jump to our [Basic concepts](/get-started/fundamentals/main-concepts).\n    \n\n## [](/get-started/installation#install-streamlit-on-your-machine)Install Streamlit on your machine\n\n### [](/get-started/installation#option-1-i-like-the-command-line)Option 1: I like the command line\n\nInstall Streamlit on your own machine using tools like `venv` and `pip`.\n\n[_arrow\\_forward_Instructions for the command line](/get-started/installation/command-line)\n\n### [](/get-started/installation#option-2-i-prefer-a-graphical-interface)Option 2: I prefer a graphical interface\n\nInstall Streamlit using the Anaconda Distribution graphical user interface. This is also the best approach if you're on Windows or don't have Python set up.\n\n[_arrow\\_forward_Instructions for Anaconda Distribution](/get-started/installation/anaconda-distribution)\n\n## [](/get-started/installation#create-an-app-in-the-cloud)Create an app in the cloud\n\n### [](/get-started/installation#option-1-i-want-a-free-cloud-environment)Option 1: I want a free cloud environment\n\nUse Streamlit Community Cloud with GitHub Codespaces so you don't have to go through the trouble of installing Python and setting up an environment.\n\n[_arrow\\_forward_Instructions for GitHub Codespaces](/get-started/installation/community-cloud)\n\n### [](/get-started/installation#option-2-i-need-something-secure-controlled-and-in-the-cloud)Option 2: I need something secure, controlled, and in the cloud\n\nUse Streamlit in Snowflake to code your apps in the cloud, right alongside your data with role-based access controls.\n\n[_arrow\\_forward_Instructions for Snowflake](/get-started/installation/streamlit-in-snowflake)\n\n[_arrow\\_back_Previous: Get started](/get-started)[_arrow\\_forward_Next: Use Streamlit Playground](/get-started/installation/streamlit-playground)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.2831202
    },
    {
      "url": "https://docs.streamlit.io/get-started",
      "content": {
        "type": "html",
        "raw_length": 3987,
        "title": null,
        "text": "Get started with Streamlit - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Get started](/get-started)\n# [](/get-started#get-started-with-streamlit)Get started with Streamlit\nThis Get Started guide explains how Streamlit works, how to install Streamlit on your preferred operating system, and how to create your first Streamlit app!\n[_downloading_](/get-started/installation)\n[Installation](/get-started/installation) helps you set up your development environment. Walk through installing Streamlit on Windows, macOS, or Linux. Alternatively, code right in your browser with GitHub Codespaces or Streamlit in Snowflake.\n[_description_](/get-started/fundamentals)\n[Fundamentals](/get-started/fundamentals) introduces you to Streamlit's data model and development flow. You'll learn what makes Streamlit the most powerful way to build data apps, including the ability to display and style data, draw charts and maps, add interactive widgets, customize app layouts, cache computation, and define themes.\n[_auto\\_awesome_](/get-started/tutorials)\n[First steps](/get-started/tutorials) walks you through creating apps using core features to fetch and cache data, draw charts, plot information on a map, and use interactive widgets to filter results.\n[_rocket\\_launch_](/get-started/installation/community-cloud)\n[Use GitHub Codespaces](/get-started/installation/community-cloud) if you want to skip past local installation and code right in your browser. This guide uses Streamlit Community Cloud to help you automatically configure a codespace.\n## 30 Days of Streamlit 🎈\n30 Days of Streamlit 🎈 is a free, self-paced 30 day challenge that teaches you how to build and deploy data apps with Streamlit. Complete the daily challenges, share your solutions with us on Twitter and LinkedIn, and stop by the forum with any questions!\n[Start the challenge](https://30days.streamlit.app/)\n![](/30days.png)\n[_arrow\\_forward_Next: Installation](/get-started/installation)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ A"
      },
      "raw_result": "Get started with Streamlit - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Get started](/get-started)\n\n# [](/get-started#get-started-with-streamlit)Get started with Streamlit\n\nThis Get Started guide explains how Streamlit works, how to install Streamlit on your preferred operating system, and how to create your first Streamlit app!\n\n[_downloading_](/get-started/installation)\n\n[Installation](/get-started/installation) helps you set up your development environment. Walk through installing Streamlit on Windows, macOS, or Linux. Alternatively, code right in your browser with GitHub Codespaces or Streamlit in Snowflake.\n\n[_description_](/get-started/fundamentals)\n\n[Fundamentals](/get-started/fundamentals) introduces you to Streamlit's data model and development flow. You'll learn what makes Streamlit the most powerful way to build data apps, including the ability to display and style data, draw charts and maps, add interactive widgets, customize app layouts, cache computation, and define themes.\n\n[_auto\\_awesome_](/get-started/tutorials)\n\n[First steps](/get-started/tutorials) walks you through creating apps using core features to fetch and cache data, draw charts, plot information on a map, and use interactive widgets to filter results.\n\n[_rocket\\_launch_](/get-started/installation/community-cloud)\n\n[Use GitHub Codespaces](/get-started/installation/community-cloud) if you want to skip past local installation and code right in your browser. This guide uses Streamlit Community Cloud to help you automatically configure a codespace.\n\n## 30 Days of Streamlit 🎈\n\n30 Days of Streamlit 🎈 is a free, self-paced 30 day challenge that teaches you how to build and deploy data apps with Streamlit. Complete the daily challenges, share your solutions with us on Twitter and LinkedIn, and stop by the forum with any questions!\n\n[Start the challenge](https://30days.streamlit.app/)\n\n![](/30days.png)\n\n[_arrow\\_forward_Next: Installation](/get-started/installation)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.3516846
    },
    {
      "url": "https://docs.streamlit.io/",
      "content": {
        "type": "html",
        "raw_length": 6052,
        "title": null,
        "text": "Streamlit documentation\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](#Streamlit-documentation)Streamlit documentation\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n[_install\\_desktop_\n#### Setup and installation\nGet set up to start working with Streamlit.\n](/get-started/installation)\n[_dvr_\n#### API reference\nLearn about our APIs, with actionable explanations of specific functions and features.\n](/develop/api-reference)\n[_grid\\_view_\n#### App gallery\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n](https://streamlit.io/gallery)\n## [](#How-to-use-our-docs)How to use our docs\n[_rocket\\_launch_](/get-started)\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n[_description_](/develop)\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n[_cloud_](/deploy)\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n[_school_](/knowledge-base)\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n## What's new\n[_view\\_column_\n#### Multiselect columns\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n#### Color palette\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n#### Bar chart sorting\nYou can sort the bars in `st.bar_chart`.\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n#### Default tab\nYou can specify the default tab in `st.tabs`.\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n#### Chart column colors\nYou can set the color of chart columns.\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n#### Audio sample rate\nYou can configure the sample rate of audio in `st.audio_input`.\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n## Latest blog posts\n[View all updates](https://blog.streamlit.io/)\n## Join the community\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n[View forum](https://discuss.streamlit.io)\n![](/join.png)\n## Other Media\n*\n[\n##### GitHub\nView the Streamlit source code and issue tracker.\n](https://github.com/streamlit)\n*\n[\n##### YouTube\nWatch screencasts made by the Streamlit team and the community.\n](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*\n[\n##### Twitter\nFollow @streamlit on Twitter to keep up with the latest news.\n](https://twitter.com/streamlit)\n*\n[\n##### LinkedIn\nFollow @streamlit on the world's largest professional network.\n](https://www.linkedin.com/company/streamlit)\n*\n[\n##### Newsletter\nSign up for communications from Streamlit.\n](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n[_arrow\\_forward_Next: Get started](/get-started)\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit documentation\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n# [](#Streamlit-documentation)Streamlit documentation\n\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n\n[_install\\_desktop_\n\n#### Setup and installation\n\nGet set up to start working with Streamlit.\n\n\n\n](/get-started/installation)\n\n[_dvr_\n\n#### API reference\n\nLearn about our APIs, with actionable explanations of specific functions and features.\n\n\n\n](/develop/api-reference)\n\n[_grid\\_view_\n\n#### App gallery\n\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n\n\n\n](https://streamlit.io/gallery)\n\n## [](#How-to-use-our-docs)How to use our docs\n\n[_rocket\\_launch_](/get-started)\n\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n\n[_description_](/develop)\n\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n\n[_cloud_](/deploy)\n\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n\n[_school_](/knowledge-base)\n\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n\n## What's new\n\n[_view\\_column_\n\n#### Multiselect columns\n\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n\n#### Color palette\n\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n\n#### Bar chart sorting\n\nYou can sort the bars in `st.bar_chart`.\n\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n\n#### Default tab\n\nYou can specify the default tab in `st.tabs`.\n\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n\n#### Chart column colors\n\nYou can set the color of chart columns.\n\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n\n#### Audio sample rate\n\nYou can configure the sample rate of audio in `st.audio_input`.\n\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n\n## Latest blog posts\n\n[View all updates](https://blog.streamlit.io/)\n\n## Join the community\n\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n\n[View forum](https://discuss.streamlit.io)\n\n![](/join.png)\n\n## Other Media\n\n*   [\n    \n    ##### GitHub\n    \n    View the Streamlit source code and issue tracker.\n    \n    \n    \n    ](https://github.com/streamlit)\n*   [\n    \n    ##### YouTube\n    \n    Watch screencasts made by the Streamlit team and the community.\n    \n    \n    \n    ](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*   [\n    \n    ##### Twitter\n    \n    Follow @streamlit on Twitter to keep up with the latest news.\n    \n    \n    \n    ](https://twitter.com/streamlit)\n*   [\n    \n    ##### LinkedIn\n    \n    Follow @streamlit on the world's largest professional network.\n    \n    \n    \n    ](https://www.linkedin.com/company/streamlit)\n*   [\n    \n    ##### Newsletter\n    \n    Sign up for communications from Streamlit.\n    \n    \n    \n    ](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n\n[_arrow\\_forward_Next: Get started](/get-started)\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.3527286
    },
    {
      "url": "https://docs.streamlit.io/develop/concepts",
      "content": {
        "type": "html",
        "raw_length": 5129,
        "title": null,
        "text": "Development concepts - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_remove_\n*\nCORE\n* * *\n*\n[Architecture and execution](/develop/concepts/architecture)\n_add_\n*\n[Multipage apps](/develop/concepts/multipage-apps)\n_add_\n*\n[App design](/develop/concepts/design)\n_add_\n*\nADDITIONAL\n* * *\n*\n[Connections, secrets, and authentication](/develop/concepts/connections)\n_add_\n*\n[Custom components](/develop/concepts/custom-components)\n_add_\n*\n[Configuration and theming](/develop/concepts/configuration)\n_add_\n*\n[App testing](/develop/concepts/app-testing)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[Concepts](/develop/concepts)\n# [](/develop/concepts#development-concepts)Development concepts\nThis section gives you background on how different parts of Streamlit work.\n[\n##### Streamlit's architecture and execution model\nStreamlit's execution model makes it easy to turn your scripts into beautiful, interactive web apps.\n*\nUnderstand how to run your app.\n*\nUnderstand Streamlit's execution and client-server model.\n*\nUnderstand the primary tools to work with Streamlit reruns.\n](/develop/concepts/architecture)[\n##### Multipage apps\nStreamlit provides an automated way to build multipage apps through directory structure.\n*\nLearn how to structure and configure your multipage app.\n](/develop/concepts/multipage-apps)[\n##### App design considerations\nBring together Streamlit's architecture and execution model to design your app. Work with Streamlit commands to render dynamic and interactic content for your users.\n*\nLearn how to make your apps performant and easy-to-manage.\n*\nLearn how to structure and design your project.\n](/develop/concepts/design)[\n##### Connections and secrets\n*\nLearn how to manage connections and secrets with Streamlit's convenient, built-in features.\n](/develop/concepts/connections)[\n##### Creating custom components\nCustom components extend Streamlit's functionality.\n*\nLearn how to build your own custom component.\n*\nLearn how install a third-party component.\n](/develop/concepts/custom-components)[\n##### Configuration and theming\nStreamlit provides a variety options to customize and configure your app.\n*\nLearn how to work with configuration options, including server settings, client settings, and theming.\n](/develop/concepts/configuration)[\n##### App testing\nStreamlit app testing enables developers to build and run automated tests. Bring your favorite test automation software and enjoy simple syntax to simulate user input and inspect rendered output.\n](/develop/concepts/app-testing)\n[_arrow\\_back_Previous: Develop](/develop)[_arrow\\_forward_Next: Architecture and execution](/develop/concepts/architecture)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Development concepts - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _remove_\n        \n        *   CORE\n            \n            * * *\n            \n        *   [Architecture and execution](/develop/concepts/architecture)\n            \n            _add_\n            \n        *   [Multipage apps](/develop/concepts/multipage-apps)\n            \n            _add_\n            \n        *   [App design](/develop/concepts/design)\n            \n            _add_\n            \n        *   ADDITIONAL\n            \n            * * *\n            \n        *   [Connections, secrets, and authentication](/develop/concepts/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/concepts/custom-components)\n            \n            _add_\n            \n        *   [Configuration and theming](/develop/concepts/configuration)\n            \n            _add_\n            \n        *   [App testing](/develop/concepts/app-testing)\n            \n            _add_\n            \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [Concepts](/develop/concepts)\n\n# [](/develop/concepts#development-concepts)Development concepts\n\nThis section gives you background on how different parts of Streamlit work.\n\n[\n\n##### Streamlit's architecture and execution model\n\nStreamlit's execution model makes it easy to turn your scripts into beautiful, interactive web apps.\n\n*   Understand how to run your app.\n*   Understand Streamlit's execution and client-server model.\n*   Understand the primary tools to work with Streamlit reruns.\n\n](/develop/concepts/architecture)[\n\n##### Multipage apps\n\nStreamlit provides an automated way to build multipage apps through directory structure.\n\n*   Learn how to structure and configure your multipage app.\n\n](/develop/concepts/multipage-apps)[\n\n##### App design considerations\n\nBring together Streamlit's architecture and execution model to design your app. Work with Streamlit commands to render dynamic and interactic content for your users.\n\n*   Learn how to make your apps performant and easy-to-manage.\n*   Learn how to structure and design your project.\n\n](/develop/concepts/design)[\n\n##### Connections and secrets\n\n*   Learn how to manage connections and secrets with Streamlit's convenient, built-in features.\n\n](/develop/concepts/connections)[\n\n##### Creating custom components\n\nCustom components extend Streamlit's functionality.\n\n*   Learn how to build your own custom component.\n*   Learn how install a third-party component.\n\n](/develop/concepts/custom-components)[\n\n##### Configuration and theming\n\nStreamlit provides a variety options to customize and configure your app.\n\n*   Learn how to work with configuration options, including server settings, client settings, and theming.\n\n](/develop/concepts/configuration)[\n\n##### App testing\n\nStreamlit app testing enables developers to build and run automated tests. Bring your favorite test automation software and enjoy simple syntax to simulate user input and inspect rendered output.\n\n](/develop/concepts/app-testing)\n\n[_arrow\\_back_Previous: Develop](/develop)[_arrow\\_forward_Next: Architecture and execution](/develop/concepts/architecture)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.3546872
    },
    {
      "url": "https://docs.streamlit.io/get-started/tutorials",
      "content": {
        "type": "html",
        "raw_length": 3264,
        "title": null,
        "text": "First steps building Streamlit apps - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_remove_\n*\n[Create an app](/get-started/tutorials/create-an-app)\n*\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app)\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Get started](/get-started)/\n*\n[First steps](/get-started/tutorials)\n# [](/get-started/tutorials#first-steps-building-streamlit-apps)First steps building Streamlit apps\nIf you've just read through our [Basic concepts](/get-started/fundamentals/main-concepts) and want to get your hands on Streamlit. Check out these tutorials. Make sure you have [installed Streamlit](/get-started/installation) so you can execute the code yourself.\n[_description_](/get-started/tutorials/create-an-app)\n[Create an app](/get-started/tutorials/create-an-app) uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n[_auto\\_stories_](/get-started/tutorials/create-a-multipage-app)\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app) walks through the easy steps to add pages to your app.\n[_arrow\\_back_Previous: Fundamentals](/get-started/fundamentals)[_arrow\\_forward_Next: Create an app](/get-started/tutorials/create-an-app)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "First steps building Streamlit apps - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _remove_\n        \n        *   [Create an app](/get-started/tutorials/create-an-app)\n            \n        *   [Create a multipage app](/get-started/tutorials/create-a-multipage-app)\n            \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Get started](/get-started)/\n*   [First steps](/get-started/tutorials)\n\n# [](/get-started/tutorials#first-steps-building-streamlit-apps)First steps building Streamlit apps\n\nIf you've just read through our [Basic concepts](/get-started/fundamentals/main-concepts) and want to get your hands on Streamlit. Check out these tutorials. Make sure you have [installed Streamlit](/get-started/installation) so you can execute the code yourself.\n\n[_description_](/get-started/tutorials/create-an-app)\n\n[Create an app](/get-started/tutorials/create-an-app) uses the concepts learned in Fundamentals along with caching to walk through making your first app.\n\n[_auto\\_stories_](/get-started/tutorials/create-a-multipage-app)\n\n[Create a multipage app](/get-started/tutorials/create-a-multipage-app) walks through the easy steps to add pages to your app.\n\n[_arrow\\_back_Previous: Fundamentals](/get-started/fundamentals)[_arrow\\_forward_Next: Create an app](/get-started/tutorials/create-an-app)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.356768
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference/charts/st.bar_chart?utm_source=streamlit",
      "content": {
        "type": "html",
        "raw_length": 17781,
        "title": null,
        "text": "st.bar\\_chart - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_add_\n*\n[Chart elements](/develop/api-reference/charts)\n_remove_\n*\nSIMPLE\n* * *\n*\n[st.area\\_chart](/develop/api-reference/charts/st.area_chart)\n*\n[st.bar\\_chart](/develop/api-reference/charts/st.bar_chart)\n*\n[st.line\\_chart](/develop/api-reference/charts/st.line_chart)\n*\n[st.map](/develop/api-reference/charts/st.map)\n*\n[st.scatter\\_chart](/develop/api-reference/charts/st.scatter_chart)\n*\nADVANCED\n* * *\n*\n[st.altair\\_chart](/develop/api-reference/charts/st.altair_chart)\n*\n[st.bokeh\\_chart](/develop/api-reference/charts/st.bokeh_chart)\n*\n[st.graphviz\\_chart](/develop/api-reference/charts/st.graphviz_chart)\n*\n[st.plotly\\_chart](/develop/api-reference/charts/st.plotly_chart)\n*\n[st.pydeck\\_chart](/develop/api-reference/charts/st.pydeck_chart)\n*\n[st.pyplot](/develop/api-reference/charts/st.pyplot)\n*\n[st.vega\\_lite\\_chart](/develop/api-reference/charts/st.vega_lite_chart)\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)/\n*\n[Chart elements](/develop/api-reference/charts)/\n*\n[st.bar\\_chart](/develop/api-reference/charts/st.bar_chart)\n## [](#stbar_chart)st.bar\\_chart\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nDisplay a bar chart.\nThis is syntax-sugar around st.altair\\_chart. The main difference is this command uses the data's own column and indices to figure out the chart's Altair spec. As a result this is easier to use for many \"just plot this\" scenarios, while being less customizable.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/vega_charts.py#L1107 \"View st.bar_chart source code on GitHub\")\nst.bar\\_chart(data=None, \\*, x=None, y=None, x\\_label=None, y\\_label=None, color=None, horizontal=False, sort=True, stack=None, width=None, height=None, use\\_container\\_width=True)\nParameters\ndata (Anything supported by st.dataframe)\nData to be plotted.\nx (str or None)\nColumn name or key associated to the x-axis data. If x is None (default), Streamlit uses the data index for the x-axis values.\ny (str, Sequence of str, or None)\nColumn name(s) or key(s) associated to the y-axis data. If this is None (default), Streamlit draws the data of all remaining columns as data series. If this is a Sequence of strings, Streamlit draws several series on the same chart by melting your wide-format table into a long-format table behind the scenes.\nx\\_label (str or None)\nThe label for the x-axis. If this is None (default), Streamlit will use the column name specified in x if available, or else no label will be displayed.\ny\\_label (str or None)\nThe label for the y-axis. If this is None (default), Streamlit will use the column name(s) specified in y if available, or else no label will be displayed.\ncolor (str, tuple, Sequence of str, Sequence of tuple, or None)\nThe color to use for different series in this chart.\nFor a bar chart with just one series, this can be:\n*\nNone, to use the default color.\n*\nA hex string like \"#ffaa00\" or \"#ffaa0088\".\n*\nAn RGB or RGBA tuple with the red, green, blue, and alpha components specified as ints from 0 to 255 or floats from 0.0 to 1.0.\nFor a bar chart with multiple series, where the dataframe is in long format (that is, y is None or just one column), this can be:\n*\nNone, to use the default colors.\n*\nThe name of a column in the dataset. Data points will be grouped into series of the same color based on the value of this column. In addition, if the values in this column match one of the color formats above (hex string or color tuple), then that color will be used.\nFor example: if the dataset has 1000 rows, but this column only contains the values \"adult\", \"child\", and \"baby\", then those 1000 datapoints will be grouped into three series whose colors will be automatically selected from the default palette.\nBut, if for the same 1000-row dataset, this column contained the values \"#ffaa00\", \"#f0f\", \"#0000ff\", then then those 1000 datapoints would still be grouped into 3 series, but their colors would be \"#ffaa00\", \"#f0f\", \"#0000ff\" this time around.\nFor a bar chart with multiple series, where the dataframe is in wide format (that is, y is a Sequence of columns), this can be:\n*\nNone, to use the default colors.\n*\nA list of string colors or color tuples to be used for each of the series in the chart. This list should have the same length as the number of y values (e.g. color=\\[\"#fd0\", \"#f0f\", \"#04f\"\\] for three lines).\nYou can set the default colors in the theme.chartCategoryColors configuration option.\nhorizontal (bool)\nWhether to make the bars horizontal. If this is False (default), the bars display vertically. If this is True, Streamlit swaps the x-axis and y-axis and the bars display horizontally.\nsort (bool or str)\nHow to sort the bars. This can be one of the following:\n*\nTrue (default): The bars are sorted automatically along the independent/categorical axis with Altair's default sorting. This also correctly sorts ordered categorical columns (pd.Categorical).\n*\nFalse: The bars are shown in data order without sorting.\n*\nThe name of a column (e.g. \"col1\"): The bars are sorted by that column in ascending order.\n*\nThe name of a column with a minus-sign prefix (e.g. \"-col1\"): The bars are sorted by that column in descending order.\nstack (bool, \"normalize\", \"center\", \"layered\", or None)\nWhether to stack the bars. If this is None (default), Streamlit uses Vega's default. Other values can be as follows:\n*\nTrue: The bars form a non-overlapping, additive stack within the chart.\n*\nFalse: The bars display side by side.\n*\n\"layered\": The bars overlap each other without stacking.\n*\n\"normalize\": The bars are stacked and the total height is normalized to 100% of the height of the chart.\n*\n\"center\": The bars are stacked and shifted to center the total height around an axis.\nwidth (int or None)\nDesired width of the chart expressed in pixels. If width is None (default), Streamlit sets the width of the chart to fit its contents according to the plotting library, up to the width of the parent container. If width is greater than the width of the parent container, Streamlit sets the chart width to match the width of the parent container.\nTo use width, you must set use\\_container\\_width=False.\nheight (int or None)\nDesired height of the chart expressed in pixels. If height is None (default), Streamlit sets the height of the chart to fit its contents according to the plotting library.\nuse\\_container\\_width (bool)\nWhether to override width with the width of the parent container. If use\\_container\\_width is True (default), Streamlit sets the width of the chart to match the width of the parent container. If use\\_container\\_width is False, Streamlit sets the chart's width according to width.\n#### Examples\n**Example 1: Basic bar chart from a dataframe**\nIf you don't use any of the optional parameters, Streamlit plots each column as a series of bars, uses the index as the x values, and labels each series with the column name:\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\ndf = pd.DataFrame(rng(0).standard\\_normal((20, 3)), columns=\\[\"a\", \"b\", \"c\"\\])\nst.bar\\_chart(df)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart.streamlit.app//?utm_medium=oembed&)\n**Example 2: Bar chart from specific dataframe columns**\nYou can choose different columns to use for the x and y values. If your dataframe is in long format (all y-values in one column), you can set the bar colors from another column.\nIf the column contains color strings, the colors will be applied directly and the series will be unlabeled. If the column contains other values, those values will label each series, and the bar colors will be selected from the default color palette. You can configure this color palette in the theme.chartCategoryColors configuration option.\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\ndf = pd.DataFrame(\n{\n\"col1\": list(range(20)) \\* 3,\n\"col2\": rng(0).standard\\_normal(60),\n\"col3\": \\[\"a\"\\] \\* 20 + \\[\"b\"\\] \\* 20 + \\[\"c\"\\] \\* 20,\n}\n)\nst.bar\\_chart(df, x=\"col1\", y=\"col2\", color=\"col3\")\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart1.streamlit.app//?utm_medium=oembed&)\n**Example 3: Bar chart from wide-format dataframe**\nIf your dataframe is in wide format (y-values are in multiple columns), you can pass a list of columns to the y parameter. Each column name becomes a series label. To override the default colors, pass a list of colors to the color parameter, one for each series:\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\ndf = pd.DataFrame(\n{\n\"col1\": list(range(20)),\n\"col2\": rng(0).standard\\_normal(20),\n\"col3\": rng(1).standard\\_normal(20),\n}\n)\nst.bar\\_chart(\ndf,\nx=\"col1\",\ny=\\[\"col2\", \"col3\"\\],\ncolor=\\[\"#FF0000\", \"#0000FF\"\\],\n)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart2.streamlit.app//?utm_medium=oembed&)\n**Example 4: Horizontal bar chart**\nYou can use the horizontal parameter to display horizontal bars instead of vertical bars. This is useful when you have long labels on the x-axis, or when you want to display a large number of categories. This example requires vega\\_datasets to be installed.\nimport streamlit as st\nfrom vega\\_datasets import data\nsource = data.barley()\nst.bar\\_chart(source, x=\"variety\", y=\"yield\", color=\"site\", horizontal=True)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart-horizontal.streamlit.app//?utm_medium=oembed&)\n**Example 5: Unstacked bar chart**\nYou can configure the stacking behavior of the bars by setting the stack parameter. Set it to False to display bars side by side. This example requires vega\\_datasets to be installed.\nimport streamlit as st\nfrom vega\\_datasets import data\nsource = data.barley()\nst.bar\\_chart(source, x=\"year\", y=\"yield\", color=\"site\", stack=False)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart-unstacked.streamlit.app//?utm_medium=oembed&)\n## [](#elementadd_rows)element.add\\_rows\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nConcatenate a dataframe to the bottom of the current one.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/arrow.py#L866 \"View st.add_rows source code on GitHub\")\nelement.add\\_rows(data=None, \\*\\*kwargs)\nParameters\ndata (pandas.DataFrame, pandas.Styler, pyarrow.Table, numpy.ndarray, pyspark.sql.DataFrame, snowflake.snowpark.dataframe.DataFrame, Iterable, dict, or None)\nTable to concat. Optional.\n\\*\\*kwargs (pandas.DataFrame, numpy.ndarray, Iterable, dict, or None)\nThe named dataset to concat. Optional. You can only pass in 1 dataset (including the one in the data parameter).\n#### Example\nimport time\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\ndf1 = pd.DataFrame(\nrng(0).standard\\_normal(size=(50, 20)), columns=(\"col %d\" % i for i in range(20))\n)\ndf2 = pd.DataFrame(\nrng(1).standard\\_normal(size=(50, 20)), columns=(\"col %d\" % i for i in range(20))\n)\nmy\\_table = st.table(df1)\ntime.sleep(1)\nmy\\_table.add\\_rows(df2)\nYou can do the same thing with plots. For example, if you want to add more data to a line chart:\n\\# Assuming df1 and df2 from the example above still exist...\nmy\\_chart = st.line\\_chart(df1)\ntime.sleep(1)\nmy\\_chart.add\\_rows(df2)\nAnd for plots whose datasets are named, you can pass the data with a keyword argument where the key is the name:\nmy\\_chart = st.vega\\_lite\\_chart(\n{\n\"mark\": \"line\",\n\"encoding\": {\"x\": \"a\", \"y\": \"b\"},\n\"datasets\": {\n\"some\\_fancy\\_name\": df1,\n# <-- named dataset\n},\n\"data\": {\"name\": \"some\\_fancy\\_name\"},\n}\n)\nmy\\_chart.add\\_rows(some\\_fancy\\_name=df2)\n# <-- name used as keyword\n[_arrow\\_back_Previous: st.area\\_chart](/develop/api-reference/charts/st.area_chart)[_arrow\\_forward_Next: st.line\\_chart](/develop/api-reference/charts/st.line_chart)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_fo"
      },
      "raw_result": "st.bar\\_chart - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _add_\n            \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _remove_\n            \n            *   SIMPLE\n                \n                * * *\n                \n            *   [st.area\\_chart](/develop/api-reference/charts/st.area_chart)\n                \n            *   [st.bar\\_chart](/develop/api-reference/charts/st.bar_chart)\n                \n            *   [st.line\\_chart](/develop/api-reference/charts/st.line_chart)\n                \n            *   [st.map](/develop/api-reference/charts/st.map)\n                \n            *   [st.scatter\\_chart](/develop/api-reference/charts/st.scatter_chart)\n                \n            *   ADVANCED\n                \n                * * *\n                \n            *   [st.altair\\_chart](/develop/api-reference/charts/st.altair_chart)\n                \n            *   [st.bokeh\\_chart](/develop/api-reference/charts/st.bokeh_chart)\n                \n            *   [st.graphviz\\_chart](/develop/api-reference/charts/st.graphviz_chart)\n                \n            *   [st.plotly\\_chart](/develop/api-reference/charts/st.plotly_chart)\n                \n            *   [st.pydeck\\_chart](/develop/api-reference/charts/st.pydeck_chart)\n                \n            *   [st.pyplot](/develop/api-reference/charts/st.pyplot)\n                \n            *   [st.vega\\_lite\\_chart](/develop/api-reference/charts/st.vega_lite_chart)\n                \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)/\n*   [Chart elements](/develop/api-reference/charts)/\n*   [st.bar\\_chart](/develop/api-reference/charts/st.bar_chart)\n\n## [](#stbar_chart)st.bar\\_chart\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nDisplay a bar chart.\n\nThis is syntax-sugar around st.altair\\_chart. The main difference is this command uses the data's own column and indices to figure out the chart's Altair spec. As a result this is easier to use for many \"just plot this\" scenarios, while being less customizable.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/vega_charts.py#L1107 \"View st.bar_chart source code on GitHub\")\n\nst.bar\\_chart(data=None, \\*, x=None, y=None, x\\_label=None, y\\_label=None, color=None, horizontal=False, sort=True, stack=None, width=None, height=None, use\\_container\\_width=True)\n\nParameters\n\ndata (Anything supported by st.dataframe)\n\nData to be plotted.\n\nx (str or None)\n\nColumn name or key associated to the x-axis data. If x is None (default), Streamlit uses the data index for the x-axis values.\n\ny (str, Sequence of str, or None)\n\nColumn name(s) or key(s) associated to the y-axis data. If this is None (default), Streamlit draws the data of all remaining columns as data series. If this is a Sequence of strings, Streamlit draws several series on the same chart by melting your wide-format table into a long-format table behind the scenes.\n\nx\\_label (str or None)\n\nThe label for the x-axis. If this is None (default), Streamlit will use the column name specified in x if available, or else no label will be displayed.\n\ny\\_label (str or None)\n\nThe label for the y-axis. If this is None (default), Streamlit will use the column name(s) specified in y if available, or else no label will be displayed.\n\ncolor (str, tuple, Sequence of str, Sequence of tuple, or None)\n\nThe color to use for different series in this chart.\n\nFor a bar chart with just one series, this can be:\n\n*   None, to use the default color.\n*   A hex string like \"#ffaa00\" or \"#ffaa0088\".\n*   An RGB or RGBA tuple with the red, green, blue, and alpha components specified as ints from 0 to 255 or floats from 0.0 to 1.0.\n\nFor a bar chart with multiple series, where the dataframe is in long format (that is, y is None or just one column), this can be:\n\n*   None, to use the default colors.\n    \n*   The name of a column in the dataset. Data points will be grouped into series of the same color based on the value of this column. In addition, if the values in this column match one of the color formats above (hex string or color tuple), then that color will be used.\n    \n    For example: if the dataset has 1000 rows, but this column only contains the values \"adult\", \"child\", and \"baby\", then those 1000 datapoints will be grouped into three series whose colors will be automatically selected from the default palette.\n    \n    But, if for the same 1000-row dataset, this column contained the values \"#ffaa00\", \"#f0f\", \"#0000ff\", then then those 1000 datapoints would still be grouped into 3 series, but their colors would be \"#ffaa00\", \"#f0f\", \"#0000ff\" this time around.\n    \n\nFor a bar chart with multiple series, where the dataframe is in wide format (that is, y is a Sequence of columns), this can be:\n\n*   None, to use the default colors.\n*   A list of string colors or color tuples to be used for each of the series in the chart. This list should have the same length as the number of y values (e.g. color=\\[\"#fd0\", \"#f0f\", \"#04f\"\\] for three lines).\n\nYou can set the default colors in the theme.chartCategoryColors configuration option.\n\nhorizontal (bool)\n\nWhether to make the bars horizontal. If this is False (default), the bars display vertically. If this is True, Streamlit swaps the x-axis and y-axis and the bars display horizontally.\n\nsort (bool or str)\n\nHow to sort the bars. This can be one of the following:\n\n*   True (default): The bars are sorted automatically along the independent/categorical axis with Altair's default sorting. This also correctly sorts ordered categorical columns (pd.Categorical).\n*   False: The bars are shown in data order without sorting.\n*   The name of a column (e.g. \"col1\"): The bars are sorted by that column in ascending order.\n*   The name of a column with a minus-sign prefix (e.g. \"-col1\"): The bars are sorted by that column in descending order.\n\nstack (bool, \"normalize\", \"center\", \"layered\", or None)\n\nWhether to stack the bars. If this is None (default), Streamlit uses Vega's default. Other values can be as follows:\n\n*   True: The bars form a non-overlapping, additive stack within the chart.\n*   False: The bars display side by side.\n*   \"layered\": The bars overlap each other without stacking.\n*   \"normalize\": The bars are stacked and the total height is normalized to 100% of the height of the chart.\n*   \"center\": The bars are stacked and shifted to center the total height around an axis.\n\nwidth (int or None)\n\nDesired width of the chart expressed in pixels. If width is None (default), Streamlit sets the width of the chart to fit its contents according to the plotting library, up to the width of the parent container. If width is greater than the width of the parent container, Streamlit sets the chart width to match the width of the parent container.\n\nTo use width, you must set use\\_container\\_width=False.\n\nheight (int or None)\n\nDesired height of the chart expressed in pixels. If height is None (default), Streamlit sets the height of the chart to fit its contents according to the plotting library.\n\nuse\\_container\\_width (bool)\n\nWhether to override width with the width of the parent container. If use\\_container\\_width is True (default), Streamlit sets the width of the chart to match the width of the parent container. If use\\_container\\_width is False, Streamlit sets the chart's width according to width.\n\n#### Examples\n\n**Example 1: Basic bar chart from a dataframe**\n\nIf you don't use any of the optional parameters, Streamlit plots each column as a series of bars, uses the index as the x values, and labels each series with the column name:\n\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\n\ndf = pd.DataFrame(rng(0).standard\\_normal((20, 3)), columns=\\[\"a\", \"b\", \"c\"\\])\n\nst.bar\\_chart(df)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart.streamlit.app//?utm_medium=oembed&)\n\n**Example 2: Bar chart from specific dataframe columns**\n\nYou can choose different columns to use for the x and y values. If your dataframe is in long format (all y-values in one column), you can set the bar colors from another column.\n\nIf the column contains color strings, the colors will be applied directly and the series will be unlabeled. If the column contains other values, those values will label each series, and the bar colors will be selected from the default color palette. You can configure this color palette in the theme.chartCategoryColors configuration option.\n\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\n\ndf = pd.DataFrame(\n    {\n        \"col1\": list(range(20)) \\* 3,\n        \"col2\": rng(0).standard\\_normal(60),\n        \"col3\": \\[\"a\"\\] \\* 20 + \\[\"b\"\\] \\* 20 + \\[\"c\"\\] \\* 20,\n    }\n)\n\nst.bar\\_chart(df, x=\"col1\", y=\"col2\", color=\"col3\")\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart1.streamlit.app//?utm_medium=oembed&)\n\n**Example 3: Bar chart from wide-format dataframe**\n\nIf your dataframe is in wide format (y-values are in multiple columns), you can pass a list of columns to the y parameter. Each column name becomes a series label. To override the default colors, pass a list of colors to the color parameter, one for each series:\n\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\n\ndf = pd.DataFrame(\n    {\n        \"col1\": list(range(20)),\n        \"col2\": rng(0).standard\\_normal(20),\n        \"col3\": rng(1).standard\\_normal(20),\n    }\n)\n\nst.bar\\_chart(\n    df,\n    x=\"col1\",\n    y=\\[\"col2\", \"col3\"\\],\n    color=\\[\"#FF0000\", \"#0000FF\"\\],\n)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart2.streamlit.app//?utm_medium=oembed&)\n\n**Example 4: Horizontal bar chart**\n\nYou can use the horizontal parameter to display horizontal bars instead of vertical bars. This is useful when you have long labels on the x-axis, or when you want to display a large number of categories. This example requires vega\\_datasets to be installed.\n\nimport streamlit as st\nfrom vega\\_datasets import data\n\nsource = data.barley()\n\nst.bar\\_chart(source, x=\"variety\", y=\"yield\", color=\"site\", horizontal=True)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart-horizontal.streamlit.app//?utm_medium=oembed&)\n\n**Example 5: Unstacked bar chart**\n\nYou can configure the stacking behavior of the bars by setting the stack parameter. Set it to False to display bars side by side. This example requires vega\\_datasets to be installed.\n\nimport streamlit as st\nfrom vega\\_datasets import data\n\nsource = data.barley()\n\nst.bar\\_chart(source, x=\"year\", y=\"yield\", color=\"site\", stack=False)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-bar-chart-unstacked.streamlit.app//?utm_medium=oembed&)\n\n## [](#elementadd_rows)element.add\\_rows\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nConcatenate a dataframe to the bottom of the current one.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/arrow.py#L866 \"View st.add_rows source code on GitHub\")\n\nelement.add\\_rows(data=None, \\*\\*kwargs)\n\nParameters\n\ndata (pandas.DataFrame, pandas.Styler, pyarrow.Table, numpy.ndarray, pyspark.sql.DataFrame, snowflake.snowpark.dataframe.DataFrame, Iterable, dict, or None)\n\nTable to concat. Optional.\n\n\\*\\*kwargs (pandas.DataFrame, numpy.ndarray, Iterable, dict, or None)\n\nThe named dataset to concat. Optional. You can only pass in 1 dataset (including the one in the data parameter).\n\n#### Example\n\nimport time\nimport pandas as pd\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\n\ndf1 = pd.DataFrame(\n    rng(0).standard\\_normal(size=(50, 20)), columns=(\"col %d\" % i for i in range(20))\n)\n\ndf2 = pd.DataFrame(\n    rng(1).standard\\_normal(size=(50, 20)), columns=(\"col %d\" % i for i in range(20))\n)\n\nmy\\_table = st.table(df1)\ntime.sleep(1)\nmy\\_table.add\\_rows(df2)\n\nYou can do the same thing with plots. For example, if you want to add more data to a line chart:\n\n\\# Assuming df1 and df2 from the example above still exist...\nmy\\_chart = st.line\\_chart(df1)\ntime.sleep(1)\nmy\\_chart.add\\_rows(df2)\n\nAnd for plots whose datasets are named, you can pass the data with a keyword argument where the key is the name:\n\nmy\\_chart = st.vega\\_lite\\_chart(\n    {\n        \"mark\": \"line\",\n        \"encoding\": {\"x\": \"a\", \"y\": \"b\"},\n        \"datasets\": {\n            \"some\\_fancy\\_name\": df1,  # <-- named dataset\n        },\n        \"data\": {\"name\": \"some\\_fancy\\_name\"},\n    }\n)\nmy\\_chart.add\\_rows(some\\_fancy\\_name=df2)  # <-- name used as keyword\n\n[_arrow\\_back_Previous: st.area\\_chart](/develop/api-reference/charts/st.area_chart)[_arrow\\_forward_Next: st.line\\_chart](/develop/api-reference/charts/st.line_chart)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_fo",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.3587728
    },
    {
      "url": "https://docs.streamlit.io/knowledge-base",
      "content": {
        "type": "html",
        "raw_length": 2970,
        "title": null,
        "text": "Knowledge Base - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Knowledge base](/knowledge-base)\n# [](/knowledge-base#knowledge-base)Knowledge base\nThe knowledge base is a self-serve library of tips, step-by-step tutorials, and articles that answer your questions about creating and deploying Streamlit apps.\n[_quiz_](/knowledge-base/using-streamlit)\n[FAQ](/knowledge-base/using-streamlit) Here are some frequently asked questions about using Streamlit.\n[_downloading_](/knowledge-base/dependencies)\n[Installing dependencies.](/knowledge-base/dependencies) If you run into problems installing dependencies for your Streamlit apps, we've got you covered.\n[_report_](/knowledge-base/deploy)\n[Deployment issues.](/knowledge-base/deploy) Have questions about deploying Streamlit apps to the cloud? This section covers deployment-related issues.\n[_arrow\\_back_Previous: Deploy](/deploy)[_arrow\\_forward_Next: FAQ](/knowledge-base/using-streamlit)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Knowledge Base - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Knowledge base](/knowledge-base)\n\n# [](/knowledge-base#knowledge-base)Knowledge base\n\nThe knowledge base is a self-serve library of tips, step-by-step tutorials, and articles that answer your questions about creating and deploying Streamlit apps.\n\n[_quiz_](/knowledge-base/using-streamlit)\n\n[FAQ](/knowledge-base/using-streamlit) Here are some frequently asked questions about using Streamlit.\n\n[_downloading_](/knowledge-base/dependencies)\n\n[Installing dependencies.](/knowledge-base/dependencies) If you run into problems installing dependencies for your Streamlit apps, we've got you covered.\n\n[_report_](/knowledge-base/deploy)\n\n[Deployment issues.](/knowledge-base/deploy) Have questions about deploying Streamlit apps to the cloud? This section covers deployment-related issues.\n\n[_arrow\\_back_Previous: Deploy](/deploy)[_arrow\\_forward_Next: FAQ](/knowledge-base/using-streamlit)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.4205563
    },
    {
      "url": "https://docs.streamlit.io/deploy/snowflake",
      "content": {
        "type": "html",
        "raw_length": 4836,
        "title": null,
        "text": "Streamlit in Snowflake - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)/\n*\n[Snowflake](/deploy/snowflake)\n# [](/deploy/snowflake#deploy-streamlit-apps-in-snowflake)Deploy Streamlit apps in Snowflake\nHost your apps alongside your data in a single, global platform. Snowflake provides industry-leading features that ensure the highest levels of security for your account, users, data, and apps. If you're looking for an enterprise hosting solution, try Snowflake!\n[_rocket\\_launch_\n#### Streamlit in Snowflake Quickstart\nCreate a free trial account and deploy an app with Streamlit in Snowflake.\n](/get-started/installation/streamlit-in-snowflake?slug=deploy&slug=snowflake)\n[_code_\n#### Examples\nExplore a wide variety of example apps in Snowflake Labs' snowflake-demo-streamlit repository.\n](https://github.com/Snowflake-Labs/snowflake-demo-streamlit?slug=deploy&slug=snowflake)\n[_book_\n#### Get started with Snowflake\nLearn more in Snowflake's documentation.\n](https://docs.snowflake.com/user-guide-getting-started?slug=deploy&slug=snowflake)\nThere are three ways to host Streamlit apps in Snowflake:\n[_bolt_](https://docs.snowflake.com/developer-guide/streamlit/about-streamlit)\n[Streamlit in Snowflake.](https://docs.snowflake.com/developer-guide/streamlit/about-streamlit) Run your Streamlit app as a native object in Snowflake. Enjoy an in-browser editor and minimal work to configure your environment. Share your app with other users in your Snowflake account through role-based access control (RBAC). This is a great way to deploy apps internally for your business. Check out Snowflake docs!\n[_ac\\_unit_](https://docs.snowflake.com/en/developer-guide/native-apps/adding-streamlit)\n[Snowflake Native Apps.](https://docs.snowflake.com/en/developer-guide/native-apps/adding-streamlit) Package your app with data and share it with other Snowflake accounts. This is a great way to share apps and their underlying data with other organizations who use Snowflake. Check out Snowflake docs!\n[_web\\_asset_](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/overview)\n[Snowpark Container Services.](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/overview) Deploy your app in a container that's optimized to run in Snowflake. This is the most flexible option, where you can use any library and assign a public URL to your app. Manage your allowed viewers through your Snowflake account. Check out Snowflake docs!\n_push\\_pin_\n#### Note\nUsing Snowpark Container Services to deploy a Streamlit app requires a compute pool, which is not available in a trial account at this time.\n[_arrow\\_back_Previous: Streamlit Community Cloud](/deploy/streamlit-community-cloud)[_arrow\\_forward_Next: Other platforms](/deploy/tutorials)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Streamlit in Snowflake - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)/\n*   [Snowflake](/deploy/snowflake)\n\n# [](/deploy/snowflake#deploy-streamlit-apps-in-snowflake)Deploy Streamlit apps in Snowflake\n\nHost your apps alongside your data in a single, global platform. Snowflake provides industry-leading features that ensure the highest levels of security for your account, users, data, and apps. If you're looking for an enterprise hosting solution, try Snowflake!\n\n[_rocket\\_launch_\n\n#### Streamlit in Snowflake Quickstart\n\nCreate a free trial account and deploy an app with Streamlit in Snowflake.\n\n\n\n](/get-started/installation/streamlit-in-snowflake?slug=deploy&slug=snowflake)\n\n[_code_\n\n#### Examples\n\nExplore a wide variety of example apps in Snowflake Labs' snowflake-demo-streamlit repository.\n\n\n\n](https://github.com/Snowflake-Labs/snowflake-demo-streamlit?slug=deploy&slug=snowflake)\n\n[_book_\n\n#### Get started with Snowflake\n\nLearn more in Snowflake's documentation.\n\n\n\n](https://docs.snowflake.com/user-guide-getting-started?slug=deploy&slug=snowflake)\n\nThere are three ways to host Streamlit apps in Snowflake:\n\n[_bolt_](https://docs.snowflake.com/developer-guide/streamlit/about-streamlit)\n\n[Streamlit in Snowflake.](https://docs.snowflake.com/developer-guide/streamlit/about-streamlit) Run your Streamlit app as a native object in Snowflake. Enjoy an in-browser editor and minimal work to configure your environment. Share your app with other users in your Snowflake account through role-based access control (RBAC). This is a great way to deploy apps internally for your business. Check out Snowflake docs!\n\n[_ac\\_unit_](https://docs.snowflake.com/en/developer-guide/native-apps/adding-streamlit)\n\n[Snowflake Native Apps.](https://docs.snowflake.com/en/developer-guide/native-apps/adding-streamlit) Package your app with data and share it with other Snowflake accounts. This is a great way to share apps and their underlying data with other organizations who use Snowflake. Check out Snowflake docs!\n\n[_web\\_asset_](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/overview)\n\n[Snowpark Container Services.](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/overview) Deploy your app in a container that's optimized to run in Snowflake. This is the most flexible option, where you can use any library and assign a public URL to your app. Manage your allowed viewers through your Snowflake account. Check out Snowflake docs!\n\n_push\\_pin_\n\n#### Note\n\nUsing Snowpark Container Services to deploy a Streamlit app requires a compute pool, which is not available in a trial account at this time.\n\n[_arrow\\_back_Previous: Streamlit Community Cloud](/deploy/streamlit-community-cloud)[_arrow\\_forward_Next: Other platforms](/deploy/tutorials)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.438552
    },
    {
      "url": "https://docs.streamlit.io/deploy/tutorials",
      "content": {
        "type": "html",
        "raw_length": 3905,
        "title": null,
        "text": "Deployment tutorials - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_remove_\n*\n[Docker](/deploy/tutorials/docker)\n*\n[Kubernetes](/deploy/tutorials/kubernetes)\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)/\n*\n[Other platforms](/deploy/tutorials)\n# [](/deploy/tutorials#deployment-tutorials)Deployment tutorials\nThis sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:\n[![screenshot](/images/deploy/streamlit-cloud.png)\n##### Streamlit Community Cloud\n](/deploy/streamlit-community-cloud/get-started)[![screenshot](/images/deploy/docker.png)\n##### Docker\n](/deploy/tutorials/docker)[![screenshot](/images/deploy/kubernetes.png)\n##### Kubernetes\n](/deploy/tutorials/kubernetes)\nWhile we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:\n*\n[How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).\n*\n[Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.\n*\n[Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.\n*\n[Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.\n*\n[Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.\n*\n[Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).\n[_arrow\\_back_Previous: Snowflake](/deploy/snowflake)[_arrow\\_forward_Next: Docker](/deploy/tutorials/docker)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Deployment tutorials - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _remove_\n        \n        *   [Docker](/deploy/tutorials/docker)\n            \n        *   [Kubernetes](/deploy/tutorials/kubernetes)\n            \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)/\n*   [Other platforms](/deploy/tutorials)\n\n# [](/deploy/tutorials#deployment-tutorials)Deployment tutorials\n\nThis sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:\n\n[![screenshot](/images/deploy/streamlit-cloud.png)\n\n##### Streamlit Community Cloud\n\n](/deploy/streamlit-community-cloud/get-started)[![screenshot](/images/deploy/docker.png)\n\n##### Docker\n\n](/deploy/tutorials/docker)[![screenshot](/images/deploy/kubernetes.png)\n\n##### Kubernetes\n\n](/deploy/tutorials/kubernetes)\n\nWhile we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:\n\n*   [How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).\n*   [Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.\n*   [Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.\n*   [Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.\n*   [Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.\n*   [Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).\n\n[_arrow\\_back_Previous: Snowflake](/deploy/snowflake)[_arrow\\_forward_Next: Docker](/deploy/tutorials/docker)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.4425564
    },
    {
      "url": "https://docs.streamlit.io/knowledge-base/using-streamlit",
      "content": {
        "type": "html",
        "raw_length": 4539,
        "title": null,
        "text": "FAQ - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Knowledge base](/knowledge-base)/\n*\n[FAQ](/knowledge-base/using-streamlit)\n# [](/knowledge-base/using-streamlit#faq)FAQ\nHere are some frequently asked questions about using Streamlit. If you feel something important is missing that everyone needs to know, please [open an issue](https://github.com/streamlit/docs/issues) or [submit a pull request](https://github.com/streamlit/docs/pulls) and we'll be happy to review it!\n*\n[Sanity checks](/knowledge-base/using-streamlit/sanity-checks)\n*\n[How can I make Streamlit watch for changes in other modules I'm importing in my app?](/knowledge-base/using-streamlit/streamlit-watch-changes-other-modules-importing-app)\n*\n[What browsers does Streamlit support?](/knowledge-base/using-streamlit/supported-browsers)\n*\n[Where does st.file\\_uploader store uploaded files and when do they get deleted?](/knowledge-base/using-streamlit/where-file-uploader-store-when-deleted)\n*\n[How do you retrieve the filename of a file uploaded with st.file\\_uploader?](/knowledge-base/using-streamlit/retrieve-filename-uploaded)\n*\n[How to remove \"· Streamlit\" from the app title?](/knowledge-base/using-streamlit/remove-streamlit-app-title)\n*\n[How to download a file in Streamlit?](/knowledge-base/using-streamlit/how-download-file-streamlit)\n*\n[How to download a Pandas DataFrame as a CSV?](/knowledge-base/using-streamlit/how-download-pandas-dataframe-csv)\n*\n[How can I make `st.pydeck_chart` use custom Mapbox styles?](/knowledge-base/using-streamlit/pydeck-chart-custom-mapbox-styles)\n*\n[How to insert elements out of order?](/knowledge-base/using-streamlit/insert-elements-out-of-order)\n*\n[How do I upgrade to the latest version of Streamlit?](/knowledge-base/using-streamlit/how-upgrade-latest-version-streamlit)\n*\n[Widget updating for every second input when using session state](/knowledge-base/using-streamlit/widget-updating-session-state)\n*\n[How do I create an anchor link?](/knowledge-base/using-streamlit/create-anchor-link)\n*\n[How do I enable camera access?](/knowledge-base/using-streamlit/enable-camera)\n*\n[Why does Streamlit restrict nested `st.columns`?](/knowledge-base/using-streamlit/why-streamlit-restrict-nested-columns)\n*\n[What is serializable session state?](/knowledge-base/using-streamlit/serializable-session-state)\n[_arrow\\_back_Previous: Knowledge base](/knowledge-base)[_arrow\\_forward_Next: How do I create an anchor link?](/knowledge-base/using-streamlit/create-anchor-link)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "FAQ - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Knowledge base](/knowledge-base)/\n*   [FAQ](/knowledge-base/using-streamlit)\n\n# [](/knowledge-base/using-streamlit#faq)FAQ\n\nHere are some frequently asked questions about using Streamlit. If you feel something important is missing that everyone needs to know, please [open an issue](https://github.com/streamlit/docs/issues) or [submit a pull request](https://github.com/streamlit/docs/pulls) and we'll be happy to review it!\n\n*   [Sanity checks](/knowledge-base/using-streamlit/sanity-checks)\n*   [How can I make Streamlit watch for changes in other modules I'm importing in my app?](/knowledge-base/using-streamlit/streamlit-watch-changes-other-modules-importing-app)\n*   [What browsers does Streamlit support?](/knowledge-base/using-streamlit/supported-browsers)\n*   [Where does st.file\\_uploader store uploaded files and when do they get deleted?](/knowledge-base/using-streamlit/where-file-uploader-store-when-deleted)\n*   [How do you retrieve the filename of a file uploaded with st.file\\_uploader?](/knowledge-base/using-streamlit/retrieve-filename-uploaded)\n*   [How to remove \"· Streamlit\" from the app title?](/knowledge-base/using-streamlit/remove-streamlit-app-title)\n*   [How to download a file in Streamlit?](/knowledge-base/using-streamlit/how-download-file-streamlit)\n*   [How to download a Pandas DataFrame as a CSV?](/knowledge-base/using-streamlit/how-download-pandas-dataframe-csv)\n*   [How can I make `st.pydeck_chart` use custom Mapbox styles?](/knowledge-base/using-streamlit/pydeck-chart-custom-mapbox-styles)\n*   [How to insert elements out of order?](/knowledge-base/using-streamlit/insert-elements-out-of-order)\n*   [How do I upgrade to the latest version of Streamlit?](/knowledge-base/using-streamlit/how-upgrade-latest-version-streamlit)\n*   [Widget updating for every second input when using session state](/knowledge-base/using-streamlit/widget-updating-session-state)\n*   [How do I create an anchor link?](/knowledge-base/using-streamlit/create-anchor-link)\n*   [How do I enable camera access?](/knowledge-base/using-streamlit/enable-camera)\n*   [Why does Streamlit restrict nested `st.columns`?](/knowledge-base/using-streamlit/why-streamlit-restrict-nested-columns)\n*   [What is serializable session state?](/knowledge-base/using-streamlit/serializable-session-state)\n\n[_arrow\\_back_Previous: Knowledge base](/knowledge-base)[_arrow\\_forward_Next: How do I create an anchor link?](/knowledge-base/using-streamlit/create-anchor-link)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask ",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.4886127
    },
    {
      "url": "https://docs.streamlit.io#Streamlit-documentation",
      "content": {
        "type": "html",
        "raw_length": 6052,
        "title": null,
        "text": "Streamlit documentation\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](#Streamlit-documentation)Streamlit documentation\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n[_install\\_desktop_\n#### Setup and installation\nGet set up to start working with Streamlit.\n](/get-started/installation)\n[_dvr_\n#### API reference\nLearn about our APIs, with actionable explanations of specific functions and features.\n](/develop/api-reference)\n[_grid\\_view_\n#### App gallery\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n](https://streamlit.io/gallery)\n## [](#How-to-use-our-docs)How to use our docs\n[_rocket\\_launch_](/get-started)\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n[_description_](/develop)\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n[_cloud_](/deploy)\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n[_school_](/knowledge-base)\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n## What's new\n[_view\\_column_\n#### Multiselect columns\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n#### Color palette\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n#### Bar chart sorting\nYou can sort the bars in `st.bar_chart`.\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n#### Default tab\nYou can specify the default tab in `st.tabs`.\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n#### Chart column colors\nYou can set the color of chart columns.\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n#### Audio sample rate\nYou can configure the sample rate of audio in `st.audio_input`.\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n## Latest blog posts\n[View all updates](https://blog.streamlit.io/)\n## Join the community\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n[View forum](https://discuss.streamlit.io)\n![](/join.png)\n## Other Media\n*\n[\n##### GitHub\nView the Streamlit source code and issue tracker.\n](https://github.com/streamlit)\n*\n[\n##### YouTube\nWatch screencasts made by the Streamlit team and the community.\n](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*\n[\n##### Twitter\nFollow @streamlit on Twitter to keep up with the latest news.\n](https://twitter.com/streamlit)\n*\n[\n##### LinkedIn\nFollow @streamlit on the world's largest professional network.\n](https://www.linkedin.com/company/streamlit)\n*\n[\n##### Newsletter\nSign up for communications from Streamlit.\n](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n[_arrow\\_forward_Next: Get started](/get-started)\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit documentation\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n# [](#Streamlit-documentation)Streamlit documentation\n\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n\n[_install\\_desktop_\n\n#### Setup and installation\n\nGet set up to start working with Streamlit.\n\n\n\n](/get-started/installation)\n\n[_dvr_\n\n#### API reference\n\nLearn about our APIs, with actionable explanations of specific functions and features.\n\n\n\n](/develop/api-reference)\n\n[_grid\\_view_\n\n#### App gallery\n\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n\n\n\n](https://streamlit.io/gallery)\n\n## [](#How-to-use-our-docs)How to use our docs\n\n[_rocket\\_launch_](/get-started)\n\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n\n[_description_](/develop)\n\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n\n[_cloud_](/deploy)\n\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n\n[_school_](/knowledge-base)\n\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n\n## What's new\n\n[_view\\_column_\n\n#### Multiselect columns\n\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n\n#### Color palette\n\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n\n#### Bar chart sorting\n\nYou can sort the bars in `st.bar_chart`.\n\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n\n#### Default tab\n\nYou can specify the default tab in `st.tabs`.\n\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n\n#### Chart column colors\n\nYou can set the color of chart columns.\n\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n\n#### Audio sample rate\n\nYou can configure the sample rate of audio in `st.audio_input`.\n\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n\n## Latest blog posts\n\n[View all updates](https://blog.streamlit.io/)\n\n## Join the community\n\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n\n[View forum](https://discuss.streamlit.io)\n\n![](/join.png)\n\n## Other Media\n\n*   [\n    \n    ##### GitHub\n    \n    View the Streamlit source code and issue tracker.\n    \n    \n    \n    ](https://github.com/streamlit)\n*   [\n    \n    ##### YouTube\n    \n    Watch screencasts made by the Streamlit team and the community.\n    \n    \n    \n    ](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*   [\n    \n    ##### Twitter\n    \n    Follow @streamlit on Twitter to keep up with the latest news.\n    \n    \n    \n    ](https://twitter.com/streamlit)\n*   [\n    \n    ##### LinkedIn\n    \n    Follow @streamlit on the world's largest professional network.\n    \n    \n    \n    ](https://www.linkedin.com/company/streamlit)\n*   [\n    \n    ##### Newsletter\n    \n    Sign up for communications from Streamlit.\n    \n    \n    \n    ](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n\n[_arrow\\_forward_Next: Get started](/get-started)\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.489624
    },
    {
      "url": "https://docs.streamlit.io/develop/quick-reference",
      "content": {
        "type": "html",
        "raw_length": 3212,
        "title": null,
        "text": "Quick reference - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_remove_\n*\n[Cheat sheet](/develop/quick-reference/cheat-sheet)\n*\n[Release notes](/develop/quick-reference/release-notes)\n_add_\n*\n[Pre-release features](/develop/quick-reference/prerelease)\n*\n[Roadmap_open\\_in\\_new_](https://roadmap.streamlit.app)\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[Quick reference](/develop/quick-reference)\n# [](/develop/quick-reference#quick-reference)Quick reference\n[\n##### Cheatsheet\nA dense list of Streamlit commands with example syntax.\n](/develop/quick-reference/cheat-sheet)[\n##### Release notes\nSee how Streamlit has changed with each new version.\n](/develop/quick-reference/release-notes)[\n##### Pre-release features\nUnderstand how we introduce new features and how you can get your hands on them sooner!\n](/develop/quick-reference/prerelease)[\n##### Roadmap\nGet a sneak peek at what we have scheduled for the next year.\n](https://roadmap.streamlit.app/)\n[_arrow\\_back_Previous: Tutorials](/develop/tutorials)[_arrow\\_forward_Next: Cheat sheet](/develop/quick-reference/cheat-sheet)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Quick reference - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _remove_\n        \n        *   [Cheat sheet](/develop/quick-reference/cheat-sheet)\n            \n        *   [Release notes](/develop/quick-reference/release-notes)\n            \n            _add_\n            \n        *   [Pre-release features](/develop/quick-reference/prerelease)\n            \n        *   [Roadmap_open\\_in\\_new_](https://roadmap.streamlit.app)\n            \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [Quick reference](/develop/quick-reference)\n\n# [](/develop/quick-reference#quick-reference)Quick reference\n\n[\n\n##### Cheatsheet\n\nA dense list of Streamlit commands with example syntax.\n\n](/develop/quick-reference/cheat-sheet)[\n\n##### Release notes\n\nSee how Streamlit has changed with each new version.\n\n](/develop/quick-reference/release-notes)[\n\n##### Pre-release features\n\nUnderstand how we introduce new features and how you can get your hands on them sooner!\n\n](/develop/quick-reference/prerelease)[\n\n##### Roadmap\n\nGet a sneak peek at what we have scheduled for the next year.\n\n](https://roadmap.streamlit.app/)\n\n[_arrow\\_back_Previous: Tutorials](/develop/tutorials)[_arrow\\_forward_Next: Cheat sheet](/develop/quick-reference/cheat-sheet)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.4906828
    },
    {
      "url": "https://docs.streamlit.io/knowledge-base/deploy",
      "content": {
        "type": "html",
        "raw_length": 4011,
        "title": null,
        "text": "Deployment Issues - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Knowledge base](/knowledge-base)/\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](/knowledge-base/deploy#deployment-related-questions-and-errors)Deployment-related questions and errors\n*\n[How do I deploy Streamlit on a domain so it appears to run on a regular port (i.e. port 80)?](/knowledge-base/deploy/deploy-streamlit-domain-port-80)\n*\n[How can I deploy multiple Streamlit apps on different subdomains?](/knowledge-base/deploy/deploy-multiple-streamlit-apps-different-subdomains)\n*\n[Invoking a Python subprocess in a deployed Streamlit app](/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app)\n*\n[Does Streamlit support the WSGI Protocol? (aka Can I deploy Streamlit with gunicorn?)](/knowledge-base/deploy/does-streamlit-support-wsgi-protocol)\n*\n[Argh. This app has gone over its resource limits.](/knowledge-base/deploy/resource-limits)\n*\n[App is not loading when running remotely](/knowledge-base/deploy/remote-start)\n*\n[Authentication without SSO](/knowledge-base/deploy/authentication-without-sso)\n*\n[How do I increase the upload limit of `st.file_uploader` on Streamlit Community Cloud?](/knowledge-base/deploy/increase-file-uploader-limit-streamlit-cloud)\n*\n[Huh. This is isn't supposed to happen message after trying to log in](/knowledge-base/deploy/huh-this-isnt-supposed-to-happen-message-after-trying-to-log-in)\n*\n[Login attempt to Streamlit Community Cloud fails with error 403](/knowledge-base/deploy/login-attempt-to-streamlit-community-cloud-fails-with-error-403)\n*\n[How to submit a support case for Streamlit Community Cloud](/knowledge-base/deploy/how-to-submit-a-support-case-for-streamlit-community-cloud)\n[_arrow\\_back_Previous: Installing dependencies](/knowledge-base/dependencies)[_arrow\\_forward_Next: How can I deploy multiple Streamlit apps on different subdomains?](/knowledge-base/deploy/deploy-multiple-streamlit-apps-different-subdomains)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Deployment Issues - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Knowledge base](/knowledge-base)/\n*   [Deployment issues](/knowledge-base/deploy)\n\n# [](/knowledge-base/deploy#deployment-related-questions-and-errors)Deployment-related questions and errors\n\n*   [How do I deploy Streamlit on a domain so it appears to run on a regular port (i.e. port 80)?](/knowledge-base/deploy/deploy-streamlit-domain-port-80)\n*   [How can I deploy multiple Streamlit apps on different subdomains?](/knowledge-base/deploy/deploy-multiple-streamlit-apps-different-subdomains)\n*   [Invoking a Python subprocess in a deployed Streamlit app](/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app)\n*   [Does Streamlit support the WSGI Protocol? (aka Can I deploy Streamlit with gunicorn?)](/knowledge-base/deploy/does-streamlit-support-wsgi-protocol)\n*   [Argh. This app has gone over its resource limits.](/knowledge-base/deploy/resource-limits)\n*   [App is not loading when running remotely](/knowledge-base/deploy/remote-start)\n*   [Authentication without SSO](/knowledge-base/deploy/authentication-without-sso)\n*   [How do I increase the upload limit of `st.file_uploader` on Streamlit Community Cloud?](/knowledge-base/deploy/increase-file-uploader-limit-streamlit-cloud)\n*   [Huh. This is isn't supposed to happen message after trying to log in](/knowledge-base/deploy/huh-this-isnt-supposed-to-happen-message-after-trying-to-log-in)\n*   [Login attempt to Streamlit Community Cloud fails with error 403](/knowledge-base/deploy/login-attempt-to-streamlit-community-cloud-fails-with-error-403)\n*   [How to submit a support case for Streamlit Community Cloud](/knowledge-base/deploy/how-to-submit-a-support-case-for-streamlit-community-cloud)\n\n[_arrow\\_back_Previous: Installing dependencies](/knowledge-base/dependencies)[_arrow\\_forward_Next: How can I deploy multiple Streamlit apps on different subdomains?](/knowledge-base/deploy/deploy-multiple-streamlit-apps-different-subdomains)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.4916835
    },
    {
      "url": "https://docs.streamlit.io/deploy",
      "content": {
        "type": "html",
        "raw_length": 3051,
        "title": null,
        "text": "Deploy - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)\n# [](/deploy#deploy)Deploy\nGet all the information you need to deploy your app and share it with your users.\n[_book_](/deploy/concepts)\n[Concepts.](/deploy/concepts) Understand the basics of app deployment.\n[_cloud_](/deploy/streamlit-community-cloud)\n[Streamlit Community Cloud.](/deploy/streamlit-community-cloud) Deploy your app on our free platform and join a community of developers who share their apps around the world. This is a great place for your non-commerical, personal, and educational apps.\n[_ac\\_unit_](/deploy/snowflake)\n[Snowflake.](/deploy/snowflake) Deploy your app in Snowflake for a secure, enterprise-grade environment. This is a great place for your business apps.\n[_bolt_](/deploy/tutorials)\n[Other platforms.](/deploy/tutorials) Learn how to deploy your app on a variety of platforms with our convenient collection of tutorials.\n[_arrow\\_back_Previous: Develop](/develop)[_arrow\\_forward_Next: Concepts](/deploy/concepts)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Deploy - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)\n\n# [](/deploy#deploy)Deploy\n\nGet all the information you need to deploy your app and share it with your users.\n\n[_book_](/deploy/concepts)\n\n[Concepts.](/deploy/concepts) Understand the basics of app deployment.\n\n[_cloud_](/deploy/streamlit-community-cloud)\n\n[Streamlit Community Cloud.](/deploy/streamlit-community-cloud) Deploy your app on our free platform and join a community of developers who share their apps around the world. This is a great place for your non-commerical, personal, and educational apps.\n\n[_ac\\_unit_](/deploy/snowflake)\n\n[Snowflake.](/deploy/snowflake) Deploy your app in Snowflake for a secure, enterprise-grade environment. This is a great place for your business apps.\n\n[_bolt_](/deploy/tutorials)\n\n[Other platforms.](/deploy/tutorials) Learn how to deploy your app on a variety of platforms with our convenient collection of tutorials.\n\n[_arrow\\_back_Previous: Develop](/develop)[_arrow\\_forward_Next: Concepts](/deploy/concepts)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.510266
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit",
      "content": {
        "type": "html",
        "raw_length": 14035,
        "title": null,
        "text": "st.column\\_config.MultiselectColumn - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_remove_\n*\n[st.dataframe](/develop/api-reference/data/st.dataframe)\n*\n[st.data\\_editor](/develop/api-reference/data/st.data_editor)\n*\n[st.column\\_config](/develop/api-reference/data/st.column_config)\n_remove_\n*\n[Column](/develop/api-reference/data/st.column_config/st.column_config.column)\n*\n[Text column](/develop/api-reference/data/st.column_config/st.column_config.textcolumn)\n*\n[Number column](/develop/api-reference/data/st.column_config/st.column_config.numbercolumn)\n*\n[Checkbox column](/develop/api-reference/data/st.column_config/st.column_config.checkboxcolumn)\n*\n[Selectbox column](/develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn)\n*\n[Multiselect column](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn)\n*\n[Datetime column](/develop/api-reference/data/st.column_config/st.column_config.datetimecolumn)\n*\n[Date column](/develop/api-reference/data/st.column_config/st.column_config.datecolumn)\n*\n[Time column](/develop/api-reference/data/st.column_config/st.column_config.timecolumn)\n*\n[JSON column](/develop/api-reference/data/st.column_config/st.column_config.jsoncolumn)\n*\n[List column](/develop/api-reference/data/st.column_config/st.column_config.listcolumn)\n*\n[Link column](/develop/api-reference/data/st.column_config/st.column_config.linkcolumn)\n*\n[Image column](/develop/api-reference/data/st.column_config/st.column_config.imagecolumn)\n*\n[Area chart column](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn)\n*\n[Line chart column](/develop/api-reference/data/st.column_config/st.column_config.linechartcolumn)\n*\n[Bar chart column](/develop/api-reference/data/st.column_config/st.column_config.barchartcolumn)\n*\n[Progress column](/develop/api-reference/data/st.column_config/st.column_config.progresscolumn)\n*\n[st.table](/develop/api-reference/data/st.table)\n*\n[st.metric](/develop/api-reference/data/st.metric)\n*\n[st.json](/develop/api-reference/data/st.json)\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)/\n*\n[Data elements](/develop/api-reference/data)/\n*\n[st.column\\_config](/develop/api-reference/data/st.column_config)/\n*\n[Multiselect column](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn)\n## [](#stcolumn_configmultiselectcolumn)st.column\\_config.MultiselectColumn\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nConfigure a multiselect column in st.dataframe or st.data\\_editor.\nThis command needs to be used in the column\\_config parameter of st.dataframe or st.data\\_editor. When used with st.data\\_editor, users can select options from a dropdown menu. You can configure the column to allow freely typed options, too.\nYou can also use this column type to display colored labels in a read-only st.dataframe.\nNote\nEditing for non-string or mixed type lists can cause issues with Arrow serialization. We recommend that you disable editing for these columns or convert all list values to strings.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/lib/column_types.py#L1727 \"View st.MultiselectColumn source code on GitHub\")\nst.column\\_config.MultiselectColumn(label=None, \\*, width=None, help=None, disabled=None, required=None, default=None, options=None, accept\\_new\\_options=None, color=None, format\\_func=None)\nParameters\nlabel (str or None)\nThe label shown at the top of the column. If None (default), the column name is used.\nwidth (\"small\", \"medium\", \"large\", or None)\nThe display width of the column. If this is None (default), the column will be sized to fit the cell contents. Otherwise, this can be one of the following:\n*\n\"small\": 75px wide\n*\n\"medium\": 200px wide\n*\n\"large\": 400px wide\n*\nAn integer specifying the width in pixels\nIf the total width of all columns is less than the width of the dataframe, the remaining space will be distributed evenly among all columns.\nhelp (str or None)\nA tooltip that gets displayed when hovering over the column label. If this is None (default), no tooltip is displayed.\nThe tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the body parameter of st.markdown.\ndisabled (bool or None)\nWhether editing should be disabled for this column. Defaults to False.\nrequired (bool or None)\nWhether edited cells in the column need to have a value. If True, an edited cell can only be submitted if it has a value other than None. Defaults to False.\ndefault (Iterable of str or None)\nSpecifies the default value in this column when a new row is added by the user.\noptions (Iterable of str or None)\nThe options that can be selected during editing.\naccept\\_new\\_options (bool or None)\nWhether the user can add selections that aren't included in options. If this is False (default), the user can only select from the items in options. If this is True, the user can enter new items that don't exist in options.\nWhen a user enters and selects a new item, it is included in the returned cell list value as a string. The new item is not added to the options drop-down menu.\ncolor (str, Iterable of str, or None)\nThe color to use for different options. This can be:\n*\nNone (default): The options are displayed without color.\n*\nA single color value that is used for all options. This can be one of the following strings:\n> *\n\"primary\" to use the primary theme color.\n> *\nA CSS named color name like \"darkBlue\" or \"maroon\".\n> *\nA hex color code like \"#483d8b\" or \"#6A5ACD80\".\n> *\nAn RGB or RGBA color code like \"rgb(255,0,0)\" or \"RGB(70, 130, 180, .7)\".\n> *\nAn HSL or HSLA color code like \"hsl(248, 53%, 58%)\" or \"HSL(147, 50%, 47%, .3)\".\n*\nAn iterable of color values that are mapped to the options. The colors are applied in sequence, cycling through the iterable if there are more options than colors.\nformat\\_func (function or None)\nFunction to modify the display of the options. It receives the raw option defined in options as an argument and should output the label to be shown for that option. When used in st.data\\_editor, this has no impact on the returned value. If this is None (default), the raw option is used as the label.\n#### Examples\n**Example 1: Editable multiselect column**\nTo customize the label colors, provide a list of colors to the color parameter. You can also format the option labels with the format\\_func parameter.\nimport pandas as pd\nimport streamlit as st\ndata\\_df = pd.DataFrame(\n{\n\"category\": \\[\n\\[\"exploration\", \"visualization\"\\],\n\\[\"llm\", \"visualization\"\\],\n\\[\"exploration\"\\],\n\\],\n}\n)\nst.data\\_editor(\ndata\\_df,\ncolumn\\_config={\n\"category\": st.column\\_config.MultiselectColumn(\n\"App Categories\",\nhelp=\"The categories of the app\",\noptions=\\[\n\"exploration\",\n\"visualization\",\n\"llm\",\n\\],\ncolor=\\[\"#ffa421\", \"#803df5\", \"#00c0f2\"\\],\nformat\\_func=lambda x: x.capitalize(),\n),\n},\n)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-multiselect-column-1.streamlit.app//?utm_medium=oembed&)\n**Example 2: Colored tags for st.dataframe**\nWhen using st.dataframe, the multiselect column is read-only and can be used to display colored tags. In this example, the dataframe uses the primary theme color for all tags.\nimport pandas as pd\nimport streamlit as st\ndata\\_df = pd.DataFrame(\n{\n\"category\": \\[\n\\[\"exploration\", \"visualization\"\\],\n\\[\"llm\", \"visualization\"\\],\n\\[\"exploration\"\\],\n\\],\n}\n)\nst.dataframe(\ndata\\_df,\ncolumn\\_config={\n\"category\": st.column\\_config.MultiselectColumn(\n\"App Categories\",\noptions=\\[\"exploration\", \"visualization\", \"llm\"\\],\ncolor=\"primary\",\nformat\\_func=lambda x: x.capitalize(),\n),\n},\n)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-multiselect-column-2.streamlit.app//?utm_medium=oembed&)\n[_arrow\\_back_Previous: Selectbox column](/develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn)[_arrow\\_forward_Next: Datetime column](/develop/api-reference/data/st.column_config/st.column_config.datetimecolumn)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ A"
      },
      "raw_result": "st.column\\_config.MultiselectColumn - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _remove_\n            \n            *   [st.dataframe](/develop/api-reference/data/st.dataframe)\n                \n            *   [st.data\\_editor](/develop/api-reference/data/st.data_editor)\n                \n            *   [st.column\\_config](/develop/api-reference/data/st.column_config)\n                \n                _remove_\n                \n                *   [Column](/develop/api-reference/data/st.column_config/st.column_config.column)\n                    \n                *   [Text column](/develop/api-reference/data/st.column_config/st.column_config.textcolumn)\n                    \n                *   [Number column](/develop/api-reference/data/st.column_config/st.column_config.numbercolumn)\n                    \n                *   [Checkbox column](/develop/api-reference/data/st.column_config/st.column_config.checkboxcolumn)\n                    \n                *   [Selectbox column](/develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn)\n                    \n                *   [Multiselect column](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn)\n                    \n                *   [Datetime column](/develop/api-reference/data/st.column_config/st.column_config.datetimecolumn)\n                    \n                *   [Date column](/develop/api-reference/data/st.column_config/st.column_config.datecolumn)\n                    \n                *   [Time column](/develop/api-reference/data/st.column_config/st.column_config.timecolumn)\n                    \n                *   [JSON column](/develop/api-reference/data/st.column_config/st.column_config.jsoncolumn)\n                    \n                *   [List column](/develop/api-reference/data/st.column_config/st.column_config.listcolumn)\n                    \n                *   [Link column](/develop/api-reference/data/st.column_config/st.column_config.linkcolumn)\n                    \n                *   [Image column](/develop/api-reference/data/st.column_config/st.column_config.imagecolumn)\n                    \n                *   [Area chart column](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn)\n                    \n                *   [Line chart column](/develop/api-reference/data/st.column_config/st.column_config.linechartcolumn)\n                    \n                *   [Bar chart column](/develop/api-reference/data/st.column_config/st.column_config.barchartcolumn)\n                    \n                *   [Progress column](/develop/api-reference/data/st.column_config/st.column_config.progresscolumn)\n                    \n            *   [st.table](/develop/api-reference/data/st.table)\n                \n            *   [st.metric](/develop/api-reference/data/st.metric)\n                \n            *   [st.json](/develop/api-reference/data/st.json)\n                \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)/\n*   [Data elements](/develop/api-reference/data)/\n*   [st.column\\_config](/develop/api-reference/data/st.column_config)/\n*   [Multiselect column](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn)\n\n## [](#stcolumn_configmultiselectcolumn)st.column\\_config.MultiselectColumn\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nConfigure a multiselect column in st.dataframe or st.data\\_editor.\n\nThis command needs to be used in the column\\_config parameter of st.dataframe or st.data\\_editor. When used with st.data\\_editor, users can select options from a dropdown menu. You can configure the column to allow freely typed options, too.\n\nYou can also use this column type to display colored labels in a read-only st.dataframe.\n\nNote\n\nEditing for non-string or mixed type lists can cause issues with Arrow serialization. We recommend that you disable editing for these columns or convert all list values to strings.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/lib/column_types.py#L1727 \"View st.MultiselectColumn source code on GitHub\")\n\nst.column\\_config.MultiselectColumn(label=None, \\*, width=None, help=None, disabled=None, required=None, default=None, options=None, accept\\_new\\_options=None, color=None, format\\_func=None)\n\nParameters\n\nlabel (str or None)\n\nThe label shown at the top of the column. If None (default), the column name is used.\n\nwidth (\"small\", \"medium\", \"large\", or None)\n\nThe display width of the column. If this is None (default), the column will be sized to fit the cell contents. Otherwise, this can be one of the following:\n\n*   \"small\": 75px wide\n*   \"medium\": 200px wide\n*   \"large\": 400px wide\n*   An integer specifying the width in pixels\n\nIf the total width of all columns is less than the width of the dataframe, the remaining space will be distributed evenly among all columns.\n\nhelp (str or None)\n\nA tooltip that gets displayed when hovering over the column label. If this is None (default), no tooltip is displayed.\n\nThe tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the body parameter of st.markdown.\n\ndisabled (bool or None)\n\nWhether editing should be disabled for this column. Defaults to False.\n\nrequired (bool or None)\n\nWhether edited cells in the column need to have a value. If True, an edited cell can only be submitted if it has a value other than None. Defaults to False.\n\ndefault (Iterable of str or None)\n\nSpecifies the default value in this column when a new row is added by the user.\n\noptions (Iterable of str or None)\n\nThe options that can be selected during editing.\n\naccept\\_new\\_options (bool or None)\n\nWhether the user can add selections that aren't included in options. If this is False (default), the user can only select from the items in options. If this is True, the user can enter new items that don't exist in options.\n\nWhen a user enters and selects a new item, it is included in the returned cell list value as a string. The new item is not added to the options drop-down menu.\n\ncolor (str, Iterable of str, or None)\n\nThe color to use for different options. This can be:\n\n*   None (default): The options are displayed without color.\n    \n*   A single color value that is used for all options. This can be one of the following strings:\n    \n    > *   \"primary\" to use the primary theme color.\n    > *   A CSS named color name like \"darkBlue\" or \"maroon\".\n    > *   A hex color code like \"#483d8b\" or \"#6A5ACD80\".\n    > *   An RGB or RGBA color code like \"rgb(255,0,0)\" or \"RGB(70, 130, 180, .7)\".\n    > *   An HSL or HSLA color code like \"hsl(248, 53%, 58%)\" or \"HSL(147, 50%, 47%, .3)\".\n    \n*   An iterable of color values that are mapped to the options. The colors are applied in sequence, cycling through the iterable if there are more options than colors.\n    \n\nformat\\_func (function or None)\n\nFunction to modify the display of the options. It receives the raw option defined in options as an argument and should output the label to be shown for that option. When used in st.data\\_editor, this has no impact on the returned value. If this is None (default), the raw option is used as the label.\n\n#### Examples\n\n**Example 1: Editable multiselect column**\n\nTo customize the label colors, provide a list of colors to the color parameter. You can also format the option labels with the format\\_func parameter.\n\nimport pandas as pd\nimport streamlit as st\n\ndata\\_df = pd.DataFrame(\n    {\n        \"category\": \\[\n            \\[\"exploration\", \"visualization\"\\],\n            \\[\"llm\", \"visualization\"\\],\n            \\[\"exploration\"\\],\n        \\],\n    }\n)\n\nst.data\\_editor(\n    data\\_df,\n    column\\_config={\n        \"category\": st.column\\_config.MultiselectColumn(\n            \"App Categories\",\n            help=\"The categories of the app\",\n            options=\\[\n                \"exploration\",\n                \"visualization\",\n                \"llm\",\n            \\],\n            color=\\[\"#ffa421\", \"#803df5\", \"#00c0f2\"\\],\n            format\\_func=lambda x: x.capitalize(),\n        ),\n    },\n)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-multiselect-column-1.streamlit.app//?utm_medium=oembed&)\n\n**Example 2: Colored tags for st.dataframe**\n\nWhen using st.dataframe, the multiselect column is read-only and can be used to display colored tags. In this example, the dataframe uses the primary theme color for all tags.\n\nimport pandas as pd\nimport streamlit as st\n\ndata\\_df = pd.DataFrame(\n    {\n        \"category\": \\[\n            \\[\"exploration\", \"visualization\"\\],\n            \\[\"llm\", \"visualization\"\\],\n            \\[\"exploration\"\\],\n        \\],\n    }\n)\n\nst.dataframe(\n    data\\_df,\n    column\\_config={\n        \"category\": st.column\\_config.MultiselectColumn(\n            \"App Categories\",\n            options=\\[\"exploration\", \"visualization\", \"llm\"\\],\n            color=\"primary\",\n            format\\_func=lambda x: x.capitalize(),\n        ),\n    },\n)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-multiselect-column-2.streamlit.app//?utm_medium=oembed&)\n\n[_arrow\\_back_Previous: Selectbox column](/develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn)[_arrow\\_forward_Next: Datetime column](/develop/api-reference/data/st.column_config/st.column_config.datetimecolumn)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.560236
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference/widgets/st.audio_input?utm_source=streamlit",
      "content": {
        "type": "html",
        "raw_length": 12759,
        "title": null,
        "text": "st.audio\\_input - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_add_\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_remove_\n*\nBUTTONS\n* * *\n*\n[st.button](/develop/api-reference/widgets/st.button)\n*\n[st.download\\_button](/develop/api-reference/widgets/st.download_button)\n*\n[st.form\\_submit\\_button_link_](/develop/api-reference/execution-flow/st.form_submit_button)\n*\n[st.link\\_button](/develop/api-reference/widgets/st.link_button)\n*\n[st.page\\_link](/develop/api-reference/widgets/st.page_link)\n*\nSELECTIONS\n* * *\n*\n[st.checkbox](/develop/api-reference/widgets/st.checkbox)\n*\n[st.color\\_picker](/develop/api-reference/widgets/st.color_picker)\n*\n[st.feedback](/develop/api-reference/widgets/st.feedback)\n*\n[st.multiselect](/develop/api-reference/widgets/st.multiselect)\n*\n[st.pills](/develop/api-reference/widgets/st.pills)\n*\n[st.radio](/develop/api-reference/widgets/st.radio)\n*\n[st.segmented\\_control](/develop/api-reference/widgets/st.segmented_control)\n*\n[st.selectbox](/develop/api-reference/widgets/st.selectbox)\n*\n[st.select\\_slider](/develop/api-reference/widgets/st.select_slider)\n*\n[st.toggle](/develop/api-reference/widgets/st.toggle)\n*\nNUMERIC\n* * *\n*\n[st.number\\_input](/develop/api-reference/widgets/st.number_input)\n*\n[st.slider](/develop/api-reference/widgets/st.slider)\n*\nDATE AND TIME\n* * *\n*\n[st.date\\_input](/develop/api-reference/widgets/st.date_input)\n*\n[st.time\\_input](/develop/api-reference/widgets/st.time_input)\n*\nTEXT\n* * *\n*\n[st.chat\\_input_link_](/develop/api-reference/chat/st.chat_input)\n*\n[st.text\\_area](/develop/api-reference/widgets/st.text_area)\n*\n[st.text\\_input](/develop/api-reference/widgets/st.text_input)\n*\nMEDIA AND FILES\n* * *\n*\n[st.audio\\_input](/develop/api-reference/widgets/st.audio_input)\n*\n[st.camera\\_input](/develop/api-reference/widgets/st.camera_input)\n*\n[st.data\\_editor_link_](/develop/api-reference/data/st.data_editor)\n*\n[st.file\\_uploader](/develop/api-reference/widgets/st.file_uploader)\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)/\n*\n[Input widgets](/develop/api-reference/widgets)/\n*\n[st.audio\\_input](/develop/api-reference/widgets/st.audio_input)\n## [](#staudio_input)st.audio\\_input\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nDisplay a widget that returns an audio recording from the user's microphone.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/widgets/audio_input.py#L92 \"View st.audio_input source code on GitHub\")\nst.audio\\_input(label, \\*, sample\\_rate=16000, key=None, help=None, on\\_change=None, args=None, kwargs=None, disabled=False, label\\_visibility=\"visible\", width=\"stretch\")\nParameters\nlabel (str)\nA short label explaining to the user what this widget is used for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height.\nUnsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., \"1\\\\. Not an ordered list\".\nSee the body parameter of [st.markdown](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.\nFor accessibility reasons, you should never set an empty label, but you can hide it with label\\_visibility if needed. In the future, we may disallow empty labels by raising an exception.\nsample\\_rate (int or None)\nThe target sample rate for the audio recording in Hz. This defaults to 16000 Hz, which is optimal for speech recognition.\nThe following sample rates are supported: 8000, 11025, 16000, 22050, 24000, 32000, 44100, or 48000. If this is None, the widget uses the browser's default sample rate (typically 44100 or 48000 Hz).\nkey (str or int)\nAn optional string or integer to use as the unique key for the widget. If this is omitted, a key will be generated for the widget based on its content. No two widgets may have the same key.\nhelp (str or None)\nA tooltip that gets displayed next to the widget label. Streamlit only displays the tooltip when label\\_visibility=\"visible\". If this is None (default), no tooltip is displayed.\nThe tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the body parameter of st.markdown.\non\\_change (callable)\nAn optional callback invoked when this audio input's value changes.\nargs (list or tuple)\nAn optional list or tuple of args to pass to the callback.\nkwargs (dict)\nAn optional dict of kwargs to pass to the callback.\ndisabled (bool)\nAn optional boolean that disables the audio input if set to True. Default is False.\nlabel\\_visibility (\"visible\", \"hidden\", or \"collapsed\")\nThe visibility of the label. The default is \"visible\". If this is \"hidden\", Streamlit displays an empty spacer instead of the label, which can help keep the widget aligned with other widgets. If this is \"collapsed\", Streamlit displays no label or spacer.\nwidth (\"stretch\" or int)\nThe width of the audio input widget. This can be one of the following:\n*\n\"stretch\" (default): The width of the widget matches the width of the parent container.\n*\nAn integer specifying the width in pixels: The widget has a fixed width. If the specified width is greater than the width of the parent container, the width of the widget matches the width of the parent container.\nReturns\n(None or UploadedFile)\nThe UploadedFile class is a subclass of BytesIO, and therefore is \"file-like\". This means you can pass an instance of it anywhere a file is expected. The MIME type for the audio data is audio/wav.\nNote\nThe resulting UploadedFile is subject to the size limitation configured in server.maxUploadSize. If you expect large sound files, update the configuration option appropriately.\n#### Examples\n**Example 1: Record a voice message and play it back.**\nThe default sample rate of 16000 Hz is optimal for speech recognition.\nimport streamlit as st\naudio\\_value = st.audio\\_input(\"Record a voice message\")\nif audio\\_value:\nst.audio(audio\\_value)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-audio-input.streamlit.app//?utm_medium=oembed&)\n**Example 2: Record high-fidelity audio and play it back.**\nHigher sample rates can create higher-quality, larger audio files. This might require a nicer microphone to fully appreciate the difference.\nimport streamlit as st\naudio\\_value = st.audio\\_input(\"Record high quality audio\", sample\\_rate=48000)\nif audio\\_value:\nst.audio(audio\\_value)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-audio-input-high-rate.streamlit.app//?utm_medium=oembed&)\n[_arrow\\_back_Previous: st.text\\_input](/develop/api-reference/widgets/st.text_input)[_arrow\\_forward_Next: st.camera\\_input](/develop/api-reference/widgets/st.camera_input)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ A"
      },
      "raw_result": "st.audio\\_input - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _add_\n            \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _remove_\n            \n            *   BUTTONS\n                \n                * * *\n                \n            *   [st.button](/develop/api-reference/widgets/st.button)\n                \n            *   [st.download\\_button](/develop/api-reference/widgets/st.download_button)\n                \n            *   [st.form\\_submit\\_button_link_](/develop/api-reference/execution-flow/st.form_submit_button)\n                \n            *   [st.link\\_button](/develop/api-reference/widgets/st.link_button)\n                \n            *   [st.page\\_link](/develop/api-reference/widgets/st.page_link)\n                \n            *   SELECTIONS\n                \n                * * *\n                \n            *   [st.checkbox](/develop/api-reference/widgets/st.checkbox)\n                \n            *   [st.color\\_picker](/develop/api-reference/widgets/st.color_picker)\n                \n            *   [st.feedback](/develop/api-reference/widgets/st.feedback)\n                \n            *   [st.multiselect](/develop/api-reference/widgets/st.multiselect)\n                \n            *   [st.pills](/develop/api-reference/widgets/st.pills)\n                \n            *   [st.radio](/develop/api-reference/widgets/st.radio)\n                \n            *   [st.segmented\\_control](/develop/api-reference/widgets/st.segmented_control)\n                \n            *   [st.selectbox](/develop/api-reference/widgets/st.selectbox)\n                \n            *   [st.select\\_slider](/develop/api-reference/widgets/st.select_slider)\n                \n            *   [st.toggle](/develop/api-reference/widgets/st.toggle)\n                \n            *   NUMERIC\n                \n                * * *\n                \n            *   [st.number\\_input](/develop/api-reference/widgets/st.number_input)\n                \n            *   [st.slider](/develop/api-reference/widgets/st.slider)\n                \n            *   DATE AND TIME\n                \n                * * *\n                \n            *   [st.date\\_input](/develop/api-reference/widgets/st.date_input)\n                \n            *   [st.time\\_input](/develop/api-reference/widgets/st.time_input)\n                \n            *   TEXT\n                \n                * * *\n                \n            *   [st.chat\\_input_link_](/develop/api-reference/chat/st.chat_input)\n                \n            *   [st.text\\_area](/develop/api-reference/widgets/st.text_area)\n                \n            *   [st.text\\_input](/develop/api-reference/widgets/st.text_input)\n                \n            *   MEDIA AND FILES\n                \n                * * *\n                \n            *   [st.audio\\_input](/develop/api-reference/widgets/st.audio_input)\n                \n            *   [st.camera\\_input](/develop/api-reference/widgets/st.camera_input)\n                \n            *   [st.data\\_editor_link_](/develop/api-reference/data/st.data_editor)\n                \n            *   [st.file\\_uploader](/develop/api-reference/widgets/st.file_uploader)\n                \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)/\n*   [Input widgets](/develop/api-reference/widgets)/\n*   [st.audio\\_input](/develop/api-reference/widgets/st.audio_input)\n\n## [](#staudio_input)st.audio\\_input\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nDisplay a widget that returns an audio recording from the user's microphone.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/widgets/audio_input.py#L92 \"View st.audio_input source code on GitHub\")\n\nst.audio\\_input(label, \\*, sample\\_rate=16000, key=None, help=None, on\\_change=None, args=None, kwargs=None, disabled=False, label\\_visibility=\"visible\", width=\"stretch\")\n\nParameters\n\nlabel (str)\n\nA short label explaining to the user what this widget is used for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height.\n\nUnsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., \"1\\\\. Not an ordered list\".\n\nSee the body parameter of [st.markdown](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.\n\nFor accessibility reasons, you should never set an empty label, but you can hide it with label\\_visibility if needed. In the future, we may disallow empty labels by raising an exception.\n\nsample\\_rate (int or None)\n\nThe target sample rate for the audio recording in Hz. This defaults to 16000 Hz, which is optimal for speech recognition.\n\nThe following sample rates are supported: 8000, 11025, 16000, 22050, 24000, 32000, 44100, or 48000. If this is None, the widget uses the browser's default sample rate (typically 44100 or 48000 Hz).\n\nkey (str or int)\n\nAn optional string or integer to use as the unique key for the widget. If this is omitted, a key will be generated for the widget based on its content. No two widgets may have the same key.\n\nhelp (str or None)\n\nA tooltip that gets displayed next to the widget label. Streamlit only displays the tooltip when label\\_visibility=\"visible\". If this is None (default), no tooltip is displayed.\n\nThe tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the body parameter of st.markdown.\n\non\\_change (callable)\n\nAn optional callback invoked when this audio input's value changes.\n\nargs (list or tuple)\n\nAn optional list or tuple of args to pass to the callback.\n\nkwargs (dict)\n\nAn optional dict of kwargs to pass to the callback.\n\ndisabled (bool)\n\nAn optional boolean that disables the audio input if set to True. Default is False.\n\nlabel\\_visibility (\"visible\", \"hidden\", or \"collapsed\")\n\nThe visibility of the label. The default is \"visible\". If this is \"hidden\", Streamlit displays an empty spacer instead of the label, which can help keep the widget aligned with other widgets. If this is \"collapsed\", Streamlit displays no label or spacer.\n\nwidth (\"stretch\" or int)\n\nThe width of the audio input widget. This can be one of the following:\n\n*   \"stretch\" (default): The width of the widget matches the width of the parent container.\n*   An integer specifying the width in pixels: The widget has a fixed width. If the specified width is greater than the width of the parent container, the width of the widget matches the width of the parent container.\n\nReturns\n\n(None or UploadedFile)\n\nThe UploadedFile class is a subclass of BytesIO, and therefore is \"file-like\". This means you can pass an instance of it anywhere a file is expected. The MIME type for the audio data is audio/wav.\n\nNote\n\nThe resulting UploadedFile is subject to the size limitation configured in server.maxUploadSize. If you expect large sound files, update the configuration option appropriately.\n\n#### Examples\n\n**Example 1: Record a voice message and play it back.**\n\nThe default sample rate of 16000 Hz is optimal for speech recognition.\n\nimport streamlit as st\n\naudio\\_value = st.audio\\_input(\"Record a voice message\")\n\nif audio\\_value:\n    st.audio(audio\\_value)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-audio-input.streamlit.app//?utm_medium=oembed&)\n\n**Example 2: Record high-fidelity audio and play it back.**\n\nHigher sample rates can create higher-quality, larger audio files. This might require a nicer microphone to fully appreciate the difference.\n\nimport streamlit as st\n\naudio\\_value = st.audio\\_input(\"Record high quality audio\", sample\\_rate=48000)\n\nif audio\\_value:\n    st.audio(audio\\_value)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-audio-input-high-rate.streamlit.app//?utm_medium=oembed&)\n\n[_arrow\\_back_Previous: st.text\\_input](/develop/api-reference/widgets/st.text_input)[_arrow\\_forward_Next: st.camera\\_input](/develop/api-reference/widgets/st.camera_input)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.5622904
    },
    {
      "url": "https://docs.streamlit.io/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette",
      "content": {
        "type": "html",
        "raw_length": 18252,
        "title": null,
        "text": "Colors and borders - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_remove_\n*\nCORE\n* * *\n*\n[Architecture and execution](/develop/concepts/architecture)\n_add_\n*\n[Multipage apps](/develop/concepts/multipage-apps)\n_add_\n*\n[App design](/develop/concepts/design)\n_add_\n*\nADDITIONAL\n* * *\n*\n[Connections, secrets, and authentication](/develop/concepts/connections)\n_add_\n*\n[Custom components](/develop/concepts/custom-components)\n_add_\n*\n[Configuration and theming](/develop/concepts/configuration)\n_remove_\n*\n[Configuration options](/develop/concepts/configuration/options)\n*\n[HTTPS support](/develop/concepts/configuration/https-support)\n*\n[Serving static files](/develop/concepts/configuration/serving-static-files)\n*\nTHEMING\n* * *\n*\n[Customize your theme](/develop/concepts/configuration/theming)\n*\n[Customize colors and borders](/develop/concepts/configuration/theming-customize-colors-and-borders)\n*\n[Customize fonts](/develop/concepts/configuration/theming-customize-fonts)\n*\n[App testing](/develop/concepts/app-testing)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[Concepts](/develop/concepts)/\n*\n[Configuration and theming](/develop/concepts/configuration)/\n*\n[Customize colors and borders](/develop/concepts/configuration/theming-customize-colors-and-borders)\n# [](/develop/concepts/configuration/theming-customize-colors-and-borders#customize-colors-and-borders-in-your-streamlit-app)Customize colors and borders in your Streamlit app\n## [](/develop/concepts/configuration/theming-customize-colors-and-borders#color-values)Color values\nFor all configuration options that accept a color, you can specify the value with one of the following strings:\n*\nA CSS [``](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color) like `\"darkBlue\"` or `\"maroon\"`.\n*\nA HEX string like `\"#483d8b\"` or `\"#6A5ACD\"`.\n*\nAn RGB string like `\"rgb(106, 90, 205)\"` or `\"RGB(70, 130, 180)\"`.\n*\nAn HSL string like `\"hsl(248, 53%, 58%)\"` or `\"HSL(147, 50%, 47%)\"`.\n_star_\n#### Tip\nAlthough you can specify an alpha value for your colors, this isn't necessary for most options. Streamlit adjusts the alpha value of colors to ensure contextually appropriate shading between background and foreground.\n## [](/develop/concepts/configuration/theming-customize-colors-and-borders#default-streamlit-colors)Default Streamlit colors\nStreamlit comes with two preconfigured themes: light and dark. If you don't specify any theme configuration options, Streamlit will attempt to use the preconfigured theme that best matches each user's browser settings. These themes feature a red primary color in addition to a basic color palette (red, orange, yellow, green, blue, violet, and gray/grey) for elements like colored Markdown text.\n## [](/develop/concepts/configuration/theming-customize-colors-and-borders#color-and-border-configuration-options)Color and border configuration options\nMost theme configuration options can be set for your whole app, but you can override some with a different value for the sidebar. For example, your app's primary color (`primaryColor`) is used to highlight interactive elements and show focus. If you set `theme.primaryColor`, this will change the primary color for your whole app. However, if you set `theme.sidebar.primaryColor`, this will override `theme.primaryColor` in the sidebar, allowing you to use two different primary colors.\nThe following two configuration options can only be applied to the whole app:\n*\n`theme.base` sets the default colors for your app's theme to match one of Streamlit's two default themes (`\"light\"` or `\"dark\"`). If any theme configuation option is used and `theme.base` is not set, then Streamlit will use `\"light\"`.\n*\n`theme.showSidebarBorder` sets the visibility of the border between the sidebar and the main body of your app.\n*\n`theme.chartCategoricalColors` and `theme.chartSequentialColors` set the series colors for Plotly, Altair, and Vega-Lite charts.\nThe following configuration options can be set separately for the sidebar by using the `[theme.sidebar]` table instead of the `[theme]` table in `config.toml`:\n*\n`theme.primaryColor`\n*\n`theme.backgroundColor`\n*\n`theme.secondaryBackgroundColor`\n*\n`theme.textColor`\n*\n`theme.linkColor`\n*\n`theme.linkUnderline`\n*\n`theme.codeBackgroundColor`\n*\n`theme.baseRadius`\n*\n`theme.buttonRadius`\n*\n`theme.borderColor`\n*\n`theme.dataframeBorderColor`\n*\n`theme.dataframeHeaderBackgroundColor`\n*\n`theme.showWidgetBorder`\n*\nAll color palette options\nFor brevity, on the rest of this page, theming configuration options will not include the `theme.` or `theme.sidebar.` prefix.\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#basic-color-palette)Basic color palette\nVarious elements in Streamlit use or let you choose from a predefined palette of colors: red, orange, yellow, green, blue, violet, and gray/grey. These are some of the elements that use this basic color palette:\n*\nMarkdown text and background color (including `st.badge`).\n*\n`st.metric` sparklines and deltas.\n*\nDataframe chart columns.\n*\nChat message avatars.\n*\nAlert elements like `st.success` and `st.warning`.\nFor each color in the palette, you can define a base color, background color, and text color. If you only define a base color, Streamlit adjusts lightness/darkness and opacity to automatically provide a corresponding background and text color. However, you can manually define each of them, too. These are the color palette options:\n*\n`redColor`, `redBackgroundColor`, `redTextColor`\n*\n`orangeColor`, `orangeBackgroundColor`, `orangeTextColor`\n*\n`yellowColor`, `yellowBackgroundColor`, `yellowTextColor`\n*\n`greenColor`, `greenBackgroundColor`, `greenTextColor`\n*\n`blueColor`, `blueBackgroundColor`, `blueTextColor`\n*\n`violetColor`, `violetBackgroundColor`, `violetTextColor`\n*\n`grayColor`, `grayBackgroundColor`, `grayTextColor`\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#primarycolor)`primaryColor`\n`primaryColor` defines the accent color most often used throughout your Streamlit app. The following features and effects use your primary color:\n*\nButton hover effects\n*\nElements in focus\n*\nSelected elements\n_star_\n#### Tip\nWhen your primary color is used as a background, Streamlit changes the text color to white. For example, this happens for `type=\"primary\"` buttons and for selected items in `st.multiselect`.\nFor legibility, always choose a primary color that is dark enough to contrast well with white text.\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-1-primary-color)Example 1: Primary color\nThe following configuration example has a `\"forestGreen\"` primary color. In the sidebar, the configuration overrides the primary color to `\"darkGoldenrod\"`. If you click inside a widget to give it focus, Streamlit displays a primary-color border around the widget. Additionally, if you hover over the secondary and tertiary buttons, the hover color matches the primary color.\n`[theme] base=\"dark\" primaryColor=\"forestGreen\" [theme.sidebar] primaryColor=\"darkGoldrod\"`\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-primarycolor.streamlit.app/?utm_medium=oembed)\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#backgroundcolor-secondarybackgroundcolor-codebackgroundcolor-and-dataframeheaderbackgroundcolor)`backgroundColor`, `secondaryBackgroundColor`, `codeBackgroundColor`, and `dataframeHeaderBackgroundColor`\n*\n`backgroundColor` defines the background color of your app.\n*\n`secondaryBackgroundColor` is used for contrast in the following places:\n*\nThe background of input or selection regions for widgets\n*\nHeaders within elements like `st.help` and `st.dataframe` (if `dataframeHeaderBackgroundColor` isn't set)\n*\nCode blocks and inline code (if `codeBackgroundColor` isn't set)\n*\n`codeBackgroundColor` sets the background for code blocks and line code. If `codeBackgroundColor` is not set, Streamlit uses `secondaryBackgroundColor` instead.\n*\n`dataframeHeaderBackgroundColor` sets the background for dataframe headers (including the cells used for row selection and addition, if present).\n_push\\_pin_\n#### Note\nIf you do not define background colors for the sidebar, Streamlit will swap `backgroundColor` and `secondaryBackgroundColor` in the sidebar:\n*\nIf `theme.sidebar.backgroundColor` is not defined, Streamlit uses `theme.secondaryBackgroundColor`.\n*\nIf `theme.sidebar.secondaryBackgroundColor` is not defined, Streamlit uses `theme.backgroundColor`.\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-2-background-colors)Example 2: Background colors\nThe following configuration example has a `\"white\"` background, with a lavender-tinted `\"ghostWhite\"` sidebar background. The secondary color for the whole app is `\"lavender\"` and the code background color is `\"powderBlue\"`. The code background color is configured once in `[theme]` and inherited in the sidebar. However, because Streamlit swaps background colors when the sidebar inherits them, the secondary background color is set in both `[theme]` and `[theme.sidebar]`. To see the secondary color used for a hover effect, hover over a dataframe cell or open the multiselect drop-down menu.\n`[theme] base=\"light\" backgroundColor=\"white\" secondaryBackgroundColor=\"lavender\" codeBackgroundColor=\"powderBlue\" [theme.sidebar] backgroundColor=\"ghostWhite\" secondaryBackgroundColor=\"lavender\"`\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-backgroundcolor.streamlit.app/?utm_medium=oembed)\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#textcolor-linkcolor-and-linkunderline)`textColor`, `linkColor`, and `linkUnderline`\nYou can configure the color of body text and links.\n`textColor` sets the default text color for all text in the app except language-highlighting in code blocks, inline code, and links. `linkColor` sets the default font color for all Markdown links in the app. If `linkUnderline` is set to true (default), the link underline color matches `linkColor`.\nThe following elements are impacted by `textColor`:\n*\nMarkdown text, except links\n*\nText in code blocks that's not colored otherwise from language highlighting\n*\nApp-chrome and sidebar menu icons\n*\nWidget labels, icons, option text, and placeholder text\n*\nDataframe and table text\n*\nNon-Markdown links, like `st.page_link`, `st.link_button`, and the navigation menu\nAs noted previously, Streamlit changes the text color to white when text is displayed against your primary color.\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-3-text-colors)Example 3: Text colors\nThe following configuration example has `\"darkGoldenrod\"` text and `\"darkOrchid\"` links on a `\"dark\"` base. Buttons (including `st.link_button`) use the `\"darkGoldenrod\"` text color. In the multiselect widget, the placeholder text, drop-down menu, and tooltip all have `\"darkGoldenrod\"` text. If you hover over the sidebar, the scrollbar and collapse icon (_chevron\\_left_) are `\"darkGoldenrod\"`.\n`[theme] base=\"dark\" textColor=\"darkGoldenrod\" linkColor=\"darkOrchid\"`\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-textcolor.streamlit.app/?utm_medium=oembed)\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#baseradius-and-buttonradius)`baseRadius` and `buttonRadius`\n`baseRadius` defines the radius of borders and backgrounds for the following elements:\n*\nButtons and input areas on widgets\n*\nSelected items, including items in `st.multiselect` and the navigation menu\n*\nCode blocks and inline code\n*\nDataframes (exterior)\n*\nBadges and Markdown-text backgrounds\n*\nContainers with borders, including expanders, forms, dialogs, popovers, and toasts\n*\nTooltips, including tooltips within charts\n*\nStatus and exception message blocks\n*\nImages, including `st.graphviz` and `st.pyplot`, which display as static images\n`buttonRadius` overrides `baseRadius` for buttons and `st.segmented_control`.\nA few elements are notably not fully affected by `baseRadius`. Interactive charts and videos, which have a more complex underlying HTML, will always have square corners. This includes `st.video`, `st.map`, and `st.pydeck_chart`. Conversely, `st.chat_input` and `st.audio_input` will always be fully rounded. Sub-elements like tooltips are still affected by `baseRadius`.\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-4-border-radius)Example 4: Border radius\nIn the following configuration example, the main body of the app uses a `\"full\"` (1rem) base radius, and the sidebar uses `\"none\"` (0rem). To better highlight this difference, the example includes contrasting primary and background colors.\n`[theme] base=\"light\" primaryColor=\"slateBlue\" backgroundColor=\"mintCream\" secondaryBackgroundColor=\"darkSeaGreen\" baseRadius=\"full\" [theme.sidebar] backgroundColor=\"aliceBlue\" secondaryBackgroundColor=\"skyBlue\" baseRadius=\"none\"`\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-baseradius.streamlit.app/?utm_medium=oembed)\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#bordercolor-dataframebordercolor-and-showwidgetborder)`borderColor`, `dataframeBorderColor`, and `showWidgetBorder`\nStreamlit does not display borders for unfocused widgets by default (except for buttons). When a user focuses on a widget, Streamlit displays a border around the input area in your `primaryColor`. When the user removes focus, Streamlit hides the border.\nIf you set `showWidgetBorder=true`, Streamlit will display widget borders when the widget is not in focus. For those widgets, the border color is set by `borderColor`. If `borderColor` is not set, Streamlit infers a color by adding transparency to your `textColor`.\nThe following elements have borders that you can modify:\n*\nContainers with borders, including expanders, forms, dialogs, popovers, and toasts\n*\nThe sidebar, including the right edge and the boundary below the navigation menu\n*\nDataframes and tables\n*\n`st.tabs` (bottom border)\n*\nButtons, including `st.button`, `st.pills`, and `st.segmented_control`\n*\nBorders on input regions\n`dataframeBorderColor` overrides `borderColor` for dataframes and tables.\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-5-border-color-and-visibility)Example 5: Border color and visibility\nThe following configuration example uses a `\"mediumSlateBlue\"` border color throughout the app. In the sidebar, widget borders are shown. In the main body of the app, widget borders are not shown, and there is no border around the multiselect, text, or chat input regions except when they are in focus. However, many other elements, like buttons and dataframes, have always-visible borders.\n`[theme] base=\"dark\" borderColor=\"mediumSlateBlue\" showWidgetBorder=false [theme.sidebar] showWidgetBorder=true`\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-bordercolor.streamlit.app/?utm_medium=oembed)\n[_arrow\\_back_Previous: Customize your theme](/develop/concepts/configuration/theming)[_arrow\\_forward_Next: Customize fonts](/develop/concepts/configuration/theming-customize-fonts)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_fo"
      },
      "raw_result": "Colors and borders - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _remove_\n        \n        *   CORE\n            \n            * * *\n            \n        *   [Architecture and execution](/develop/concepts/architecture)\n            \n            _add_\n            \n        *   [Multipage apps](/develop/concepts/multipage-apps)\n            \n            _add_\n            \n        *   [App design](/develop/concepts/design)\n            \n            _add_\n            \n        *   ADDITIONAL\n            \n            * * *\n            \n        *   [Connections, secrets, and authentication](/develop/concepts/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/concepts/custom-components)\n            \n            _add_\n            \n        *   [Configuration and theming](/develop/concepts/configuration)\n            \n            _remove_\n            \n            *   [Configuration options](/develop/concepts/configuration/options)\n                \n            *   [HTTPS support](/develop/concepts/configuration/https-support)\n                \n            *   [Serving static files](/develop/concepts/configuration/serving-static-files)\n                \n            *   THEMING\n                \n                * * *\n                \n            *   [Customize your theme](/develop/concepts/configuration/theming)\n                \n            *   [Customize colors and borders](/develop/concepts/configuration/theming-customize-colors-and-borders)\n                \n            *   [Customize fonts](/develop/concepts/configuration/theming-customize-fonts)\n                \n        *   [App testing](/develop/concepts/app-testing)\n            \n            _add_\n            \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [Concepts](/develop/concepts)/\n*   [Configuration and theming](/develop/concepts/configuration)/\n*   [Customize colors and borders](/develop/concepts/configuration/theming-customize-colors-and-borders)\n\n# [](/develop/concepts/configuration/theming-customize-colors-and-borders#customize-colors-and-borders-in-your-streamlit-app)Customize colors and borders in your Streamlit app\n\n## [](/develop/concepts/configuration/theming-customize-colors-and-borders#color-values)Color values\n\nFor all configuration options that accept a color, you can specify the value with one of the following strings:\n\n*   A CSS [`<named-color>`](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color) like `\"darkBlue\"` or `\"maroon\"`.\n*   A HEX string like `\"#483d8b\"` or `\"#6A5ACD\"`.\n*   An RGB string like `\"rgb(106, 90, 205)\"` or `\"RGB(70, 130, 180)\"`.\n*   An HSL string like `\"hsl(248, 53%, 58%)\"` or `\"HSL(147, 50%, 47%)\"`.\n\n_star_\n\n#### Tip\n\nAlthough you can specify an alpha value for your colors, this isn't necessary for most options. Streamlit adjusts the alpha value of colors to ensure contextually appropriate shading between background and foreground.\n\n## [](/develop/concepts/configuration/theming-customize-colors-and-borders#default-streamlit-colors)Default Streamlit colors\n\nStreamlit comes with two preconfigured themes: light and dark. If you don't specify any theme configuration options, Streamlit will attempt to use the preconfigured theme that best matches each user's browser settings. These themes feature a red primary color in addition to a basic color palette (red, orange, yellow, green, blue, violet, and gray/grey) for elements like colored Markdown text.\n\n## [](/develop/concepts/configuration/theming-customize-colors-and-borders#color-and-border-configuration-options)Color and border configuration options\n\nMost theme configuration options can be set for your whole app, but you can override some with a different value for the sidebar. For example, your app's primary color (`primaryColor`) is used to highlight interactive elements and show focus. If you set `theme.primaryColor`, this will change the primary color for your whole app. However, if you set `theme.sidebar.primaryColor`, this will override `theme.primaryColor` in the sidebar, allowing you to use two different primary colors.\n\nThe following two configuration options can only be applied to the whole app:\n\n*   `theme.base` sets the default colors for your app's theme to match one of Streamlit's two default themes (`\"light\"` or `\"dark\"`). If any theme configuation option is used and `theme.base` is not set, then Streamlit will use `\"light\"`.\n*   `theme.showSidebarBorder` sets the visibility of the border between the sidebar and the main body of your app.\n*   `theme.chartCategoricalColors` and `theme.chartSequentialColors` set the series colors for Plotly, Altair, and Vega-Lite charts.\n\nThe following configuration options can be set separately for the sidebar by using the `[theme.sidebar]` table instead of the `[theme]` table in `config.toml`:\n\n*   `theme.primaryColor`\n*   `theme.backgroundColor`\n*   `theme.secondaryBackgroundColor`\n*   `theme.textColor`\n*   `theme.linkColor`\n*   `theme.linkUnderline`\n*   `theme.codeBackgroundColor`\n*   `theme.baseRadius`\n*   `theme.buttonRadius`\n*   `theme.borderColor`\n*   `theme.dataframeBorderColor`\n*   `theme.dataframeHeaderBackgroundColor`\n*   `theme.showWidgetBorder`\n*   All color palette options\n\nFor brevity, on the rest of this page, theming configuration options will not include the `theme.` or `theme.sidebar.` prefix.\n\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#basic-color-palette)Basic color palette\n\nVarious elements in Streamlit use or let you choose from a predefined palette of colors: red, orange, yellow, green, blue, violet, and gray/grey. These are some of the elements that use this basic color palette:\n\n*   Markdown text and background color (including `st.badge`).\n*   `st.metric` sparklines and deltas.\n*   Dataframe chart columns.\n*   Chat message avatars.\n*   Alert elements like `st.success` and `st.warning`.\n\nFor each color in the palette, you can define a base color, background color, and text color. If you only define a base color, Streamlit adjusts lightness/darkness and opacity to automatically provide a corresponding background and text color. However, you can manually define each of them, too. These are the color palette options:\n\n*   `redColor`, `redBackgroundColor`, `redTextColor`\n*   `orangeColor`, `orangeBackgroundColor`, `orangeTextColor`\n*   `yellowColor`, `yellowBackgroundColor`, `yellowTextColor`\n*   `greenColor`, `greenBackgroundColor`, `greenTextColor`\n*   `blueColor`, `blueBackgroundColor`, `blueTextColor`\n*   `violetColor`, `violetBackgroundColor`, `violetTextColor`\n*   `grayColor`, `grayBackgroundColor`, `grayTextColor`\n\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#primarycolor)`primaryColor`\n\n`primaryColor` defines the accent color most often used throughout your Streamlit app. The following features and effects use your primary color:\n\n*   Button hover effects\n*   Elements in focus\n*   Selected elements\n\n_star_\n\n#### Tip\n\nWhen your primary color is used as a background, Streamlit changes the text color to white. For example, this happens for `type=\"primary\"` buttons and for selected items in `st.multiselect`.\n\nFor legibility, always choose a primary color that is dark enough to contrast well with white text.\n\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-1-primary-color)Example 1: Primary color\n\nThe following configuration example has a `\"forestGreen\"` primary color. In the sidebar, the configuration overrides the primary color to `\"darkGoldenrod\"`. If you click inside a widget to give it focus, Streamlit displays a primary-color border around the widget. Additionally, if you hover over the secondary and tertiary buttons, the hover color matches the primary color.\n\n`[theme] base=\"dark\" primaryColor=\"forestGreen\" [theme.sidebar] primaryColor=\"darkGoldrod\"`\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-primarycolor.streamlit.app/?utm_medium=oembed)\n\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#backgroundcolor-secondarybackgroundcolor-codebackgroundcolor-and-dataframeheaderbackgroundcolor)`backgroundColor`, `secondaryBackgroundColor`, `codeBackgroundColor`, and `dataframeHeaderBackgroundColor`\n\n*   `backgroundColor` defines the background color of your app.\n*   `secondaryBackgroundColor` is used for contrast in the following places:\n    *   The background of input or selection regions for widgets\n    *   Headers within elements like `st.help` and `st.dataframe` (if `dataframeHeaderBackgroundColor` isn't set)\n    *   Code blocks and inline code (if `codeBackgroundColor` isn't set)\n*   `codeBackgroundColor` sets the background for code blocks and line code. If `codeBackgroundColor` is not set, Streamlit uses `secondaryBackgroundColor` instead.\n*   `dataframeHeaderBackgroundColor` sets the background for dataframe headers (including the cells used for row selection and addition, if present).\n\n_push\\_pin_\n\n#### Note\n\nIf you do not define background colors for the sidebar, Streamlit will swap `backgroundColor` and `secondaryBackgroundColor` in the sidebar:\n\n*   If `theme.sidebar.backgroundColor` is not defined, Streamlit uses `theme.secondaryBackgroundColor`.\n*   If `theme.sidebar.secondaryBackgroundColor` is not defined, Streamlit uses `theme.backgroundColor`.\n\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-2-background-colors)Example 2: Background colors\n\nThe following configuration example has a `\"white\"` background, with a lavender-tinted `\"ghostWhite\"` sidebar background. The secondary color for the whole app is `\"lavender\"` and the code background color is `\"powderBlue\"`. The code background color is configured once in `[theme]` and inherited in the sidebar. However, because Streamlit swaps background colors when the sidebar inherits them, the secondary background color is set in both `[theme]` and `[theme.sidebar]`. To see the secondary color used for a hover effect, hover over a dataframe cell or open the multiselect drop-down menu.\n\n`[theme] base=\"light\" backgroundColor=\"white\" secondaryBackgroundColor=\"lavender\" codeBackgroundColor=\"powderBlue\" [theme.sidebar] backgroundColor=\"ghostWhite\" secondaryBackgroundColor=\"lavender\"`\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-backgroundcolor.streamlit.app/?utm_medium=oembed)\n\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#textcolor-linkcolor-and-linkunderline)`textColor`, `linkColor`, and `linkUnderline`\n\nYou can configure the color of body text and links.\n\n`textColor` sets the default text color for all text in the app except language-highlighting in code blocks, inline code, and links. `linkColor` sets the default font color for all Markdown links in the app. If `linkUnderline` is set to true (default), the link underline color matches `linkColor`.\n\nThe following elements are impacted by `textColor`:\n\n*   Markdown text, except links\n*   Text in code blocks that's not colored otherwise from language highlighting\n*   App-chrome and sidebar menu icons\n*   Widget labels, icons, option text, and placeholder text\n*   Dataframe and table text\n*   Non-Markdown links, like `st.page_link`, `st.link_button`, and the navigation menu\n\nAs noted previously, Streamlit changes the text color to white when text is displayed against your primary color.\n\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-3-text-colors)Example 3: Text colors\n\nThe following configuration example has `\"darkGoldenrod\"` text and `\"darkOrchid\"` links on a `\"dark\"` base. Buttons (including `st.link_button`) use the `\"darkGoldenrod\"` text color. In the multiselect widget, the placeholder text, drop-down menu, and tooltip all have `\"darkGoldenrod\"` text. If you hover over the sidebar, the scrollbar and collapse icon (_chevron\\_left_) are `\"darkGoldenrod\"`.\n\n`[theme] base=\"dark\" textColor=\"darkGoldenrod\" linkColor=\"darkOrchid\"`\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-textcolor.streamlit.app/?utm_medium=oembed)\n\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#baseradius-and-buttonradius)`baseRadius` and `buttonRadius`\n\n`baseRadius` defines the radius of borders and backgrounds for the following elements:\n\n*   Buttons and input areas on widgets\n*   Selected items, including items in `st.multiselect` and the navigation menu\n*   Code blocks and inline code\n*   Dataframes (exterior)\n*   Badges and Markdown-text backgrounds\n*   Containers with borders, including expanders, forms, dialogs, popovers, and toasts\n*   Tooltips, including tooltips within charts\n*   Status and exception message blocks\n*   Images, including `st.graphviz` and `st.pyplot`, which display as static images\n\n`buttonRadius` overrides `baseRadius` for buttons and `st.segmented_control`.\n\nA few elements are notably not fully affected by `baseRadius`. Interactive charts and videos, which have a more complex underlying HTML, will always have square corners. This includes `st.video`, `st.map`, and `st.pydeck_chart`. Conversely, `st.chat_input` and `st.audio_input` will always be fully rounded. Sub-elements like tooltips are still affected by `baseRadius`.\n\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-4-border-radius)Example 4: Border radius\n\nIn the following configuration example, the main body of the app uses a `\"full\"` (1rem) base radius, and the sidebar uses `\"none\"` (0rem). To better highlight this difference, the example includes contrasting primary and background colors.\n\n`[theme] base=\"light\" primaryColor=\"slateBlue\" backgroundColor=\"mintCream\" secondaryBackgroundColor=\"darkSeaGreen\" baseRadius=\"full\" [theme.sidebar] backgroundColor=\"aliceBlue\" secondaryBackgroundColor=\"skyBlue\" baseRadius=\"none\"`\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-baseradius.streamlit.app/?utm_medium=oembed)\n\n### [](/develop/concepts/configuration/theming-customize-colors-and-borders#bordercolor-dataframebordercolor-and-showwidgetborder)`borderColor`, `dataframeBorderColor`, and `showWidgetBorder`\n\nStreamlit does not display borders for unfocused widgets by default (except for buttons). When a user focuses on a widget, Streamlit displays a border around the input area in your `primaryColor`. When the user removes focus, Streamlit hides the border.\n\nIf you set `showWidgetBorder=true`, Streamlit will display widget borders when the widget is not in focus. For those widgets, the border color is set by `borderColor`. If `borderColor` is not set, Streamlit infers a color by adding transparency to your `textColor`.\n\nThe following elements have borders that you can modify:\n\n*   Containers with borders, including expanders, forms, dialogs, popovers, and toasts\n*   The sidebar, including the right edge and the boundary below the navigation menu\n*   Dataframes and tables\n*   `st.tabs` (bottom border)\n*   Buttons, including `st.button`, `st.pills`, and `st.segmented_control`\n*   Borders on input regions\n\n`dataframeBorderColor` overrides `borderColor` for dataframes and tables.\n\n#### [](/develop/concepts/configuration/theming-customize-colors-and-borders#example-5-border-color-and-visibility)Example 5: Border color and visibility\n\nThe following configuration example uses a `\"mediumSlateBlue\"` border color throughout the app. In the sidebar, widget borders are shown. In the main body of the app, widget borders are not shown, and there is no border around the multiselect, text, or chat input regions except when they are in focus. However, many other elements, like buttons and dataframes, have always-visible borders.\n\n`[theme] base=\"dark\" borderColor=\"mediumSlateBlue\" showWidgetBorder=false [theme.sidebar] showWidgetBorder=true`\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-theming-color-bordercolor.streamlit.app/?utm_medium=oembed)\n\n[_arrow\\_back_Previous: Customize your theme](/develop/concepts/configuration/theming)[_arrow\\_forward_Next: Customize fonts](/develop/concepts/configuration/theming-customize-fonts)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_fo",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.5793252
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit",
      "content": {
        "type": "html",
        "raw_length": 11653,
        "title": null,
        "text": "st.column\\_config.AreaChartColumn - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_remove_\n*\n[st.dataframe](/develop/api-reference/data/st.dataframe)\n*\n[st.data\\_editor](/develop/api-reference/data/st.data_editor)\n*\n[st.column\\_config](/develop/api-reference/data/st.column_config)\n_remove_\n*\n[Column](/develop/api-reference/data/st.column_config/st.column_config.column)\n*\n[Text column](/develop/api-reference/data/st.column_config/st.column_config.textcolumn)\n*\n[Number column](/develop/api-reference/data/st.column_config/st.column_config.numbercolumn)\n*\n[Checkbox column](/develop/api-reference/data/st.column_config/st.column_config.checkboxcolumn)\n*\n[Selectbox column](/develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn)\n*\n[Multiselect column](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn)\n*\n[Datetime column](/develop/api-reference/data/st.column_config/st.column_config.datetimecolumn)\n*\n[Date column](/develop/api-reference/data/st.column_config/st.column_config.datecolumn)\n*\n[Time column](/develop/api-reference/data/st.column_config/st.column_config.timecolumn)\n*\n[JSON column](/develop/api-reference/data/st.column_config/st.column_config.jsoncolumn)\n*\n[List column](/develop/api-reference/data/st.column_config/st.column_config.listcolumn)\n*\n[Link column](/develop/api-reference/data/st.column_config/st.column_config.linkcolumn)\n*\n[Image column](/develop/api-reference/data/st.column_config/st.column_config.imagecolumn)\n*\n[Area chart column](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn)\n*\n[Line chart column](/develop/api-reference/data/st.column_config/st.column_config.linechartcolumn)\n*\n[Bar chart column](/develop/api-reference/data/st.column_config/st.column_config.barchartcolumn)\n*\n[Progress column](/develop/api-reference/data/st.column_config/st.column_config.progresscolumn)\n*\n[st.table](/develop/api-reference/data/st.table)\n*\n[st.metric](/develop/api-reference/data/st.metric)\n*\n[st.json](/develop/api-reference/data/st.json)\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)/\n*\n[Data elements](/develop/api-reference/data)/\n*\n[st.column\\_config](/develop/api-reference/data/st.column_config)/\n*\n[Area chart column](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn)\n## [](#stcolumn_configareachartcolumn)st.column\\_config.AreaChartColumn\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nConfigure an area chart column in st.dataframe or st.data\\_editor.\nCells need to contain a list of numbers. Chart columns are not editable at the moment. This command needs to be used in the column\\_config parameter of st.dataframe or st.data\\_editor.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/lib/column_types.py#L1391 \"View st.AreaChartColumn source code on GitHub\")\nst.column\\_config.AreaChartColumn(label=None, \\*, width=None, help=None, pinned=None, y\\_min=None, y\\_max=None, color=None)\nParameters\nlabel (str or None)\nThe label shown at the top of the column. If this is None (default), the column name is used.\nwidth (\"small\", \"medium\", \"large\", int, or None)\nThe display width of the column. If this is None (default), the column will be sized to fit the cell contents. Otherwise, this can be one of the following:\n*\n\"small\": 75px wide\n*\n\"medium\": 200px wide\n*\n\"large\": 400px wide\n*\nAn integer specifying the width in pixels\nIf the total width of all columns is less than the width of the dataframe, the remaining space will be distributed evenly among all columns.\nhelp (str or None)\nA tooltip that gets displayed when hovering over the column label. If this is None (default), no tooltip is displayed.\nThe tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the body parameter of st.markdown.\npinned (bool or None)\nWhether the column is pinned. A pinned column will stay visible on the left side no matter where the user scrolls. If this is None (default), Streamlit will decide: index columns are pinned, and data columns are not pinned.\ny\\_min (int, float, or None)\nThe minimum value on the y-axis for all cells in the column. If this is None (default), every cell will use the minimum of its data.\ny\\_max (int, float, or None)\nThe maximum value on the y-axis for all cells in the column. If this is None (default), every cell will use the maximum of its data.\ncolor (\"auto\", \"auto-inverse\", str, or None)\nThe color to use for the chart. This can be one of the following:\n*\nNone (default): The primary color is used.\n*\n\"auto\": If the data is increasing, the chart is green; if the data is decreasing, the chart is red.\n*\n\"auto-inverse\": If the data is increasing, the chart is red; if the data is decreasing, the chart is green.\n*\nA single color value that is applied to all charts in the column. In addition to the basic color palette (red, orange, yellow, green, blue, violet, gray/grey, and primary), this supports hex codes like \"#483d8b\".\nThe basic color palette can be configured in the theme settings.\n#### Examples\nimport pandas as pd\nimport streamlit as st\ndata\\_df = pd.DataFrame(\n{\n\"sales\": \\[\n\\[0, 4, 26, 80, 100, 40\\],\n\\[80, 20, 80, 35, 40, 100\\],\n\\[10, 20, 80, 80, 70, 0\\],\n\\[10, 100, 20, 100, 30, 100\\],\n\\],\n}\n)\nst.data\\_editor(\ndata\\_df,\ncolumn\\_config={\n\"sales\": st.column\\_config.AreaChartColumn(\n\"Sales (last 6 months)\",\nwidth=\"medium\",\nhelp=\"The sales volume in the last 6 months\",\ny\\_min=0,\ny\\_max=100,\n),\n},\nhide\\_index=True,\n)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-areachart-column.streamlit.app//?utm_medium=oembed&)\n[_arrow\\_back_Previous: Image column](/develop/api-reference/data/st.column_config/st.column_config.imagecolumn)[_arrow\\_forward_Next: Line chart column](/develop/api-reference/data/st.column_config/st.column_config.linechartcolumn)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "st.column\\_config.AreaChartColumn - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _remove_\n            \n            *   [st.dataframe](/develop/api-reference/data/st.dataframe)\n                \n            *   [st.data\\_editor](/develop/api-reference/data/st.data_editor)\n                \n            *   [st.column\\_config](/develop/api-reference/data/st.column_config)\n                \n                _remove_\n                \n                *   [Column](/develop/api-reference/data/st.column_config/st.column_config.column)\n                    \n                *   [Text column](/develop/api-reference/data/st.column_config/st.column_config.textcolumn)\n                    \n                *   [Number column](/develop/api-reference/data/st.column_config/st.column_config.numbercolumn)\n                    \n                *   [Checkbox column](/develop/api-reference/data/st.column_config/st.column_config.checkboxcolumn)\n                    \n                *   [Selectbox column](/develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn)\n                    \n                *   [Multiselect column](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn)\n                    \n                *   [Datetime column](/develop/api-reference/data/st.column_config/st.column_config.datetimecolumn)\n                    \n                *   [Date column](/develop/api-reference/data/st.column_config/st.column_config.datecolumn)\n                    \n                *   [Time column](/develop/api-reference/data/st.column_config/st.column_config.timecolumn)\n                    \n                *   [JSON column](/develop/api-reference/data/st.column_config/st.column_config.jsoncolumn)\n                    \n                *   [List column](/develop/api-reference/data/st.column_config/st.column_config.listcolumn)\n                    \n                *   [Link column](/develop/api-reference/data/st.column_config/st.column_config.linkcolumn)\n                    \n                *   [Image column](/develop/api-reference/data/st.column_config/st.column_config.imagecolumn)\n                    \n                *   [Area chart column](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn)\n                    \n                *   [Line chart column](/develop/api-reference/data/st.column_config/st.column_config.linechartcolumn)\n                    \n                *   [Bar chart column](/develop/api-reference/data/st.column_config/st.column_config.barchartcolumn)\n                    \n                *   [Progress column](/develop/api-reference/data/st.column_config/st.column_config.progresscolumn)\n                    \n            *   [st.table](/develop/api-reference/data/st.table)\n                \n            *   [st.metric](/develop/api-reference/data/st.metric)\n                \n            *   [st.json](/develop/api-reference/data/st.json)\n                \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)/\n*   [Data elements](/develop/api-reference/data)/\n*   [st.column\\_config](/develop/api-reference/data/st.column_config)/\n*   [Area chart column](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn)\n\n## [](#stcolumn_configareachartcolumn)st.column\\_config.AreaChartColumn\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nConfigure an area chart column in st.dataframe or st.data\\_editor.\n\nCells need to contain a list of numbers. Chart columns are not editable at the moment. This command needs to be used in the column\\_config parameter of st.dataframe or st.data\\_editor.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/lib/column_types.py#L1391 \"View st.AreaChartColumn source code on GitHub\")\n\nst.column\\_config.AreaChartColumn(label=None, \\*, width=None, help=None, pinned=None, y\\_min=None, y\\_max=None, color=None)\n\nParameters\n\nlabel (str or None)\n\nThe label shown at the top of the column. If this is None (default), the column name is used.\n\nwidth (\"small\", \"medium\", \"large\", int, or None)\n\nThe display width of the column. If this is None (default), the column will be sized to fit the cell contents. Otherwise, this can be one of the following:\n\n*   \"small\": 75px wide\n*   \"medium\": 200px wide\n*   \"large\": 400px wide\n*   An integer specifying the width in pixels\n\nIf the total width of all columns is less than the width of the dataframe, the remaining space will be distributed evenly among all columns.\n\nhelp (str or None)\n\nA tooltip that gets displayed when hovering over the column label. If this is None (default), no tooltip is displayed.\n\nThe tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the body parameter of st.markdown.\n\npinned (bool or None)\n\nWhether the column is pinned. A pinned column will stay visible on the left side no matter where the user scrolls. If this is None (default), Streamlit will decide: index columns are pinned, and data columns are not pinned.\n\ny\\_min (int, float, or None)\n\nThe minimum value on the y-axis for all cells in the column. If this is None (default), every cell will use the minimum of its data.\n\ny\\_max (int, float, or None)\n\nThe maximum value on the y-axis for all cells in the column. If this is None (default), every cell will use the maximum of its data.\n\ncolor (\"auto\", \"auto-inverse\", str, or None)\n\nThe color to use for the chart. This can be one of the following:\n\n*   None (default): The primary color is used.\n*   \"auto\": If the data is increasing, the chart is green; if the data is decreasing, the chart is red.\n*   \"auto-inverse\": If the data is increasing, the chart is red; if the data is decreasing, the chart is green.\n*   A single color value that is applied to all charts in the column. In addition to the basic color palette (red, orange, yellow, green, blue, violet, gray/grey, and primary), this supports hex codes like \"#483d8b\".\n\nThe basic color palette can be configured in the theme settings.\n\n#### Examples\n\nimport pandas as pd\nimport streamlit as st\n\ndata\\_df = pd.DataFrame(\n    {\n        \"sales\": \\[\n            \\[0, 4, 26, 80, 100, 40\\],\n            \\[80, 20, 80, 35, 40, 100\\],\n            \\[10, 20, 80, 80, 70, 0\\],\n            \\[10, 100, 20, 100, 30, 100\\],\n        \\],\n    }\n)\n\nst.data\\_editor(\n    data\\_df,\n    column\\_config={\n        \"sales\": st.column\\_config.AreaChartColumn(\n            \"Sales (last 6 months)\",\n            width=\"medium\",\n            help=\"The sales volume in the last 6 months\",\n            y\\_min=0,\n            y\\_max=100,\n         ),\n    },\n    hide\\_index=True,\n)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-areachart-column.streamlit.app//?utm_medium=oembed&)\n\n[_arrow\\_back_Previous: Image column](/develop/api-reference/data/st.column_config/st.column_config.imagecolumn)[_arrow\\_forward_Next: Line chart column](/develop/api-reference/data/st.column_config/st.column_config.linechartcolumn)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.6242313
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference",
      "content": {
        "type": "html",
        "raw_length": 81070,
        "title": null,
        "text": "API Reference - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_add_\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_add_\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)\n# [](/develop/api-reference#api-reference)API reference\nStreamlit makes it easy for you to visualize, mutate, and share data. The API reference is organized by activity type, like displaying data or optimizing performance. Each section includes methods associated with the activity type, including examples.\nBrowse our API below and click to learn more about any of our available commands! 🎈\n## [](/develop/api-reference#display-almost-anything)Display almost anything\n### [](/develop/api-reference#write-and-magic)Write and magic\n[\n#### st.write\nWrite arguments to the app.\n`st.write(\"Hello **world**!\") st.write(my_data_frame) st.write(my_mpl_figure)`\n](/develop/api-reference/write-magic/st.write)[\n#### st.write\\_stream\nWrite generators or streams to the app with a typewriter effect.\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n](/develop/api-reference/write-magic/st.write_stream)[\n#### Magic\nAny time Streamlit sees either a variable or literal value on its own line, it automatically writes that to your app using `st.write`\n`\"Hello **world**!\" my_data_frame my_mpl_figure`\n](/develop/api-reference/write-magic/magic)\n### [](/develop/api-reference#text-elements)Text elements\n[![screenshot](/images/api/markdown.jpg)\n#### Markdown\nDisplay string formatted as Markdown.\n`st.markdown(\"Hello **world**!\")`\n](/develop/api-reference/text/st.markdown)[![screenshot](/images/api/title.jpg)\n#### Title\nDisplay text in title formatting.\n`st.title(\"The app title\")`\n](/develop/api-reference/text/st.title)[![screenshot](/images/api/header.jpg)\n#### Header\nDisplay text in header formatting.\n`st.header(\"This is a header\")`\n](/develop/api-reference/text/st.header)[![screenshot](/images/api/subheader.jpg)\n#### Subheader\nDisplay text in subheader formatting.\n`st.subheader(\"This is a subheader\")`\n](/develop/api-reference/text/st.subheader)[![screenshot](/images/api/badge.jpg)\n#### Badge\nDisplay a small, colored badge.\n`st.badge(\"New\")`\n](/develop/api-reference/text/st.badge)[![screenshot](/images/api/caption.jpg)\n#### Caption\nDisplay text in small font.\n`st.caption(\"This is written small caption text\")`\n](/develop/api-reference/text/st.caption)[![screenshot](/images/api/code.jpg)\n#### Code block\nDisplay a code block with optional syntax highlighting.\n`st.code(\"a = 1234\")`\n](/develop/api-reference/text/st.code)[![screenshot](/images/api/code.jpg)\n#### Echo\nDisplay some code in the app, then execute it. Useful for tutorials.\n`with st.echo(): st.write('This code will be printed')`\n](/develop/api-reference/text/st.echo)[![screenshot](/images/api/latex.jpg)\n#### LaTeX\nDisplay mathematical expressions formatted as LaTeX.\n`st.latex(\"\\int a x^2 \\,dx\")`\n](/develop/api-reference/text/st.latex)[![screenshot](/images/api/text.jpg)\n#### Preformatted text\nWrite fixed-width and preformatted text.\n`st.text(\"Hello world\")`\n](/develop/api-reference/text/st.text)[![screenshot](/images/api/divider.jpg)\n#### Divider\nDisplay a horizontal rule.\n`st.divider()`\n](/develop/api-reference/text/st.divider)[\n#### Get help\nDisplay object’s doc string, nicely formatted.\n`st.help(st.write) st.help(pd.DataFrame)`\n](/develop/api-reference/text/st.help)[\n#### Render HTML\nRenders HTML strings to your app.\n`st.html(\"Foo bar.\")`\n](/develop/api-reference/text/st.html)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/nlu.jpg)\n#### NLU\n](https://github.com/JohnSnowLabs/nlu)\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n[![screenshot](/images/api/components/extras-mentions.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n[![screenshot](/images/api/components/annotated-text.jpg)\n#### Annotated text\n](https://github.com/tvst/st-annotated-text)\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/nlu.jpg)\n#### NLU\n](https://github.com/JohnSnowLabs/nlu)\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n[![screenshot](/images/api/components/extras-mentions.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n[![screenshot](/images/api/components/annotated-text.jpg)\n#### Annotated text\n](https://github.com/tvst/st-annotated-text)\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/nlu.jpg)\n#### NLU\n](https://github.com/JohnSnowLabs/nlu)\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n[![screenshot](/images/api/components/extras-mentions.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\nNext\n### [](/develop/api-reference#data-elements)Data elements\n[![screenshot](/images/api/dataframe.jpg)\n#### Dataframes\nDisplay a dataframe as an interactive table.\n`st.dataframe(my_data_frame)`\n](/develop/api-reference/data/st.dataframe)[![screenshot](/images/api/data_editor.jpg)\n#### Data editor\nDisplay a data editor widget.\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/column_config.jpg)\n#### Column configuration\nConfigure the display and editing behavior of dataframes and data editors.\n`st.column_config.NumberColumn(\"Price (in USD)\", min_value=0, format=\"$%d\")`\n](/develop/api-reference/data/st.column_config)[![screenshot](/images/api/table.jpg)\n#### Static tables\nDisplay a static table.\n`st.table(my_data_frame)`\n](/develop/api-reference/data/st.table)[![screenshot](/images/api/metric.jpg)\n#### Metrics\nDisplay a metric in big bold font, with an optional indicator of how the metric changed.\n`st.metric(\"My metric\", 42, 2)`\n](/develop/api-reference/data/st.metric)[![screenshot](/images/api/json.jpg)\n#### Dicts and JSON\nDisplay object or string as a pretty-printed JSON string.\n`st.json(my_dict)`\n](/develop/api-reference/data/st.json)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n[![screenshot](/images/api/components/aggrid.jpg)\n#### Streamlit Aggrid\n](https://github.com/PablocFonseca/streamlit-aggrid)\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n#### Pandas Profiling\n](https://github.com/okld/streamlit-pandas-profiling)\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n[![screenshot](/images/api/components/aggrid.jpg)\n#### Streamlit Aggrid\n](https://github.com/PablocFonseca/streamlit-aggrid)\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n#### Pandas Profiling\n](https://github.com/okld/streamlit-pandas-profiling)\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\nNext\n### [](/develop/api-reference#chart-elements)Chart elements\n[![screenshot](/images/api/area_chart.jpg)\n#### Simple area charts\nDisplay an area chart.\n`st.area_chart(my_data_frame)`\n](/develop/api-reference/charts/st.area_chart)[![screenshot](/images/api/bar_chart.jpg)\n#### Simple bar charts\nDisplay a bar chart.\n`st.bar_chart(my_data_frame)`\n](/develop/api-reference/charts/st.bar_chart)[![screenshot](/images/api/line_chart.jpg)\n#### Simple line charts\nDisplay a line chart.\n`st.line_chart(my_data_frame)`\n](/develop/api-reference/charts/st.line_chart)[![screenshot](/images/api/scatter_chart.svg)\n#### Simple scatter charts\nDisplay a line chart.\n`st.scatter_chart(my_data_frame)`\n](/develop/api-reference/charts/st.scatter_chart)[![screenshot](/images/api/map.jpg)\n#### Scatterplots on maps\nDisplay a map with points on it.\n`st.map(my_data_frame)`\n](/develop/api-reference/charts/st.map)[![screenshot](/images/api/pyplot.jpg)\n#### Matplotlib\nDisplay a matplotlib.pyplot figure.\n`st.pyplot(my_mpl_figure)`\n](/develop/api-reference/charts/st.pyplot)[![screenshot](/images/api/vega_lite_chart.jpg)\n#### Altair\nDisplay a chart using the Altair library.\n`st.altair_chart(my_altair_chart)`\n](/develop/api-reference/charts/st.altair_chart)[![screenshot](/images/api/vega_lite_chart.jpg)\n#### Vega-Lite\nDisplay a chart using the Vega-Lite library.\n`st.vega_lite_chart(my_vega_lite_chart)`\n](/develop/api-reference/charts/st.vega_lite_chart)[![screenshot](/images/api/plotly_chart.jpg)\n#### Plotly\nDisplay an interactive Plotly chart.\n`st.plotly_chart(my_plotly_chart)`\n](/develop/api-reference/charts/st.plotly_chart)[![screenshot](/images/api/bokeh_chart.jpg)\n#### Bokeh\nDisplay an interactive Bokeh chart.\n`st.bokeh_chart(my_bokeh_chart)`\n](/develop/api-reference/charts/st.bokeh_chart)[![screenshot](/images/api/pydeck_chart.jpg)\n#### PyDeck\nDisplay a chart using the PyDeck library.\n`st.pydeck_chart(my_pydeck_chart)`\n](/develop/api-reference/charts/st.pydeck_chart)[![screenshot](/images/api/graphviz_chart.jpg)\n#### GraphViz\nDisplay a graph using the dagre-d3 library.\n`st.graphviz_chart(my_graphviz_spec)`\n](/develop/api-reference/charts/st.graphviz_chart)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n[![screenshot](/images/api/components/plost.jpg)\n#### Plost\n](https://github.com/tvst/plost)\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n[![screenshot](/images/api/components/hiplot.jpg)\n#### HiPlot\n](https://github.com/facebookresearch/hiplot)\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n[![screenshot](/images/api/components/echarts.jpg)\n#### ECharts\n](https://github.com/andfanilo/streamlit-echarts)\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/spacy.jpg)\n#### Spacy-Streamlit\n](https://github.com/explosion/spacy-streamlit)\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n[![screenshot](/images/api/components/agraph.jpg)\n#### Streamlit Agraph\n](https://github.com/ChrisDelClea/streamlit-agraph)\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n[![screenshot](/images/api/components/plost.jpg)\n#### Plost\n](https://github.com/tvst/plost)\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n[![screenshot](/images/api/components/hiplot.jpg)\n#### HiPlot\n](https://github.com/facebookresearch/hiplot)\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n[![screenshot](/images/api/components/echarts.jpg)\n#### ECharts\n](https://github.com/andfanilo/streamlit-echarts)\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n[![screenshot](/images/api/components/folium.jpg)\n#### Streamlit Folium\n](https://github.com/randyzwitch/streamlit-folium)\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n[![screenshot](/images/api/components/spacy.jpg)\n#### Spacy-Streamlit\n](https://github.com/explosion/spacy-streamlit)\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n[![screenshot](/images/api/components/agraph.jpg)\n#### Streamlit Agraph\n](https://github.com/ChrisDelClea/streamlit-agraph)\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/plotly-events.jpg)\n#### Plotly Events\n](https://github.com/null-jones/streamlit-plotly-events)\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\nNext\n### [](/develop/api-reference#input-widgets)Input widgets\n[![screenshot](/images/api/button.svg)\n#### Button\nDisplay a button widget.\n`clicked = st.button(\"Click me\")`\n](/develop/api-reference/widgets/st.button)[![screenshot](/images/api/download_button.svg)\n#### Download button\nDisplay a download button widget.\n`st.download_button(\"Download file\", file)`\n](/develop/api-reference/widgets/st.download_button)[![screenshot](/images/api/form_submit_button.svg)\n#### Form button\nDisplay a form submit button. For use with `st.form`.\n`st.form_submit_button(\"Sign up\")`\n](/develop/api-reference/execution-flow/st.form_submit_button)[![screenshot](/images/api/link_button.svg)\n#### Link button\nDisplay a link button.\n`st.link_button(\"Go to gallery\", url)`\n](/develop/api-reference/widgets/st.link_button)[![screenshot](/images/api/page_link.jpg)\n#### Page link\nDisplay a link to another page in a multipage app.\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n](/develop/api-reference/widgets/st.page_link)[![screenshot](/images/api/checkbox.jpg)\n#### Checkbox\nDisplay a checkbox widget.\n`selected = st.checkbox(\"I agree\")`\n](/develop/api-reference/widgets/st.checkbox)[![screenshot](/images/api/color_picker.jpg)\n#### Color picker\nDisplay a color picker widget.\n`color = st.color_picker(\"Pick a color\")`\n](/develop/api-reference/widgets/st.color_picker)[![screenshot](/images/api/feedback.jpg)\n#### Feedback\nDisplay a rating or sentiment button group.\n`st.feedback(\"stars\")`\n](/develop/api-reference/widgets/st.feedback)[![screenshot](/images/api/multiselect.jpg)\n#### Multiselect\nDisplay a multiselect widget. The multiselect widget starts as empty.\n`choices = st.multiselect(\"Buy\", [\"milk\", \"apples\", \"potatoes\"])`\n](/develop/api-reference/widgets/st.multiselect)[![screenshot](/images/api/pills.jpg)\n#### Pills\nDisplay a pill-button selection widget.\n`st.pills(\"Tags\", [\"Sports\", \"AI\", \"Politics\"])`\n](/develop/api-reference/widgets/st.pills)[![screenshot](/images/api/radio.jpg)\n#### Radio\nDisplay a radio button widget.\n`choice = st.radio(\"Pick one\", [\"cats\", \"dogs\"])`\n](/develop/api-reference/widgets/st.radio)[![screenshot](/images/api/segmented_control.jpg)\n#### Segmented control\nDisplay a segmented-button selection widget.\n`st.segmented_control(\"Filter\", [\"Open\", \"Closed\", \"All\"])`\n](/develop/api-reference/widgets/st.segmented_control)[![screenshot](/images/api/selectbox.jpg)\n#### Selectbox\nDisplay a select widget.\n`choice = st.selectbox(\"Pick one\", [\"cats\", \"dogs\"])`\n](/develop/api-reference/widgets/st.selectbox)[![screenshot](/images/api/select_slider.jpg)\n#### Select-slider\nDisplay a slider widget to select items from a list.\n`size = st.select_slider(\"Pick a size\", [\"S\", \"M\", \"L\"])`\n](/develop/api-reference/widgets/st.select_slider)[![screenshot](/images/api/toggle.jpg)\n#### Toggle\nDisplay a toggle widget.\n`activated = st.toggle(\"Activate\")`\n](/develop/api-reference/widgets/st.toggle)[![screenshot](/images/api/number_input.jpg)\n#### Number input\nDisplay a numeric input widget.\n`choice = st.number_input(\"Pick a number\", 0, 10)`\n](/develop/api-reference/widgets/st.number_input)[![screenshot](/images/api/slider.jpg)\n#### Slider\nDisplay a slider widget.\n`number = st.slider(\"Pick a number\", 0, 100)`\n](/develop/api-reference/widgets/st.slider)[![screenshot](/images/api/date_input.jpg)\n#### Date input\nDisplay a date input widget.\n`date = st.date_input(\"Your birthday\")`\n](/develop/api-reference/widgets/st.date_input)[![screenshot](/images/api/time_input.jpg)\n#### Time input\nDisplay a time input widget.\n`time = st.time_input(\"Meeting time\")`\n](/develop/api-reference/widgets/st.time_input)[![screenshot](/images/api/chat_input.jpg)\n#### Chat input\nDisplay a chat input widget.\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/text_area.jpg)\n#### Text-area\nDisplay a multi-line text input widget.\n`text = st.text_area(\"Text to translate\")`\n](/develop/api-reference/widgets/st.text_area)[![screenshot](/images/api/text_input.jpg)\n#### Text input\nDisplay a single-line text input widget.\n`name = st.text_input(\"First name\")`\n](/develop/api-reference/widgets/st.text_input)[![screenshot](/images/api/audio_input.jpg)\n#### Audio input\nDisplay a widget that allows users to record with their microphone.\n`speech = st.audio_input(\"Record a voice message\")`\n](/develop/api-reference/widgets/st.audio_input)[![screenshot](/images/api/data_editor.jpg)\n#### Data editor\nDisplay a data editor widget.\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/file_uploader.jpg)\n#### File uploader\nDisplay a file uploader widget.\n`data = st.file_uploader(\"Upload a CSV\")`\n](/develop/api-reference/widgets/st.file_uploader)[![screenshot](/images/api/camera_input.jpg)\n#### Camera input\nDisplay a widget that allows users to upload images directly from a camera.\n`image = st.camera_input(\"Take a picture\")`\n](/develop/api-reference/widgets/st.camera_input)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/chat.jpg)\n#### Streamlit Chat\n](https://github.com/AI-Yash/st-chat)\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n[![screenshot](/images/api/components/option-menu.jpg)\n#### Streamlit Option Menu\n](https://github.com/victoryhb/streamlit-option-menu)\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n[![screenshot](/images/api/components/extras-toggle.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n[![screenshot](/images/api/components/elements.jpg)\n#### Streamlit Elements\n](https://github.com/okld/streamlit-elements)\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/stqdm.jpg)\n#### Stqdm\n](https://github.com/Wirg/stqdm)\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n[![screenshot](/images/api/components/timeline.jpg)\n#### Timeline\n](https://github.com/innerdoc/streamlit-timeline)\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n[![screenshot](/images/api/components/camera-live.jpg)\n#### Camera input live\n](https://github.com/blackary/streamlit-camera-input-live)\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n[![screenshot](/images/api/components/ace.jpg)\n#### Streamlit Ace\n](https://github.com/okld/streamlit-ace)\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n`from streamlit_ace import st_ace content = st_ace() content`\n[![screenshot](/images/api/components/chat.jpg)\n#### Streamlit Chat\n](https://github.com/AI-Yash/st-chat)\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n[![screenshot](/images/api/components/option-menu.jpg)\n#### Streamlit Option Menu\n](https://github.com/victoryhb/streamlit-option-menu)\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n[![screenshot](/images/api/components/extras-toggle.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n[![screenshot](/images/api/components/elements.jpg)\n#### Streamlit Elements\n](https://github.com/okld/streamlit-elements)\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n[![screenshot](/images/api/components/tags.jpg)\n#### Tags\n](https://github.com/gagan3012/streamlit-tags)\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n[![screenshot](/images/api/components/stqdm.jpg)\n#### Stqdm\n](https://github.com/Wirg/stqdm)\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n[![screenshot](/images/api/components/timeline.jpg)\n#### Timeline\n](https://github.com/innerdoc/streamlit-timeline)\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n[![screenshot](/images/api/components/camera-live.jpg)\n#### Camera input live\n](https://github.com/blackary/streamlit-camera-input-live)\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n[![screenshot](/images/api/components/ace.jpg)\n#### Streamlit Ace\n](https://github.com/okld/streamlit-ace)\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n`from streamlit_ace import st_ace content = st_ace() content`\n[![screenshot](/images/api/components/chat.jpg)\n#### Streamlit Chat\n](https://github.com/AI-Yash/st-chat)\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n[![screenshot](/images/api/components/option-menu.jpg)\n#### Streamlit Option Menu\n](https://github.com/victoryhb/streamlit-option-menu)\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n[![screenshot](/images/api/components/extras-toggle.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\nNext\n### [](/develop/api-reference#media-elements)Media elements\n[![screenshot](/images/api/image.jpg)\n#### Image\nDisplay an image or list of images.\n`st.image(numpy_array) st.image(image_bytes) st.image(file) st.image(\"https://example.com/myimage.jpg\")`\n](/develop/api-reference/media/st.image)[![screenshot](/images/api/logo.jpg)\n#### Logo\nDisplay a logo in the upper-left corner of your app and its sidebar.\n`st.logo(\"logo.jpg\")`\n](/develop/api-reference/media/st.logo)[![screenshot](/images/api/pdf.jpg)\n#### PDF\nDisplay a PDF file.\n`st.pdf(\"my_document.pdf\")`\n](/develop/api-reference/media/st.pdf)[![screenshot](/images/api/audio.jpg)\n#### Audio\nDisplay an audio player.\n`st.audio(numpy_array) st.audio(audio_bytes) st.audio(file) st.audio(\"https://example.com/myaudio.mp3\", format=\"audio/mp3\")`\n](/develop/api-reference/media/st.audio)[![screenshot](/images/api/video.jpg)\n#### Video\nDisplay a video player.\n`st.video(numpy_array) st.video(video_bytes) st.video(file) st.video(\"https://example.com/myvideo.mp4\", format=\"video/mp4\")`\n](/develop/api-reference/media/st.video)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\nPrevious\n[![screenshot](/images/api/components/cropper.jpg)\n#### Streamlit Cropper\n](https://github.com/turner-anderson/streamlit-cropper)\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/webrtc.jpg)\n#### Streamlit Webrtc\n](https://github.com/whitphx/streamlit-webrtc)\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/image-comparison.jpg)\n#### Image Comparison\n](https://github.com/fcakyon/streamlit-image-comparison)\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n[![screenshot](/images/api/components/cropper.jpg)\n#### Streamlit Cropper\n](https://github.com/turner-anderson/streamlit-cropper)\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n[![screenshot](/images/api/components/webrtc.jpg)\n#### Streamlit Webrtc\n](https://github.com/whitphx/streamlit-webrtc)\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n#### Drawable Canvas\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n[![screenshot](/images/api/components/image-comparison.jpg)\n#### Image Comparison\n](https://github.com/fcakyon/streamlit-image-comparison)\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n[![screenshot](/images/api/components/cropper.jpg)\n#### Streamlit Cropper\n](https://github.com/turner-anderson/streamlit-cropper)\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n[![screenshot](/images/api/components/image-coordinates.jpg)\n#### Image Coordinates\n](https://github.com/blackary/streamlit-image-coordinates)\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n[![screenshot](/images/api/components/lottie.jpg)\n#### Streamlit Lottie\n](https://github.com/andfanilo/streamlit-lottie)\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\nNext\n### [](/develop/api-reference#layouts-and-containers)Layouts and containers\n[![screenshot](/images/api/columns.jpg)\n#### Columns\nInsert containers laid out as side-by-side columns.\n`col1, col2 = st.columns(2) col1.write(\"this is column 1\") col2.write(\"this is column 2\")`\n](/develop/api-reference/layout/st.columns)[![screenshot](/images/api/container.jpg)\n#### Container\nInsert a multi-element container.\n`c = st.container() st.write(\"This will show last\") c.write(\"This will show first\") c.write(\"This will show second\")`\n](/develop/api-reference/layout/st.container)[![screenshot](/images/api/dialog.jpg)\n#### Modal dialog\nInsert a modal dialog that can rerun independently from the rest of the script.\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n](/develop/api-reference/execution-flow/st.dialog)[![screenshot](/images/api/empty.jpg)\n#### Empty\nInsert a single-element container.\n`c = st.empty() st.write(\"This will show last\") c.write(\"This will be replaced\") c.write(\"This will show first\")`\n](/develop/api-reference/layout/st.empty)[![screenshot](/images/api/expander.jpg)\n#### Expander\nInsert a multi-element container that can be expanded/collapsed.\n`with st.expander(\"Open to see more\"): st.write(\"This is more content\")`\n](/develop/api-reference/layout/st.expander)[![screenshot](/images/api/popover.svg)\n#### Popover\nInsert a multi-element popover container that can be opened/closed.\n`with st.popover(\"Settings\"): st.checkbox(\"Show completed\")`\n](/develop/api-reference/layout/st.popover)[![screenshot](/images/api/sidebar.jpg)\n#### Sidebar\nDisplay items in a sidebar.\n`st.sidebar.write(\"This lives in the sidebar\") st.sidebar.button(\"Click me!\")`\n](/develop/api-reference/layout/st.sidebar)[![screenshot](/images/api/tabs.jpg)\n#### Tabs\nInsert containers separated into tabs.\n`tab1, tab2 = st.tabs([\"Tab 1\", \"Tab2\"]) tab1.write(\"this is tab 1\") tab2.write(\"this is tab 2\")`\n](/develop/api-reference/layout/st.tabs)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/elements.jpg)\n#### Streamlit Elements\n](https://github.com/okld/streamlit-elements)\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n[![screenshot](/images/api/components/pydantic.jpg)\n#### Pydantic\n](https://github.com/lukasmasuch/streamlit-pydantic)\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n[![screenshot](/images/api/components/pages.jpg)\n#### Streamlit Pages\n](https://github.com/blackary/st_pages)\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n### [](/develop/api-reference#chat-elements)Chat elements\nStreamlit provides a few commands to help you build conversational apps. These chat elements are designed to be used in conjunction with each other, but you can also use them separately.\n`st.chat_message` lets you insert a chat message container into the app so you can display messages from the user or the app. Chat containers can contain other Streamlit elements, including charts, tables, text, and more. `st.chat_input` lets you display a chat input widget so the user can type in a message.\n[![screenshot](/images/api/chat_input.jpg)\n#### Chat input\nDisplay a chat input widget.\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/chat_message.jpg)\n#### Chat message\nInsert a chat message container.\n`import numpy as np with st.chat_message(\"user\"): st.write(\"Hello 👋\") st.line_chart(np.random.randn(30, 3))`\n](/develop/api-reference/chat/st.chat_message)[![screenshot](/images/api/status.jpg)\n#### Status container\nDisplay output of long-running tasks in a container.\n`with st.status('Running'): do_something_slow()`\n](/develop/api-reference/status/st.status)[\n#### st.write\\_stream\nWrite generators or streams to the app with a typewriter effect.\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n](/develop/api-reference/write-magic/st.write_stream)\n### [](/develop/api-reference#status-elements)Status elements\n[![screenshot](/images/api/progress.jpg)\n#### Progress bar\nDisplay a progress bar.\n`for i in range(101): st.progress(i) do_something_slow()`\n](/develop/api-reference/status/st.progress)[![screenshot](/images/api/spinner.jpg)\n#### Spinner\nTemporarily displays a message while executing a block of code.\n`with st.spinner(\"Please wait...\"): do_something_slow()`\n](/develop/api-reference/status/st.spinner)[![screenshot](/images/api/status.jpg)\n#### Status container\nDisplay output of long-running tasks in a container.\n`with st.status('Running'): do_something_slow()`\n](/develop/api-reference/status/st.status)[![screenshot](/images/api/toast.jpg)\n#### Toast\nBriefly displays a toast message in the bottom-right corner.\n`st.toast('Butter!', icon='🧈')`\n](/develop/api-reference/status/st.toast)[![screenshot](/images/api/balloons.jpg)\n#### Balloons\nDisplay celebratory balloons!\n`do_something() # Celebrate when all done! st.balloons()`\n](/develop/api-reference/status/st.balloons)[![screenshot](/images/api/snow.jpg)\n#### Snowflakes\nDisplay celebratory snowflakes!\n`do_something() # Celebrate when all done! st.snow()`\n](/develop/api-reference/status/st.snow)[![screenshot](/images/api/success.jpg)\n#### Success box\nDisplay a success message.\n`st.success(\"Match found!\")`\n](/develop/api-reference/status/st.success)[![screenshot](/images/api/info.jpg)\n#### Info box\nDisplay an informational message.\n`st.info(\"Dataset is updated every day at midnight.\")`\n](/develop/api-reference/status/st.info)[![screenshot](/images/api/warning.jpg)\n#### Warning box\nDisplay warning message.\n`st.warning(\"Unable to fetch image. Skipping...\")`\n](/develop/api-reference/status/st.warning)[![screenshot](/images/api/error.jpg)\n#### Error box\nDisplay error message.\n`st.error(\"We encountered an error\")`\n](/develop/api-reference/status/st.error)[![screenshot](/images/api/exception.jpg)\n#### Exception output\nDisplay an exception.\n`e = RuntimeError(\"This is an exception of type RuntimeError\") st.exception(e)`\n](/develop/api-reference/status/st.exception)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/stqdm.jpg)\n#### Stqdm\n](https://github.com/Wirg/stqdm)\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n[![screenshot](/images/api/components/custom-notification-box.jpg)\n#### Custom notification box\n](https://github.com/Socvest/streamlit-custom-notification-box)\n[A custom notification box with the ability to close it out. Created by](https://github.com/Socvest/streamlit-custom-notification-box) [@Socvest](https://github.com/Socvest).\n`from streamlit_custom_notification_box import custom_notification_box styles = {'material-icons':{'color': 'red'}, 'text-icon-link-close-container': {'box-shadow': '#3896de 0px 4px'}, 'notification-text': {'':''}, 'close-button':{'':''}, 'link':{'':''}} custom_notification_box(icon='info', textDisplay='We are almost done with your registration...', externalLink='more info', url='#', styles=styles, key=\"foo\")`\n[![screenshot](/images/api/components/extras-emojis.jpg)\n#### Streamlit Extras\n](https://extras.streamlit.app/)\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n`from streamlit_extras.let_it_rain import rain rain(emoji=\"🎈\", font_size=54, falling_speed=5, animation_length=\"infinite\",)`\n## [](/develop/api-reference#app-logic-and-configuration)App logic and configuration\n### [](/develop/api-reference#authentication-and-user-info)Authentication and user info\n[\n#### Log in a user\n`st.login()` starts an authentication flow with an identity provider.\n`st.login()`\n](/develop/api-reference/user/st.login)[\n#### Log out a user\n`st.logout()` removes a user's identity information.\n`st.logout()`\n](/develop/api-reference/user/st.logout)[\n#### User info\n`st.user` returns information about a logged-in user.\n`if st.user.is_logged_in: st.write(f\"Welcome back, {st.user.name}!\")`\n](/develop/api-reference/user/st.user)\n### [](/develop/api-reference#navigation-and-pages)Navigation and pages\n[![screenshot](/images/api/navigation.jpg)\n#### Navigation\nConfigure the available pages in a multipage app.\n`st.navigation({ \"Your account\" : [log_out, settings], \"Reports\" : [overview, usage], \"Tools\" : [search] })`\n](/develop/api-reference/navigation/st.navigation)[![screenshot](/images/api/page.jpg)\n#### Page\nDefine a page in a multipage app.\n`home = st.Page( \"home.py\", title=\"Home\", icon=\":material/home:\" )`\n](/develop/api-reference/navigation/st.page)[![screenshot](/images/api/page_link.jpg)\n#### Page link\nDisplay a link to another page in a multipage app.\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n](/develop/api-reference/widgets/st.page_link)[\n#### Switch page\nProgrammatically navigates to a specified page.\n`st.switch_page(\"pages/my_page.py\")`\n](/develop/api-reference/navigation/st.switch_page)\n### [](/develop/api-reference#execution-flow)Execution flow\n[![screenshot](/images/api/dialog.jpg)\n#### Modal dialog\nInsert a modal dialog that can rerun independently from the rest of the script.\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n](/develop/api-reference/execution-flow/st.dialog)[\n#### Forms\nCreate a form that batches elements together with a “Submit\" button.\n`with st.form(key='my_form'): name = st.text_input(\"Name\") email = st.text_input(\"Email\") st.form_submit_button(\"Sign up\")`\n](/develop/api-reference/execution-flow/st.form)[\n#### Fragments\nDefine a fragment to rerun independently from the rest of the script.\n`@st.fragment(run_every=\"10s\") def fragment(): df = get_data() st.line_chart(df)`\n](/develop/api-reference/execution-flow/st.fragment)[\n#### Rerun script\nRerun the script immediately.\n`st.rerun()`\n](/develop/api-reference/execution-flow/st.rerun)[\n#### Stop execution\nStops execution immediately.\n`st.stop()`\n](/develop/api-reference/execution-flow/st.stop)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/autorefresh.jpg)\n#### Autorefresh\n](https://github.com/kmcgrady/streamlit-autorefresh)\n[Force a refresh without tying up a script. Created by](https://github.com/kmcgrady/streamlit-autorefresh) [@kmcgrady](https://github.com/kmcgrady).\n`from streamlit_autorefresh import st_autorefresh st_autorefresh(interval=2000, limit=100, key=\"fizzbuzzcounter\")`\n[![screenshot](/images/api/components/pydantic.jpg)\n#### Pydantic\n](https://github.com/lukasmasuch/streamlit-pydantic)\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n[![screenshot](/images/api/components/pages.jpg)\n#### Streamlit Pages\n](https://github.com/blackary/st_pages)\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n### [](/develop/api-reference#caching-and-state)Caching and state\n[\n#### Cache data\nFunction decorator to cache functions that return data (e.g. dataframe transforms, database queries, ML inference).\n`@st.cache_data def long_function(param1, param2): # Perform expensive computation here or # fetch data from the web here return data`\n](/develop/api-reference/caching-and-state/st.cache_data)[\n#### Cache resource\nFunction decorator to cache functions that return global resources (e.g. database connections, ML models).\n`@st.cache_resource def init_model(): # Return a global resource here return pipeline( \"sentiment-analysis\", model=\"distilbert-base-uncased-finetuned-sst-2-english\" )`\n](/develop/api-reference/caching-and-state/st.cache_resource)[\n#### Session state\nSession state is a way to share variables between reruns, for each user session.\n`st.session_state['key'] = value`\n](/develop/api-reference/caching-and-state/st.session_state)[\n#### Query parameters\nGet, set, or clear the query parameters that are shown in the browser's URL bar.\n`st.query_params[key] = value st.query_params.clear()`\n](/develop/api-reference/caching-and-state/st.query_params)[\n#### Context\n`st.context` provides a read-only interface to access cookies, headers, locale, and other browser-session information.\n`st.context.cookies st.context.headers`\n](/develop/api-reference/caching-and-state/st.context)\n### [](/develop/api-reference#connections-and-databases)Connections and databases\n#### [](/develop/api-reference#setup-your-connection)Setup your connection\n[![screenshot](/images/api/connection.svg)\n#### Create a connection\nConnect to a data source or API\n`conn = st.connection('pets_db', type='sql') pet_owners = conn.query('select * from pet_owners') st.dataframe(pet_owners)`\n](/develop/api-reference/connections/st.connection)\n#### [](/develop/api-reference#built-in-connections)Built-in connections\n[![screenshot](/images/api/connections.SnowflakeConnection.svg)\n#### SnowflakeConnection\nA connection to Snowflake.\n`conn = st.connection('snowflake')`\n](/develop/api-reference/connections/st.connections.snowflakeconnection)[![screenshot](/images/api/connections.SQLConnection.svg)\n#### SQLConnection\nA connection to a SQL database using SQLAlchemy.\n`conn = st.connection('sql')`\n](/develop/api-reference/connections/st.connections.sqlconnection)\n#### [](/develop/api-reference#build-your-own-connections)Build your own connections\n[\n#### Connection base class\nBuild your own connection with `BaseConnection`.\n`class MyConnection(BaseConnection[myconn.MyConnection]): def _connect(self, **kwargs) -> MyConnection: return myconn.connect(**self._secrets, **kwargs) def query(self, query): return self._instance.query(query)`\n](/develop/api-reference/connections/st.connections.baseconnection)\n#### [](/develop/api-reference#secrets-management)Secrets management\n[\n#### Secrets singleton\nAccess secrets from a local TOML file.\n`key = st.secrets[\"OpenAI_key\"]`\n](/develop/api-reference/connections/st.secrets)[\n#### Secrets file\nSave your secrets in a per-project or per-profile TOML file.\n`OpenAI_key = \"\"`\n](/develop/api-reference/connections/secrets.toml)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/authenticator.jpg)\n#### Authenticator\n](https://github.com/mkhorasani/Streamlit-Authenticator)\n[A secure authentication module to validate user credentials. Created by](https://github.com/mkhorasani/Streamlit-Authenticator) [@mkhorasani](https://github.com/mkhorasani).\n`import streamlit_authenticator as stauth authenticator = stauth.Authenticate( config['credentials'], config['cookie']['name'], config['cookie']['key'], config['cookie']['expiry_days'], config['preauthorized'])`\n[![screenshot](/images/api/components/localstorage.jpg)\n#### WS localStorage\n](https://github.com/gagangoku/streamlit-ws-localstorage)\n[A simple synchronous way of accessing localStorage from your app. Created by](https://github.com/gagangoku/streamlit-ws-localstorage) [@gagangoku](https://github.com/gagangoku).\n`from streamlit_ws_localstorage import injectWebsocketCode ret = conn.setLocalStorageVal(key='k1', val='v1') st.write('ret: ' + ret)`\n[![screenshot](/images/api/components/auth0.jpg)\n#### Streamlit Auth0\n](https://github.com/conradbez/streamlit-auth0)\n[The fastest way to provide comprehensive login inside Streamlit. Created by](https://github.com/conradbez/streamlit-auth0) [@conradbez](https://github.com/conradbez).\n`from auth0_component import login_button user_info = login_button(clientId, domain = domain) st.write(user_info)`\n### [](/develop/api-reference#custom-components)Custom Components\n[\n#### Declare a component\nCreate and register a custom component.\n`from st.components.v1 import declare_component declare_component( \"custom_slider\", \"/frontend\", )`\n](/develop/api-reference/custom-components/st.components.v1.declare_component)[\n#### HTML\nDisplay an HTML string in an iframe.\n`from st.components.v1 import html html( \"Foo bar.\" )`\n](/develop/api-reference/custom-components/st.components.v1.html)[\n#### iframe\nLoad a remote URL in an iframe.\n`from st.components.v1 import iframe iframe( \"docs.streamlit.io\" )`\n](/develop/api-reference/custom-components/st.components.v1.iframe)\n### [](/develop/api-reference#configuration)Configuration\n[\n#### Configuration file\nConfigures the default settings for your app.\n`your-project/ ├── .streamlit/ │ └── config.toml └── your_app.py`\n](/develop/api-reference/configuration/config.toml)[\n#### Get config option\nRetrieve a single configuration option.\n`st.get_option(\"theme.primaryColor\")`\n](/develop/api-reference/configuration/st.get_option)[\n#### Set config option\nSet a single configuration option. (This is very limited.)\n`st.set_option(\"deprecation.showPyplotGlobalUse\", False)`\n](/develop/api-reference/configuration/st.set_option)[\n#### Set page title, favicon, and more\nConfigures the default settings of the page.\n`st.set_page_config( page_title=\"My app\", page_icon=\":shark:\", )`\n](/develop/api-reference/configuration/st.set_page_config)\n## [](/develop/api-reference#developer-tools)Developer tools\n### [](/develop/api-reference#app-testing)App testing\n[\n#### st.testing.v1.AppTest\n`st.testing.v1.AppTest` simulates a running Streamlit app for testing.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.secrets[\"WORD\"] = \"Foobar\" at.run() assert not at.exception at.text_input(\"word\").input(\"Bazbat\").run() assert at.warning[0].value == \"Try again.\"`\n](/develop/api-reference/app-testing/st.testing.v1.apptest)[\n#### AppTest.from\\_file\n`st.testing.v1.AppTest.from_file` initializes a simulated app from a file.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.run()`\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_file)[\n#### AppTest.from\\_string\n`st.testing.v1.AppTest.from_string` initializes a simulated app from a string.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_string(app_script_as_string) at.run()`\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_string)[\n#### AppTest.from\\_function\n`st.testing.v1.AppTest.from_function` initializes a simulated app from a function.\n`from streamlit.testing.v1 import AppTest at = AppTest.from_function(app_script_as_callable) at.run()`\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_function)[\n#### Block\nA representation of container elements, including:\n*\n`st.chat_message`\n*\n`st.columns`\n*\n`st.sidebar`\n*\n`st.tabs`\n*\nThe main body of the app.\n`# at.sidebar returns a Block at.sidebar.button[0].click().run() assert not at.exception`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeblock)[\n#### Element\nThe base class for representation of all elements, including:\n*\n`st.title`\n*\n`st.header`\n*\n`st.markdown`\n*\n`st.dataframe`\n`# at.title returns a sequence of Title # Title inherits from Element assert at.title[0].value == \"My awesome app\"`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeelement)[\n#### Button\nA representation of `st.button` and `st.form_submit_button`.\n`at.button[0].click().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treebutton)[\n#### ChatInput\nA representation of `st.chat_input`.\n`at.chat_input[0].set_value(\"What is Streamlit?\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treechatinput)[\n#### Checkbox\nA representation of `st.checkbox`.\n`at.checkbox[0].check().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecheckbox)[\n#### ColorPicker\nA representation of `st.color_picker`.\n`at.color_picker[0].pick(\"#FF4B4B\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecolorpicker)[\n#### DateInput\nA representation of `st.date_input`.\n`release_date = datetime.date(2023, 10, 26) at.date_input[0].set_value(release_date).run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treedateinput)[\n#### Multiselect\nA representation of `st.multiselect`.\n`at.multiselect[0].select(\"New York\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treemultiselect)[\n#### NumberInput\nA representation of `st.number_input`.\n`at.number_input[0].increment().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treenumberinput)[\n#### Radio\nA representation of `st.radio`.\n`at.radio[0].set_value(\"New York\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeradio)[\n#### SelectSlider\nA representation of `st.select_slider`.\n`at.select_slider[0].set_range(\"A\",\"C\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectslider)[\n#### Selectbox\nA representation of `st.selectbox`.\n`at.selectbox[0].select(\"New York\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectbox)[\n#### Slider\nA representation of `st.slider`.\n`at.slider[0].set_range(2,5).run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeslider)[\n#### TextArea\nA representation of `st.text_area`.\n`at.text_area[0].input(\"Streamlit is awesome!\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextarea)[\n#### TextInput\nA representation of `st.text_input`.\n`at.text_input[0].input(\"Streamlit\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextinput)[\n#### TimeInput\nA representation of `st.time_input`.\n`at.time_input[0].increment().run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetimeinput)[\n#### Toggle\nA representation of `st.toggle`.\n`at.toggle[0].set_value(\"True\").run()`\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetoggle)\nThird-party components\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n#### Pandas Profiling\n](https://github.com/okld/streamlit-pandas-profiling)\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n[![screenshot](/images/api/components/ace.jpg)\n#### Streamlit Ace\n](https://github.com/okld/streamlit-ace)\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n`from streamlit_ace import st_ace content = st_ace() content`\n[![screenshot](/images/api/components/analytics.jpg)\n#### Streamlit Analytics\n](https://github.com/jrieke/streamlit-analytics)\n[Track & visualize user interactions with your streamlit app. Created by](https://github.com/jrieke/streamlit-analytics) [@jrieke](https://github.com/jrieke).\n`import streamlit_analytics with streamlit_analytics.track(): st.text_input(\"Write something\")`\n[_arrow\\_back_Previous: Concepts](/develop/concepts)[_arrow\\_forward_Next: Write and magic](/develop/api-reference/write-magic)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2"
      },
      "raw_result": "API Reference - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _add_\n            \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _add_\n            \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)\n\n# [](/develop/api-reference#api-reference)API reference\n\nStreamlit makes it easy for you to visualize, mutate, and share data. The API reference is organized by activity type, like displaying data or optimizing performance. Each section includes methods associated with the activity type, including examples.\n\nBrowse our API below and click to learn more about any of our available commands! 🎈\n\n## [](/develop/api-reference#display-almost-anything)Display almost anything\n\n### [](/develop/api-reference#write-and-magic)Write and magic\n\n  \n\n[\n\n#### st.write\n\nWrite arguments to the app.\n\n`st.write(\"Hello **world**!\") st.write(my_data_frame) st.write(my_mpl_figure)`\n\n\n\n](/develop/api-reference/write-magic/st.write)[\n\n#### st.write\\_stream\n\nWrite generators or streams to the app with a typewriter effect.\n\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n\n\n\n](/develop/api-reference/write-magic/st.write_stream)[\n\n#### Magic\n\nAny time Streamlit sees either a variable or literal value on its own line, it automatically writes that to your app using `st.write`\n\n`\"Hello **world**!\" my_data_frame my_mpl_figure`\n\n\n\n](/develop/api-reference/write-magic/magic)\n\n### [](/develop/api-reference#text-elements)Text elements\n\n  \n\n[![screenshot](/images/api/markdown.jpg)\n\n#### Markdown\n\nDisplay string formatted as Markdown.\n\n`st.markdown(\"Hello **world**!\")`\n\n\n\n](/develop/api-reference/text/st.markdown)[![screenshot](/images/api/title.jpg)\n\n#### Title\n\nDisplay text in title formatting.\n\n`st.title(\"The app title\")`\n\n\n\n](/develop/api-reference/text/st.title)[![screenshot](/images/api/header.jpg)\n\n#### Header\n\nDisplay text in header formatting.\n\n`st.header(\"This is a header\")`\n\n\n\n](/develop/api-reference/text/st.header)[![screenshot](/images/api/subheader.jpg)\n\n#### Subheader\n\nDisplay text in subheader formatting.\n\n`st.subheader(\"This is a subheader\")`\n\n\n\n](/develop/api-reference/text/st.subheader)[![screenshot](/images/api/badge.jpg)\n\n#### Badge\n\nDisplay a small, colored badge.\n\n`st.badge(\"New\")`\n\n\n\n](/develop/api-reference/text/st.badge)[![screenshot](/images/api/caption.jpg)\n\n#### Caption\n\nDisplay text in small font.\n\n`st.caption(\"This is written small caption text\")`\n\n\n\n](/develop/api-reference/text/st.caption)[![screenshot](/images/api/code.jpg)\n\n#### Code block\n\nDisplay a code block with optional syntax highlighting.\n\n`st.code(\"a = 1234\")`\n\n\n\n](/develop/api-reference/text/st.code)[![screenshot](/images/api/code.jpg)\n\n#### Echo\n\nDisplay some code in the app, then execute it. Useful for tutorials.\n\n`with st.echo(): st.write('This code will be printed')`\n\n\n\n](/develop/api-reference/text/st.echo)[![screenshot](/images/api/latex.jpg)\n\n#### LaTeX\n\nDisplay mathematical expressions formatted as LaTeX.\n\n`st.latex(\"\\int a x^2 \\,dx\")`\n\n\n\n](/develop/api-reference/text/st.latex)[![screenshot](/images/api/text.jpg)\n\n#### Preformatted text\n\nWrite fixed-width and preformatted text.\n\n`st.text(\"Hello world\")`\n\n\n\n](/develop/api-reference/text/st.text)[![screenshot](/images/api/divider.jpg)\n\n#### Divider\n\nDisplay a horizontal rule.\n\n`st.divider()`\n\n\n\n](/develop/api-reference/text/st.divider)[\n\n#### Get help\n\nDisplay object’s doc string, nicely formatted.\n\n`st.help(st.write) st.help(pd.DataFrame)`\n\n\n\n](/develop/api-reference/text/st.help)[\n\n#### Render HTML\n\nRenders HTML strings to your app.\n\n`st.html(\"<p>Foo bar.</p>\")`\n\n\n\n](/develop/api-reference/text/st.html)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/nlu.jpg)\n\n#### NLU\n\n](https://github.com/JohnSnowLabs/nlu)\n\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n\n[![screenshot](/images/api/components/extras-mentions.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n\n[![screenshot](/images/api/components/annotated-text.jpg)\n\n#### Annotated text\n\n](https://github.com/tvst/st-annotated-text)\n\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/nlu.jpg)\n\n#### NLU\n\n](https://github.com/JohnSnowLabs/nlu)\n\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n\n[![screenshot](/images/api/components/extras-mentions.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n\n[![screenshot](/images/api/components/annotated-text.jpg)\n\n#### Annotated text\n\n](https://github.com/tvst/st-annotated-text)\n\n[Display annotated text in Streamlit apps. Created by](https://github.com/tvst/st-annotated-text) [@tvst](https://github.com/tvst).\n\n`annotated_text(\"This \", (\"is\", \"verb\"), \" some \", (\"annotated\", \"adj\"), (\"text\", \"noun\"), \" for those of \", (\"you\", \"pronoun\"), \" who \", (\"like\", \"verb\"), \" this sort of \", (\"thing\", \"noun\"), \".\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/nlu.jpg)\n\n#### NLU\n\n](https://github.com/JohnSnowLabs/nlu)\n\n[Apply text mining on a dataframe. Created by](https://github.com/JohnSnowLabs/nlu) [@JohnSnowLabs](https://github.com/JohnSnowLabs/).\n\n`nlu.load(\"sentiment\").predict(\"I love NLU! <3\")`\n\n[![screenshot](/images/api/components/extras-mentions.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`mention(label=\"An awesome Streamlit App\", icon=\"streamlit\", url=\"https://extras.streamlit.app\",)`\n\nNext\n\n### [](/develop/api-reference#data-elements)Data elements\n\n  \n\n[![screenshot](/images/api/dataframe.jpg)\n\n#### Dataframes\n\nDisplay a dataframe as an interactive table.\n\n`st.dataframe(my_data_frame)`\n\n\n\n](/develop/api-reference/data/st.dataframe)[![screenshot](/images/api/data_editor.jpg)\n\n#### Data editor\n\nDisplay a data editor widget.\n\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n\n\n\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/column_config.jpg)\n\n#### Column configuration\n\nConfigure the display and editing behavior of dataframes and data editors.\n\n`st.column_config.NumberColumn(\"Price (in USD)\", min_value=0, format=\"$%d\")`\n\n\n\n](/develop/api-reference/data/st.column_config)[![screenshot](/images/api/table.jpg)\n\n#### Static tables\n\nDisplay a static table.\n\n`st.table(my_data_frame)`\n\n\n\n](/develop/api-reference/data/st.table)[![screenshot](/images/api/metric.jpg)\n\n#### Metrics\n\nDisplay a metric in big bold font, with an optional indicator of how the metric changed.\n\n`st.metric(\"My metric\", 42, 2)`\n\n\n\n](/develop/api-reference/data/st.metric)[![screenshot](/images/api/json.jpg)\n\n#### Dicts and JSON\n\nDisplay object or string as a pretty-printed JSON string.\n\n`st.json(my_dict)`\n\n\n\n](/develop/api-reference/data/st.json)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n\n[![screenshot](/images/api/components/aggrid.jpg)\n\n#### Streamlit Aggrid\n\n](https://github.com/PablocFonseca/streamlit-aggrid)\n\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n\n#### Pandas Profiling\n\n](https://github.com/okld/streamlit-pandas-profiling)\n\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n\n[![screenshot](/images/api/components/aggrid.jpg)\n\n#### Streamlit Aggrid\n\n](https://github.com/PablocFonseca/streamlit-aggrid)\n\n[Implementation of Ag-Grid component for Streamlit. Created by](https://github.com/PablocFonseca/streamlit-aggrid) [@PablocFonseca](https://github.com/PablocFonseca).\n\n`df = pd.DataFrame({'col1': [1, 2, 3], 'col2': [4, 5, 6]}) grid_return = AgGrid(df, editable=True) new_df = grid_return['data']`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) folium.Marker([39.949610, -75.150282], popup=\"Liberty Bell\", tooltip=\"Liberty Bell\").add_to(m) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n\n#### Pandas Profiling\n\n](https://github.com/okld/streamlit-pandas-profiling)\n\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates value = streamlit_image_coordinates(\"https://placekitten.com/200/300\") st.write(value)`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`from streamlit_plotly_events import plotly_events fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-metric-cards.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.metric_cards import style_metric_cards col3.metric(label=\"No Change\", value=5000, delta=0) style_metric_cards()`\n\nNext\n\n### [](/develop/api-reference#chart-elements)Chart elements\n\n  \n\n[![screenshot](/images/api/area_chart.jpg)\n\n#### Simple area charts\n\nDisplay an area chart.\n\n`st.area_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.area_chart)[![screenshot](/images/api/bar_chart.jpg)\n\n#### Simple bar charts\n\nDisplay a bar chart.\n\n`st.bar_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.bar_chart)[![screenshot](/images/api/line_chart.jpg)\n\n#### Simple line charts\n\nDisplay a line chart.\n\n`st.line_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.line_chart)[![screenshot](/images/api/scatter_chart.svg)\n\n#### Simple scatter charts\n\nDisplay a line chart.\n\n`st.scatter_chart(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.scatter_chart)[![screenshot](/images/api/map.jpg)\n\n#### Scatterplots on maps\n\nDisplay a map with points on it.\n\n`st.map(my_data_frame)`\n\n\n\n](/develop/api-reference/charts/st.map)[![screenshot](/images/api/pyplot.jpg)\n\n#### Matplotlib\n\nDisplay a matplotlib.pyplot figure.\n\n`st.pyplot(my_mpl_figure)`\n\n\n\n](/develop/api-reference/charts/st.pyplot)[![screenshot](/images/api/vega_lite_chart.jpg)\n\n#### Altair\n\nDisplay a chart using the Altair library.\n\n`st.altair_chart(my_altair_chart)`\n\n\n\n](/develop/api-reference/charts/st.altair_chart)[![screenshot](/images/api/vega_lite_chart.jpg)\n\n#### Vega-Lite\n\nDisplay a chart using the Vega-Lite library.\n\n`st.vega_lite_chart(my_vega_lite_chart)`\n\n\n\n](/develop/api-reference/charts/st.vega_lite_chart)[![screenshot](/images/api/plotly_chart.jpg)\n\n#### Plotly\n\nDisplay an interactive Plotly chart.\n\n`st.plotly_chart(my_plotly_chart)`\n\n\n\n](/develop/api-reference/charts/st.plotly_chart)[![screenshot](/images/api/bokeh_chart.jpg)\n\n#### Bokeh\n\nDisplay an interactive Bokeh chart.\n\n`st.bokeh_chart(my_bokeh_chart)`\n\n\n\n](/develop/api-reference/charts/st.bokeh_chart)[![screenshot](/images/api/pydeck_chart.jpg)\n\n#### PyDeck\n\nDisplay a chart using the PyDeck library.\n\n`st.pydeck_chart(my_pydeck_chart)`\n\n\n\n](/develop/api-reference/charts/st.pydeck_chart)[![screenshot](/images/api/graphviz_chart.jpg)\n\n#### GraphViz\n\nDisplay a graph using the dagre-d3 library.\n\n`st.graphviz_chart(my_graphviz_spec)`\n\n\n\n](/develop/api-reference/charts/st.graphviz_chart)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n\n[![screenshot](/images/api/components/plost.jpg)\n\n#### Plost\n\n](https://github.com/tvst/plost)\n\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n\n[![screenshot](/images/api/components/hiplot.jpg)\n\n#### HiPlot\n\n](https://github.com/facebookresearch/hiplot)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n\n[![screenshot](/images/api/components/echarts.jpg)\n\n#### ECharts\n\n](https://github.com/andfanilo/streamlit-echarts)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/spacy.jpg)\n\n#### Spacy-Streamlit\n\n](https://github.com/explosion/spacy-streamlit)\n\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n\n[![screenshot](/images/api/components/agraph.jpg)\n\n#### Streamlit Agraph\n\n](https://github.com/ChrisDelClea/streamlit-agraph)\n\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n\n[![screenshot](/images/api/components/plost.jpg)\n\n#### Plost\n\n](https://github.com/tvst/plost)\n\n[A deceptively simple plotting library for Streamlit. Created by](https://github.com/tvst/plost) [@tvst](https://github.com/tvst).\n\n`import plost plost.line_chart(my_dataframe, x='time', y='stock_value', color='stock_name',)`\n\n[![screenshot](/images/api/components/hiplot.jpg)\n\n#### HiPlot\n\n](https://github.com/facebookresearch/hiplot)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/facebookresearch/hiplot) [@facebookresearch](https://github.com/facebookresearch).\n\n`data = [{'dropout':0.1, 'lr': 0.001, 'loss': 10.0, 'optimizer': 'SGD'}, {'dropout':0.15, 'lr': 0.01, 'loss': 3.5, 'optimizer': 'Adam'}, {'dropout':0.3, 'lr': 0.1, 'loss': 4.5, 'optimizer': 'Adam'}] hip.Experiment.from_iterable(data).display()`\n\n[![screenshot](/images/api/components/echarts.jpg)\n\n#### ECharts\n\n](https://github.com/andfanilo/streamlit-echarts)\n\n[High dimensional Interactive Plotting. Created by](https://github.com/andfanilo/streamlit-echarts) [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_echarts import st_echarts st_echarts(options=options)`\n\n[![screenshot](/images/api/components/folium.jpg)\n\n#### Streamlit Folium\n\n](https://github.com/randyzwitch/streamlit-folium)\n\n[Streamlit Component for rendering Folium maps. Created by](https://github.com/randyzwitch/streamlit-folium) [@randyzwitch](https://github.com/randyzwitch).\n\n`m = folium.Map(location=[39.949610, -75.150282], zoom_start=16) st_data = st_folium(m, width=725)`\n\n[![screenshot](/images/api/components/spacy.jpg)\n\n#### Spacy-Streamlit\n\n](https://github.com/explosion/spacy-streamlit)\n\n[spaCy building blocks and visualizers for Streamlit apps. Created by](https://github.com/explosion/spacy-streamlit) [@explosion](https://github.com/explosion).\n\n`models = [\"en_core_web_sm\", \"en_core_web_md\"] spacy_streamlit.visualize(models, \"Sundar Pichai is the CEO of Google.\")`\n\n[![screenshot](/images/api/components/agraph.jpg)\n\n#### Streamlit Agraph\n\n](https://github.com/ChrisDelClea/streamlit-agraph)\n\n[A Streamlit Graph Vis, based on](https://github.com/ChrisDelClea/streamlit-agraph) [react-grah-vis](https://github.com/crubier/react-graph-vis). Created by [@ChrisDelClea](https://github.com/ChrisDelClea).\n\n`from streamlit_agraph import agraph, Node, Edge, Config agraph(nodes=nodes, edges=edges, config=config)`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/plotly-events.jpg)\n\n#### Plotly Events\n\n](https://github.com/null-jones/streamlit-plotly-events)\n\n[Make Plotly charts interactive!. Created by](https://github.com/null-jones/streamlit-plotly-events) [@null-jones](https://github.com/null-jones/).\n\n`fig = px.line(x=[1], y=[1]) selected_points = plotly_events(fig)`\n\n[![screenshot](/images/api/components/extras-chart-annotations.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`chart += get_annotations_chart(annotations=[(\"Mar 01, 2008\", \"Pretty good day for GOOG\"), (\"Dec 01, 2007\", \"Something's going wrong for GOOG & AAPL\"), (\"Nov 01, 2008\", \"Market starts again thanks to...\"), (\"Dec 01, 2009\", \"Small crash for GOOG after...\"),],) st.altair_chart(chart, use_container_width=True)`\n\nNext\n\n### [](/develop/api-reference#input-widgets)Input widgets\n\n  \n\n[![screenshot](/images/api/button.svg)\n\n#### Button\n\nDisplay a button widget.\n\n`clicked = st.button(\"Click me\")`\n\n\n\n](/develop/api-reference/widgets/st.button)[![screenshot](/images/api/download_button.svg)\n\n#### Download button\n\nDisplay a download button widget.\n\n`st.download_button(\"Download file\", file)`\n\n\n\n](/develop/api-reference/widgets/st.download_button)[![screenshot](/images/api/form_submit_button.svg)\n\n#### Form button\n\nDisplay a form submit button. For use with `st.form`.\n\n`st.form_submit_button(\"Sign up\")`\n\n\n\n](/develop/api-reference/execution-flow/st.form_submit_button)[![screenshot](/images/api/link_button.svg)\n\n#### Link button\n\nDisplay a link button.\n\n`st.link_button(\"Go to gallery\", url)`\n\n\n\n](/develop/api-reference/widgets/st.link_button)[![screenshot](/images/api/page_link.jpg)\n\n#### Page link\n\nDisplay a link to another page in a multipage app.\n\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n\n\n\n](/develop/api-reference/widgets/st.page_link)[![screenshot](/images/api/checkbox.jpg)\n\n#### Checkbox\n\nDisplay a checkbox widget.\n\n`selected = st.checkbox(\"I agree\")`\n\n\n\n](/develop/api-reference/widgets/st.checkbox)[![screenshot](/images/api/color_picker.jpg)\n\n#### Color picker\n\nDisplay a color picker widget.\n\n`color = st.color_picker(\"Pick a color\")`\n\n\n\n](/develop/api-reference/widgets/st.color_picker)[![screenshot](/images/api/feedback.jpg)\n\n#### Feedback\n\nDisplay a rating or sentiment button group.\n\n`st.feedback(\"stars\")`\n\n\n\n](/develop/api-reference/widgets/st.feedback)[![screenshot](/images/api/multiselect.jpg)\n\n#### Multiselect\n\nDisplay a multiselect widget. The multiselect widget starts as empty.\n\n`choices = st.multiselect(\"Buy\", [\"milk\", \"apples\", \"potatoes\"])`\n\n\n\n](/develop/api-reference/widgets/st.multiselect)[![screenshot](/images/api/pills.jpg)\n\n#### Pills\n\nDisplay a pill-button selection widget.\n\n`st.pills(\"Tags\", [\"Sports\", \"AI\", \"Politics\"])`\n\n\n\n](/develop/api-reference/widgets/st.pills)[![screenshot](/images/api/radio.jpg)\n\n#### Radio\n\nDisplay a radio button widget.\n\n`choice = st.radio(\"Pick one\", [\"cats\", \"dogs\"])`\n\n\n\n](/develop/api-reference/widgets/st.radio)[![screenshot](/images/api/segmented_control.jpg)\n\n#### Segmented control\n\nDisplay a segmented-button selection widget.\n\n`st.segmented_control(\"Filter\", [\"Open\", \"Closed\", \"All\"])`\n\n\n\n](/develop/api-reference/widgets/st.segmented_control)[![screenshot](/images/api/selectbox.jpg)\n\n#### Selectbox\n\nDisplay a select widget.\n\n`choice = st.selectbox(\"Pick one\", [\"cats\", \"dogs\"])`\n\n\n\n](/develop/api-reference/widgets/st.selectbox)[![screenshot](/images/api/select_slider.jpg)\n\n#### Select-slider\n\nDisplay a slider widget to select items from a list.\n\n`size = st.select_slider(\"Pick a size\", [\"S\", \"M\", \"L\"])`\n\n\n\n](/develop/api-reference/widgets/st.select_slider)[![screenshot](/images/api/toggle.jpg)\n\n#### Toggle\n\nDisplay a toggle widget.\n\n`activated = st.toggle(\"Activate\")`\n\n\n\n](/develop/api-reference/widgets/st.toggle)[![screenshot](/images/api/number_input.jpg)\n\n#### Number input\n\nDisplay a numeric input widget.\n\n`choice = st.number_input(\"Pick a number\", 0, 10)`\n\n\n\n](/develop/api-reference/widgets/st.number_input)[![screenshot](/images/api/slider.jpg)\n\n#### Slider\n\nDisplay a slider widget.\n\n`number = st.slider(\"Pick a number\", 0, 100)`\n\n\n\n](/develop/api-reference/widgets/st.slider)[![screenshot](/images/api/date_input.jpg)\n\n#### Date input\n\nDisplay a date input widget.\n\n`date = st.date_input(\"Your birthday\")`\n\n\n\n](/develop/api-reference/widgets/st.date_input)[![screenshot](/images/api/time_input.jpg)\n\n#### Time input\n\nDisplay a time input widget.\n\n`time = st.time_input(\"Meeting time\")`\n\n\n\n](/develop/api-reference/widgets/st.time_input)[![screenshot](/images/api/chat_input.jpg)\n\n#### Chat input\n\nDisplay a chat input widget.\n\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n\n\n\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/text_area.jpg)\n\n#### Text-area\n\nDisplay a multi-line text input widget.\n\n`text = st.text_area(\"Text to translate\")`\n\n\n\n](/develop/api-reference/widgets/st.text_area)[![screenshot](/images/api/text_input.jpg)\n\n#### Text input\n\nDisplay a single-line text input widget.\n\n`name = st.text_input(\"First name\")`\n\n\n\n](/develop/api-reference/widgets/st.text_input)[![screenshot](/images/api/audio_input.jpg)\n\n#### Audio input\n\nDisplay a widget that allows users to record with their microphone.\n\n`speech = st.audio_input(\"Record a voice message\")`\n\n\n\n](/develop/api-reference/widgets/st.audio_input)[![screenshot](/images/api/data_editor.jpg)\n\n#### Data editor\n\nDisplay a data editor widget.\n\n`edited = st.data_editor(df, num_rows=\"dynamic\")`\n\n\n\n](/develop/api-reference/data/st.data_editor)[![screenshot](/images/api/file_uploader.jpg)\n\n#### File uploader\n\nDisplay a file uploader widget.\n\n`data = st.file_uploader(\"Upload a CSV\")`\n\n\n\n](/develop/api-reference/widgets/st.file_uploader)[![screenshot](/images/api/camera_input.jpg)\n\n#### Camera input\n\nDisplay a widget that allows users to upload images directly from a camera.\n\n`image = st.camera_input(\"Take a picture\")`\n\n\n\n](/develop/api-reference/widgets/st.camera_input)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/chat.jpg)\n\n#### Streamlit Chat\n\n](https://github.com/AI-Yash/st-chat)\n\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n\n[![screenshot](/images/api/components/option-menu.jpg)\n\n#### Streamlit Option Menu\n\n](https://github.com/victoryhb/streamlit-option-menu)\n\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n\n[![screenshot](/images/api/components/extras-toggle.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n\n[![screenshot](/images/api/components/elements.jpg)\n\n#### Streamlit Elements\n\n](https://github.com/okld/streamlit-elements)\n\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/stqdm.jpg)\n\n#### Stqdm\n\n](https://github.com/Wirg/stqdm)\n\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n\n[![screenshot](/images/api/components/timeline.jpg)\n\n#### Timeline\n\n](https://github.com/innerdoc/streamlit-timeline)\n\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n\n[![screenshot](/images/api/components/camera-live.jpg)\n\n#### Camera input live\n\n](https://github.com/blackary/streamlit-camera-input-live)\n\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n\n[![screenshot](/images/api/components/ace.jpg)\n\n#### Streamlit Ace\n\n](https://github.com/okld/streamlit-ace)\n\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n\n`from streamlit_ace import st_ace content = st_ace() content`\n\n[![screenshot](/images/api/components/chat.jpg)\n\n#### Streamlit Chat\n\n](https://github.com/AI-Yash/st-chat)\n\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n\n[![screenshot](/images/api/components/option-menu.jpg)\n\n#### Streamlit Option Menu\n\n](https://github.com/victoryhb/streamlit-option-menu)\n\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n\n[![screenshot](/images/api/components/extras-toggle.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n\n[![screenshot](/images/api/components/elements.jpg)\n\n#### Streamlit Elements\n\n](https://github.com/okld/streamlit-elements)\n\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n\n[![screenshot](/images/api/components/tags.jpg)\n\n#### Tags\n\n](https://github.com/gagan3012/streamlit-tags)\n\n[Add tags to your Streamlit apps. Created by](https://github.com/gagan3012/streamlit-tags) [@gagan3012](https://github.com/gagan3012).\n\n`from streamlit_tags import st_tags st_tags(label='# Enter Keywords:', text='Press enter to add more', value=['Zero', 'One', 'Two'], suggestions=['five', 'six', 'seven', 'eight', 'nine', 'three', 'eleven', 'ten', 'four'], maxtags = 4, key='1')`\n\n[![screenshot](/images/api/components/stqdm.jpg)\n\n#### Stqdm\n\n](https://github.com/Wirg/stqdm)\n\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n\n[![screenshot](/images/api/components/timeline.jpg)\n\n#### Timeline\n\n](https://github.com/innerdoc/streamlit-timeline)\n\n[Display a Timeline in Streamlit apps using](https://github.com/innerdoc/streamlit-timeline) [TimelineJS](https://timeline.knightlab.com/). Created by [@innerdoc](https://github.com/innerdoc).\n\n`from streamlit_timeline import timeline with open('example.json', \"r\") as f: timeline(f.read(), height=800)`\n\n[![screenshot](/images/api/components/camera-live.jpg)\n\n#### Camera input live\n\n](https://github.com/blackary/streamlit-camera-input-live)\n\n[Alternative for st.camera\\_input which returns the webcam images live. Created by](https://github.com/blackary/streamlit-camera-input-live) [@blackary](https://github.com/blackary).\n\n`from camera_input_live import camera_input_live image = camera_input_live() st.image(value)`\n\n[![screenshot](/images/api/components/ace.jpg)\n\n#### Streamlit Ace\n\n](https://github.com/okld/streamlit-ace)\n\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n\n`from streamlit_ace import st_ace content = st_ace() content`\n\n[![screenshot](/images/api/components/chat.jpg)\n\n#### Streamlit Chat\n\n](https://github.com/AI-Yash/st-chat)\n\n[Streamlit Component for a Chatbot UI. Created by](https://github.com/AI-Yash/st-chat) [@AI-Yash](https://github.com/AI-Yash).\n\n`from streamlit_chat import message message(\"My message\") message(\"Hello bot!\", is_user=True) # align's the message to the right`\n\n[![screenshot](/images/api/components/option-menu.jpg)\n\n#### Streamlit Option Menu\n\n](https://github.com/victoryhb/streamlit-option-menu)\n\n[Select a single item from a list of options in a menu. Created by](https://github.com/victoryhb/streamlit-option-menu) [@victoryhb](https://github.com/victoryhb).\n\n`from streamlit_option_menu import option_menu option_menu(\"Main Menu\", [\"Home\", 'Settings'], icons=['house', 'gear'], menu_icon=\"cast\", default_index=1)`\n\n[![screenshot](/images/api/components/extras-toggle.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.stoggle import stoggle stoggle( \"Click me!\", \"\"\"🥷 Surprise! Here's some additional content\"\"\",)`\n\nNext\n\n### [](/develop/api-reference#media-elements)Media elements\n\n  \n\n[![screenshot](/images/api/image.jpg)\n\n#### Image\n\nDisplay an image or list of images.\n\n`st.image(numpy_array) st.image(image_bytes) st.image(file) st.image(\"https://example.com/myimage.jpg\")`\n\n\n\n](/develop/api-reference/media/st.image)[![screenshot](/images/api/logo.jpg)\n\n#### Logo\n\nDisplay a logo in the upper-left corner of your app and its sidebar.\n\n`st.logo(\"logo.jpg\")`\n\n\n\n](/develop/api-reference/media/st.logo)[![screenshot](/images/api/pdf.jpg)\n\n#### PDF\n\nDisplay a PDF file.\n\n`st.pdf(\"my_document.pdf\")`\n\n\n\n](/develop/api-reference/media/st.pdf)[![screenshot](/images/api/audio.jpg)\n\n#### Audio\n\nDisplay an audio player.\n\n`st.audio(numpy_array) st.audio(audio_bytes) st.audio(file) st.audio(\"https://example.com/myaudio.mp3\", format=\"audio/mp3\")`\n\n\n\n](/develop/api-reference/media/st.audio)[![screenshot](/images/api/video.jpg)\n\n#### Video\n\nDisplay a video player.\n\n`st.video(numpy_array) st.video(video_bytes) st.video(file) st.video(\"https://example.com/myvideo.mp4\", format=\"video/mp4\")`\n\n\n\n](/develop/api-reference/media/st.video)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\nPrevious\n\n[![screenshot](/images/api/components/cropper.jpg)\n\n#### Streamlit Cropper\n\n](https://github.com/turner-anderson/streamlit-cropper)\n\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/webrtc.jpg)\n\n#### Streamlit Webrtc\n\n](https://github.com/whitphx/streamlit-webrtc)\n\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/image-comparison.jpg)\n\n#### Image Comparison\n\n](https://github.com/fcakyon/streamlit-image-comparison)\n\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n\n[![screenshot](/images/api/components/cropper.jpg)\n\n#### Streamlit Cropper\n\n](https://github.com/turner-anderson/streamlit-cropper)\n\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\n[![screenshot](/images/api/components/webrtc.jpg)\n\n#### Streamlit Webrtc\n\n](https://github.com/whitphx/streamlit-webrtc)\n\n[Handling and transmitting real-time video/audio streams with Streamlit. Created by](https://github.com/whitphx/streamlit-webrtc) [@whitphx](https://github.com/whitphx).\n\n`from streamlit_webrtc import webrtc_streamer webrtc_streamer(key=\"sample\")`\n\n[![screenshot](/images/api/components/drawable-canvas.jpg)\n\n#### Drawable Canvas\n\n](https://github.com/andfanilo/streamlit-drawable-canvas)\n\n[Provides a sketching canvas using](https://github.com/andfanilo/streamlit-drawable-canvas) [Fabric.js](http://fabricjs.com/). Created by [@andfanilo](https://github.com/andfanilo).\n\n`from streamlit_drawable_canvas import st_canvas st_canvas(fill_color=\"rgba(255, 165, 0, 0.3)\", stroke_width=stroke_width, stroke_color=stroke_color, background_color=bg_color, background_image=Image.open(bg_image) if bg_image else None, update_streamlit=realtime_update, height=150, drawing_mode=drawing_mode, point_display_radius=point_display_radius if drawing_mode == 'point' else 0, key=\"canvas\",)`\n\n[![screenshot](/images/api/components/image-comparison.jpg)\n\n#### Image Comparison\n\n](https://github.com/fcakyon/streamlit-image-comparison)\n\n[Compare images with a slider using](https://github.com/fcakyon/streamlit-image-comparison) [JuxtaposeJS](https://juxtapose.knightlab.com/). Created by [@fcakyon](https://github.com/fcakyon).\n\n`from streamlit_image_comparison import image_comparison image_comparison(img1=\"image1.jpg\", img2=\"image2.jpg\",)`\n\n[![screenshot](/images/api/components/cropper.jpg)\n\n#### Streamlit Cropper\n\n](https://github.com/turner-anderson/streamlit-cropper)\n\n[A simple image cropper for Streamlit. Created by](https://github.com/turner-anderson/streamlit-cropper) [@turner-anderson](https://github.com/turner-anderson).\n\n`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio)`\n\n[![screenshot](/images/api/components/image-coordinates.jpg)\n\n#### Image Coordinates\n\n](https://github.com/blackary/streamlit-image-coordinates)\n\n[Get the coordinates of clicks on an image. Created by](https://github.com/blackary/streamlit-image-coordinates) [@blackary](https://github.com/blackary/).\n\n`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates(\"https://placekitten.com/200/300\")`\n\n[![screenshot](/images/api/components/lottie.jpg)\n\n#### Streamlit Lottie\n\n](https://github.com/andfanilo/streamlit-lottie)\n\n[Integrate](https://github.com/andfanilo/streamlit-lottie) [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).\n\n`lottie_hello = load_lottieurl(\"https://assets5.lottiefiles.com/packages/lf20_V9t630.json\") st_lottie(lottie_hello, key=\"hello\")`\n\nNext\n\n### [](/develop/api-reference#layouts-and-containers)Layouts and containers\n\n  \n\n[![screenshot](/images/api/columns.jpg)\n\n#### Columns\n\nInsert containers laid out as side-by-side columns.\n\n`col1, col2 = st.columns(2) col1.write(\"this is column 1\") col2.write(\"this is column 2\")`\n\n\n\n](/develop/api-reference/layout/st.columns)[![screenshot](/images/api/container.jpg)\n\n#### Container\n\nInsert a multi-element container.\n\n`c = st.container() st.write(\"This will show last\") c.write(\"This will show first\") c.write(\"This will show second\")`\n\n\n\n](/develop/api-reference/layout/st.container)[![screenshot](/images/api/dialog.jpg)\n\n#### Modal dialog\n\nInsert a modal dialog that can rerun independently from the rest of the script.\n\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n\n\n\n](/develop/api-reference/execution-flow/st.dialog)[![screenshot](/images/api/empty.jpg)\n\n#### Empty\n\nInsert a single-element container.\n\n`c = st.empty() st.write(\"This will show last\") c.write(\"This will be replaced\") c.write(\"This will show first\")`\n\n\n\n](/develop/api-reference/layout/st.empty)[![screenshot](/images/api/expander.jpg)\n\n#### Expander\n\nInsert a multi-element container that can be expanded/collapsed.\n\n`with st.expander(\"Open to see more\"): st.write(\"This is more content\")`\n\n\n\n](/develop/api-reference/layout/st.expander)[![screenshot](/images/api/popover.svg)\n\n#### Popover\n\nInsert a multi-element popover container that can be opened/closed.\n\n`with st.popover(\"Settings\"): st.checkbox(\"Show completed\")`\n\n\n\n](/develop/api-reference/layout/st.popover)[![screenshot](/images/api/sidebar.jpg)\n\n#### Sidebar\n\nDisplay items in a sidebar.\n\n`st.sidebar.write(\"This lives in the sidebar\") st.sidebar.button(\"Click me!\")`\n\n\n\n](/develop/api-reference/layout/st.sidebar)[![screenshot](/images/api/tabs.jpg)\n\n#### Tabs\n\nInsert containers separated into tabs.\n\n`tab1, tab2 = st.tabs([\"Tab 1\", \"Tab2\"]) tab1.write(\"this is tab 1\") tab2.write(\"this is tab 2\")`\n\n\n\n](/develop/api-reference/layout/st.tabs)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/elements.jpg)\n\n#### Streamlit Elements\n\n](https://github.com/okld/streamlit-elements)\n\n[Create a draggable and resizable dashboard in Streamlit. Created by](https://github.com/okld/streamlit-elements) [@okls](https://github.com/okls).\n\n`from streamlit_elements import elements, mui, html with elements(\"new_element\"): mui.Typography(\"Hello world\")`\n\n[![screenshot](/images/api/components/pydantic.jpg)\n\n#### Pydantic\n\n](https://github.com/lukasmasuch/streamlit-pydantic)\n\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n\n[![screenshot](/images/api/components/pages.jpg)\n\n#### Streamlit Pages\n\n](https://github.com/blackary/st_pages)\n\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n\n### [](/develop/api-reference#chat-elements)Chat elements\n\n  \n\nStreamlit provides a few commands to help you build conversational apps. These chat elements are designed to be used in conjunction with each other, but you can also use them separately.\n\n`st.chat_message` lets you insert a chat message container into the app so you can display messages from the user or the app. Chat containers can contain other Streamlit elements, including charts, tables, text, and more. `st.chat_input` lets you display a chat input widget so the user can type in a message.\n\n[![screenshot](/images/api/chat_input.jpg)\n\n#### Chat input\n\nDisplay a chat input widget.\n\n`prompt = st.chat_input(\"Say something\") if prompt: st.write(f\"The user has sent: {prompt}\")`\n\n\n\n](/develop/api-reference/chat/st.chat_input)[![screenshot](/images/api/chat_message.jpg)\n\n#### Chat message\n\nInsert a chat message container.\n\n`import numpy as np with st.chat_message(\"user\"): st.write(\"Hello 👋\") st.line_chart(np.random.randn(30, 3))`\n\n\n\n](/develop/api-reference/chat/st.chat_message)[![screenshot](/images/api/status.jpg)\n\n#### Status container\n\nDisplay output of long-running tasks in a container.\n\n`with st.status('Running'): do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.status)[\n\n#### st.write\\_stream\n\nWrite generators or streams to the app with a typewriter effect.\n\n`st.write_stream(my_generator) st.write_stream(my_llm_stream)`\n\n\n\n](/develop/api-reference/write-magic/st.write_stream)\n\n### [](/develop/api-reference#status-elements)Status elements\n\n  \n\n[![screenshot](/images/api/progress.jpg)\n\n#### Progress bar\n\nDisplay a progress bar.\n\n`for i in range(101): st.progress(i) do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.progress)[![screenshot](/images/api/spinner.jpg)\n\n#### Spinner\n\nTemporarily displays a message while executing a block of code.\n\n`with st.spinner(\"Please wait...\"): do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.spinner)[![screenshot](/images/api/status.jpg)\n\n#### Status container\n\nDisplay output of long-running tasks in a container.\n\n`with st.status('Running'): do_something_slow()`\n\n\n\n](/develop/api-reference/status/st.status)[![screenshot](/images/api/toast.jpg)\n\n#### Toast\n\nBriefly displays a toast message in the bottom-right corner.\n\n`st.toast('Butter!', icon='🧈')`\n\n\n\n](/develop/api-reference/status/st.toast)[![screenshot](/images/api/balloons.jpg)\n\n#### Balloons\n\nDisplay celebratory balloons!\n\n`do_something() # Celebrate when all done! st.balloons()`\n\n\n\n](/develop/api-reference/status/st.balloons)[![screenshot](/images/api/snow.jpg)\n\n#### Snowflakes\n\nDisplay celebratory snowflakes!\n\n`do_something() # Celebrate when all done! st.snow()`\n\n\n\n](/develop/api-reference/status/st.snow)[![screenshot](/images/api/success.jpg)\n\n#### Success box\n\nDisplay a success message.\n\n`st.success(\"Match found!\")`\n\n\n\n](/develop/api-reference/status/st.success)[![screenshot](/images/api/info.jpg)\n\n#### Info box\n\nDisplay an informational message.\n\n`st.info(\"Dataset is updated every day at midnight.\")`\n\n\n\n](/develop/api-reference/status/st.info)[![screenshot](/images/api/warning.jpg)\n\n#### Warning box\n\nDisplay warning message.\n\n`st.warning(\"Unable to fetch image. Skipping...\")`\n\n\n\n](/develop/api-reference/status/st.warning)[![screenshot](/images/api/error.jpg)\n\n#### Error box\n\nDisplay error message.\n\n`st.error(\"We encountered an error\")`\n\n\n\n](/develop/api-reference/status/st.error)[![screenshot](/images/api/exception.jpg)\n\n#### Exception output\n\nDisplay an exception.\n\n`e = RuntimeError(\"This is an exception of type RuntimeError\") st.exception(e)`\n\n\n\n](/develop/api-reference/status/st.exception)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/stqdm.jpg)\n\n#### Stqdm\n\n](https://github.com/Wirg/stqdm)\n\n[The simplest way to handle a progress bar in streamlit app. Created by](https://github.com/Wirg/stqdm) [@Wirg](https://github.com/Wirg).\n\n`from stqdm import stqdm for _ in stqdm(range(50)): sleep(0.5)`\n\n[![screenshot](/images/api/components/custom-notification-box.jpg)\n\n#### Custom notification box\n\n](https://github.com/Socvest/streamlit-custom-notification-box)\n\n[A custom notification box with the ability to close it out. Created by](https://github.com/Socvest/streamlit-custom-notification-box) [@Socvest](https://github.com/Socvest).\n\n`from streamlit_custom_notification_box import custom_notification_box styles = {'material-icons':{'color': 'red'}, 'text-icon-link-close-container': {'box-shadow': '#3896de 0px 4px'}, 'notification-text': {'':''}, 'close-button':{'':''}, 'link':{'':''}} custom_notification_box(icon='info', textDisplay='We are almost done with your registration...', externalLink='more info', url='#', styles=styles, key=\"foo\")`\n\n[![screenshot](/images/api/components/extras-emojis.jpg)\n\n#### Streamlit Extras\n\n](https://extras.streamlit.app/)\n\n[A library with useful Streamlit extras. Created by](https://extras.streamlit.app/) [@arnaudmiribel](https://github.com/arnaudmiribel/).\n\n`from streamlit_extras.let_it_rain import rain rain(emoji=\"🎈\", font_size=54, falling_speed=5, animation_length=\"infinite\",)`\n\n## [](/develop/api-reference#app-logic-and-configuration)App logic and configuration\n\n### [](/develop/api-reference#authentication-and-user-info)Authentication and user info\n\n  \n\n[\n\n#### Log in a user\n\n`st.login()` starts an authentication flow with an identity provider.\n\n`st.login()`\n\n\n\n](/develop/api-reference/user/st.login)[\n\n#### Log out a user\n\n`st.logout()` removes a user's identity information.\n\n`st.logout()`\n\n\n\n](/develop/api-reference/user/st.logout)[\n\n#### User info\n\n`st.user` returns information about a logged-in user.\n\n`if st.user.is_logged_in: st.write(f\"Welcome back, {st.user.name}!\")`\n\n\n\n](/develop/api-reference/user/st.user)\n\n### [](/develop/api-reference#navigation-and-pages)Navigation and pages\n\n  \n\n[![screenshot](/images/api/navigation.jpg)\n\n#### Navigation\n\nConfigure the available pages in a multipage app.\n\n`st.navigation({ \"Your account\" : [log_out, settings], \"Reports\" : [overview, usage], \"Tools\" : [search] })`\n\n\n\n](/develop/api-reference/navigation/st.navigation)[![screenshot](/images/api/page.jpg)\n\n#### Page\n\nDefine a page in a multipage app.\n\n`home = st.Page( \"home.py\", title=\"Home\", icon=\":material/home:\" )`\n\n\n\n](/develop/api-reference/navigation/st.page)[![screenshot](/images/api/page_link.jpg)\n\n#### Page link\n\nDisplay a link to another page in a multipage app.\n\n`st.page_link(\"app.py\", label=\"Home\", icon=\"🏠\") st.page_link(\"pages/profile.py\", label=\"My profile\")`\n\n\n\n](/develop/api-reference/widgets/st.page_link)[\n\n#### Switch page\n\nProgrammatically navigates to a specified page.\n\n`st.switch_page(\"pages/my_page.py\")`\n\n\n\n](/develop/api-reference/navigation/st.switch_page)\n\n### [](/develop/api-reference#execution-flow)Execution flow\n\n  \n\n[![screenshot](/images/api/dialog.jpg)\n\n#### Modal dialog\n\nInsert a modal dialog that can rerun independently from the rest of the script.\n\n`@st.dialog(\"Sign up\") def email_form(): name = st.text_input(\"Name\") email = st.text_input(\"Email\")`\n\n\n\n](/develop/api-reference/execution-flow/st.dialog)[\n\n#### Forms\n\nCreate a form that batches elements together with a “Submit\" button.\n\n`with st.form(key='my_form'): name = st.text_input(\"Name\") email = st.text_input(\"Email\") st.form_submit_button(\"Sign up\")`\n\n\n\n](/develop/api-reference/execution-flow/st.form)[\n\n#### Fragments\n\nDefine a fragment to rerun independently from the rest of the script.\n\n`@st.fragment(run_every=\"10s\") def fragment(): df = get_data() st.line_chart(df)`\n\n\n\n](/develop/api-reference/execution-flow/st.fragment)[\n\n#### Rerun script\n\nRerun the script immediately.\n\n`st.rerun()`\n\n\n\n](/develop/api-reference/execution-flow/st.rerun)[\n\n#### Stop execution\n\nStops execution immediately.\n\n`st.stop()`\n\n\n\n](/develop/api-reference/execution-flow/st.stop)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/autorefresh.jpg)\n\n#### Autorefresh\n\n](https://github.com/kmcgrady/streamlit-autorefresh)\n\n[Force a refresh without tying up a script. Created by](https://github.com/kmcgrady/streamlit-autorefresh) [@kmcgrady](https://github.com/kmcgrady).\n\n`from streamlit_autorefresh import st_autorefresh st_autorefresh(interval=2000, limit=100, key=\"fizzbuzzcounter\")`\n\n[![screenshot](/images/api/components/pydantic.jpg)\n\n#### Pydantic\n\n](https://github.com/lukasmasuch/streamlit-pydantic)\n\n[Auto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by](https://github.com/lukasmasuch/streamlit-pydantic) [@lukasmasuch](https://github.com/lukasmasuch).\n\n`import streamlit_pydantic as sp sp.pydantic_form(key=\"my_form\", model=ExampleModel)`\n\n[![screenshot](/images/api/components/pages.jpg)\n\n#### Streamlit Pages\n\n](https://github.com/blackary/st_pages)\n\n[An experimental version of Streamlit Multi-Page Apps. Created by](https://github.com/blackary/st_pages) [@blackary](https://github.com/blackary).\n\n`from st_pages import Page, show_pages, add_page_title show_pages([ Page(\"streamlit_app.py\", \"Home\", \"🏠\"), Page(\"other_pages/page2.py\", \"Page 2\", \":books:\"), ])`\n\n### [](/develop/api-reference#caching-and-state)Caching and state\n\n  \n\n[\n\n#### Cache data\n\nFunction decorator to cache functions that return data (e.g. dataframe transforms, database queries, ML inference).\n\n`@st.cache_data def long_function(param1, param2): # Perform expensive computation here or # fetch data from the web here return data`\n\n\n\n](/develop/api-reference/caching-and-state/st.cache_data)[\n\n#### Cache resource\n\nFunction decorator to cache functions that return global resources (e.g. database connections, ML models).\n\n`@st.cache_resource def init_model(): # Return a global resource here return pipeline( \"sentiment-analysis\", model=\"distilbert-base-uncased-finetuned-sst-2-english\" )`\n\n\n\n](/develop/api-reference/caching-and-state/st.cache_resource)[\n\n#### Session state\n\nSession state is a way to share variables between reruns, for each user session.\n\n`st.session_state['key'] = value`\n\n\n\n](/develop/api-reference/caching-and-state/st.session_state)[\n\n#### Query parameters\n\nGet, set, or clear the query parameters that are shown in the browser's URL bar.\n\n`st.query_params[key] = value st.query_params.clear()`\n\n\n\n](/develop/api-reference/caching-and-state/st.query_params)[\n\n#### Context\n\n`st.context` provides a read-only interface to access cookies, headers, locale, and other browser-session information.\n\n`st.context.cookies st.context.headers`\n\n\n\n](/develop/api-reference/caching-and-state/st.context)\n\n### [](/develop/api-reference#connections-and-databases)Connections and databases\n\n#### [](/develop/api-reference#setup-your-connection)Setup your connection\n\n[![screenshot](/images/api/connection.svg)\n\n#### Create a connection\n\nConnect to a data source or API\n\n`conn = st.connection('pets_db', type='sql') pet_owners = conn.query('select * from pet_owners') st.dataframe(pet_owners)`\n\n\n\n](/develop/api-reference/connections/st.connection)\n\n#### [](/develop/api-reference#built-in-connections)Built-in connections\n\n[![screenshot](/images/api/connections.SnowflakeConnection.svg)\n\n#### SnowflakeConnection\n\nA connection to Snowflake.\n\n`conn = st.connection('snowflake')`\n\n\n\n](/develop/api-reference/connections/st.connections.snowflakeconnection)[![screenshot](/images/api/connections.SQLConnection.svg)\n\n#### SQLConnection\n\nA connection to a SQL database using SQLAlchemy.\n\n`conn = st.connection('sql')`\n\n\n\n](/develop/api-reference/connections/st.connections.sqlconnection)\n\n#### [](/develop/api-reference#build-your-own-connections)Build your own connections\n\n[\n\n#### Connection base class\n\nBuild your own connection with `BaseConnection`.\n\n`class MyConnection(BaseConnection[myconn.MyConnection]): def _connect(self, **kwargs) -> MyConnection: return myconn.connect(**self._secrets, **kwargs) def query(self, query): return self._instance.query(query)`\n\n\n\n](/develop/api-reference/connections/st.connections.baseconnection)\n\n#### [](/develop/api-reference#secrets-management)Secrets management\n\n[\n\n#### Secrets singleton\n\nAccess secrets from a local TOML file.\n\n`key = st.secrets[\"OpenAI_key\"]`\n\n\n\n](/develop/api-reference/connections/st.secrets)[\n\n#### Secrets file\n\nSave your secrets in a per-project or per-profile TOML file.\n\n`OpenAI_key = \"<YOUR_SECRET_KEY>\"`\n\n\n\n](/develop/api-reference/connections/secrets.toml)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/authenticator.jpg)\n\n#### Authenticator\n\n](https://github.com/mkhorasani/Streamlit-Authenticator)\n\n[A secure authentication module to validate user credentials. Created by](https://github.com/mkhorasani/Streamlit-Authenticator) [@mkhorasani](https://github.com/mkhorasani).\n\n`import streamlit_authenticator as stauth authenticator = stauth.Authenticate( config['credentials'], config['cookie']['name'], config['cookie']['key'], config['cookie']['expiry_days'], config['preauthorized'])`\n\n[![screenshot](/images/api/components/localstorage.jpg)\n\n#### WS localStorage\n\n](https://github.com/gagangoku/streamlit-ws-localstorage)\n\n[A simple synchronous way of accessing localStorage from your app. Created by](https://github.com/gagangoku/streamlit-ws-localstorage) [@gagangoku](https://github.com/gagangoku).\n\n`from streamlit_ws_localstorage import injectWebsocketCode ret = conn.setLocalStorageVal(key='k1', val='v1') st.write('ret: ' + ret)`\n\n[![screenshot](/images/api/components/auth0.jpg)\n\n#### Streamlit Auth0\n\n](https://github.com/conradbez/streamlit-auth0)\n\n[The fastest way to provide comprehensive login inside Streamlit. Created by](https://github.com/conradbez/streamlit-auth0) [@conradbez](https://github.com/conradbez).\n\n`from auth0_component import login_button user_info = login_button(clientId, domain = domain) st.write(user_info)`\n\n### [](/develop/api-reference#custom-components)Custom Components\n\n  \n\n[\n\n#### Declare a component\n\nCreate and register a custom component.\n\n`from st.components.v1 import declare_component declare_component( \"custom_slider\", \"/frontend\", )`\n\n\n\n](/develop/api-reference/custom-components/st.components.v1.declare_component)[\n\n#### HTML\n\nDisplay an HTML string in an iframe.\n\n`from st.components.v1 import html html( \"<p>Foo bar.</p>\" )`\n\n\n\n](/develop/api-reference/custom-components/st.components.v1.html)[\n\n#### iframe\n\nLoad a remote URL in an iframe.\n\n`from st.components.v1 import iframe iframe( \"docs.streamlit.io\" )`\n\n\n\n](/develop/api-reference/custom-components/st.components.v1.iframe)\n\n### [](/develop/api-reference#configuration)Configuration\n\n  \n\n[\n\n#### Configuration file\n\nConfigures the default settings for your app.\n\n`your-project/ ├── .streamlit/ │ └── config.toml └── your_app.py`\n\n\n\n](/develop/api-reference/configuration/config.toml)[\n\n#### Get config option\n\nRetrieve a single configuration option.\n\n`st.get_option(\"theme.primaryColor\")`\n\n\n\n](/develop/api-reference/configuration/st.get_option)[\n\n#### Set config option\n\nSet a single configuration option. (This is very limited.)\n\n`st.set_option(\"deprecation.showPyplotGlobalUse\", False)`\n\n\n\n](/develop/api-reference/configuration/st.set_option)[\n\n#### Set page title, favicon, and more\n\nConfigures the default settings of the page.\n\n`st.set_page_config( page_title=\"My app\", page_icon=\":shark:\", )`\n\n\n\n](/develop/api-reference/configuration/st.set_page_config)\n\n## [](/develop/api-reference#developer-tools)Developer tools\n\n### [](/develop/api-reference#app-testing)App testing\n\n  \n\n[\n\n#### st.testing.v1.AppTest\n\n`st.testing.v1.AppTest` simulates a running Streamlit app for testing.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.secrets[\"WORD\"] = \"Foobar\" at.run() assert not at.exception at.text_input(\"word\").input(\"Bazbat\").run() assert at.warning[0].value == \"Try again.\"`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest)[\n\n#### AppTest.from\\_file\n\n`st.testing.v1.AppTest.from_file` initializes a simulated app from a file.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_file(\"streamlit_app.py\") at.run()`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_file)[\n\n#### AppTest.from\\_string\n\n`st.testing.v1.AppTest.from_string` initializes a simulated app from a string.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_string(app_script_as_string) at.run()`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_string)[\n\n#### AppTest.from\\_function\n\n`st.testing.v1.AppTest.from_function` initializes a simulated app from a function.\n\n`from streamlit.testing.v1 import AppTest at = AppTest.from_function(app_script_as_callable) at.run()`\n\n\n\n](/develop/api-reference/app-testing/st.testing.v1.apptest#apptestfrom_function)[\n\n#### Block\n\nA representation of container elements, including:\n\n*   `st.chat_message`\n*   `st.columns`\n*   `st.sidebar`\n*   `st.tabs`\n*   The main body of the app.\n\n`# at.sidebar returns a Block at.sidebar.button[0].click().run() assert not at.exception`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeblock)[\n\n#### Element\n\nThe base class for representation of all elements, including:\n\n*   `st.title`\n*   `st.header`\n*   `st.markdown`\n*   `st.dataframe`\n\n`# at.title returns a sequence of Title # Title inherits from Element assert at.title[0].value == \"My awesome app\"`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeelement)[\n\n#### Button\n\nA representation of `st.button` and `st.form_submit_button`.\n\n`at.button[0].click().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treebutton)[\n\n#### ChatInput\n\nA representation of `st.chat_input`.\n\n`at.chat_input[0].set_value(\"What is Streamlit?\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treechatinput)[\n\n#### Checkbox\n\nA representation of `st.checkbox`.\n\n`at.checkbox[0].check().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecheckbox)[\n\n#### ColorPicker\n\nA representation of `st.color_picker`.\n\n`at.color_picker[0].pick(\"#FF4B4B\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treecolorpicker)[\n\n#### DateInput\n\nA representation of `st.date_input`.\n\n`release_date = datetime.date(2023, 10, 26) at.date_input[0].set_value(release_date).run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treedateinput)[\n\n#### Multiselect\n\nA representation of `st.multiselect`.\n\n`at.multiselect[0].select(\"New York\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treemultiselect)[\n\n#### NumberInput\n\nA representation of `st.number_input`.\n\n`at.number_input[0].increment().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treenumberinput)[\n\n#### Radio\n\nA representation of `st.radio`.\n\n`at.radio[0].set_value(\"New York\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeradio)[\n\n#### SelectSlider\n\nA representation of `st.select_slider`.\n\n`at.select_slider[0].set_range(\"A\",\"C\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectslider)[\n\n#### Selectbox\n\nA representation of `st.selectbox`.\n\n`at.selectbox[0].select(\"New York\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeselectbox)[\n\n#### Slider\n\nA representation of `st.slider`.\n\n`at.slider[0].set_range(2,5).run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treeslider)[\n\n#### TextArea\n\nA representation of `st.text_area`.\n\n`at.text_area[0].input(\"Streamlit is awesome!\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextarea)[\n\n#### TextInput\n\nA representation of `st.text_input`.\n\n`at.text_input[0].input(\"Streamlit\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetextinput)[\n\n#### TimeInput\n\nA representation of `st.time_input`.\n\n`at.time_input[0].increment().run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetimeinput)[\n\n#### Toggle\n\nA representation of `st.toggle`.\n\n`at.toggle[0].set_value(\"True\").run()`\n\n\n\n](/develop/api-reference/app-testing/testing-element-classes#sttestingv1element_treetoggle)\n\nThird-party components\n\nThese are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!\n\n[![screenshot](/images/api/components/pandas-profiling.jpg)\n\n#### Pandas Profiling\n\n](https://github.com/okld/streamlit-pandas-profiling)\n\n[Pandas profiling component for Streamlit. Created by](https://github.com/okld/streamlit-pandas-profiling) [@okld](https://github.com/okld/).\n\n`df = pd.read_csv(\"https://storage.googleapis.com/tf-datasets/titanic/train.csv\") pr = df.profile_report() st_profile_report(pr)`\n\n[![screenshot](/images/api/components/ace.jpg)\n\n#### Streamlit Ace\n\n](https://github.com/okld/streamlit-ace)\n\n[Ace editor component for Streamlit. Created by](https://github.com/okld/streamlit-ace) [@okld](https://github.com/okld).\n\n`from streamlit_ace import st_ace content = st_ace() content`\n\n[![screenshot](/images/api/components/analytics.jpg)\n\n#### Streamlit Analytics\n\n](https://github.com/jrieke/streamlit-analytics)\n\n[Track & visualize user interactions with your streamlit app. Created by](https://github.com/jrieke/streamlit-analytics) [@jrieke](https://github.com/jrieke).\n\n`import streamlit_analytics with streamlit_analytics.track(): st.text_input(\"Write something\")`\n\n[_arrow\\_back_Previous: Concepts](/develop/concepts)[_arrow\\_forward_Next: Write and magic](/develop/api-reference/write-magic)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410901.632244
    },
    {
      "url": "https://docs.streamlit.io/deploy/concepts",
      "content": {
        "type": "html",
        "raw_length": 3111,
        "title": null,
        "text": "Deployment concepts - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_remove_\n*\n[Dependencies](/deploy/concepts/dependencies)\n*\n[Secrets](/deploy/concepts/secrets)\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Deploy](/deploy)/\n*\n[Concepts](/deploy/concepts)\n# [](/deploy/concepts#deployment-concepts)Deployment concepts\nLearn the fundamental concepts of app deployment. There are three main processes involved in deploying apps.\n*\nInstall Python, Streamlit, and other dependencies in your deployment environment.\n*\nSecurely handle your secrets and private information.\n*\nRemote start your app (`streamlit run`).\nIf you're using Streamlit Community Cloud, we'll do most of the work for you!\n[_build\\_circle_](/deploy/concepts/dependencies)\n[Dependencies.](/deploy/concepts/dependencies) Understand the basics of configuring your deployment environment.\n[_password_](/deploy/concepts/secrets)\n[Secrets.](/deploy/concepts/secrets) Understand the basics of secret management.\n[_arrow\\_back_Previous: Deploy](/deploy)[_arrow\\_forward_Next: Dependencies](/deploy/concepts/dependencies)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Deployment concepts - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _remove_\n        \n        *   [Dependencies](/deploy/concepts/dependencies)\n            \n        *   [Secrets](/deploy/concepts/secrets)\n            \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Deploy](/deploy)/\n*   [Concepts](/deploy/concepts)\n\n# [](/deploy/concepts#deployment-concepts)Deployment concepts\n\nLearn the fundamental concepts of app deployment. There are three main processes involved in deploying apps.\n\n*   Install Python, Streamlit, and other dependencies in your deployment environment.\n*   Securely handle your secrets and private information.\n*   Remote start your app (`streamlit run`).\n\nIf you're using Streamlit Community Cloud, we'll do most of the work for you!\n\n[_build\\_circle_](/deploy/concepts/dependencies)\n\n[Dependencies.](/deploy/concepts/dependencies) Understand the basics of configuring your deployment environment.\n\n[_password_](/deploy/concepts/secrets)\n\n[Secrets.](/deploy/concepts/secrets) Understand the basics of secret management.\n\n[_arrow\\_back_Previous: Deploy](/deploy)[_arrow\\_forward_Next: Dependencies](/deploy/concepts/dependencies)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410902.5953228
    },
    {
      "url": "https://docs.streamlit.io/get-started/fundamentals",
      "content": {
        "type": "html",
        "raw_length": 3659,
        "title": null,
        "text": "Fundamental concepts - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_remove_\n*\n[Basic concepts](/get-started/fundamentals/main-concepts)\n*\n[Advanced concepts](/get-started/fundamentals/advanced-concepts)\n*\n[Additional features](/get-started/fundamentals/additional-features)\n*\n[Summary](/get-started/fundamentals/summary)\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Get started](/get-started)/\n*\n[Fundamentals](/get-started/fundamentals)\n# [](/get-started/fundamentals#fundamental-concepts)Fundamental concepts\nAre you new to Streamlit and want the grand tour? If so, you're in the right place!\n[_description_](/get-started/fundamentals/main-concepts)\n[Basic concepts.](/get-started/fundamentals/main-concepts) Learn the fundamental concepts of Streamlit. How is a Streamlit app structured? How does it run? How does it magically get your data on a webpage?\n[_description_](/get-started/fundamentals/advanced-concepts)\n[Advanced concepts.](/get-started/fundamentals/advanced-concepts) After you understand the rerun logic of Streamlit, learn how to make efficient and dynamic apps with caching and Session State. Get introduced to handling database connections.\n[_description_](/get-started/fundamentals/additional-features)\n[Additional features.](/get-started/fundamentals/additional-features) Learn about Streamlit's additional features. You don't need to know these concepts for your first app, but check it out to know what's available.\n[_arrow\\_back_Previous: Installation](/get-started/installation)[_arrow\\_forward_Next: Basic concepts](/get-started/fundamentals/main-concepts)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Fundamental concepts - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _remove_\n        \n        *   [Basic concepts](/get-started/fundamentals/main-concepts)\n            \n        *   [Advanced concepts](/get-started/fundamentals/advanced-concepts)\n            \n        *   [Additional features](/get-started/fundamentals/additional-features)\n            \n        *   [Summary](/get-started/fundamentals/summary)\n            \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Get started](/get-started)/\n*   [Fundamentals](/get-started/fundamentals)\n\n# [](/get-started/fundamentals#fundamental-concepts)Fundamental concepts\n\nAre you new to Streamlit and want the grand tour? If so, you're in the right place!\n\n[_description_](/get-started/fundamentals/main-concepts)\n\n[Basic concepts.](/get-started/fundamentals/main-concepts) Learn the fundamental concepts of Streamlit. How is a Streamlit app structured? How does it run? How does it magically get your data on a webpage?\n\n[_description_](/get-started/fundamentals/advanced-concepts)\n\n[Advanced concepts.](/get-started/fundamentals/advanced-concepts) After you understand the rerun logic of Streamlit, learn how to make efficient and dynamic apps with caching and Session State. Get introduced to handling database connections.\n\n[_description_](/get-started/fundamentals/additional-features)\n\n[Additional features.](/get-started/fundamentals/additional-features) Learn about Streamlit's additional features. You don't need to know these concepts for your first app, but check it out to know what's available.\n\n[_arrow\\_back_Previous: Installation](/get-started/installation)[_arrow\\_forward_Next: Basic concepts](/get-started/fundamentals/main-concepts)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410902.7322826
    },
    {
      "url": "https://docs.streamlit.io/develop",
      "content": {
        "type": "html",
        "raw_length": 2973,
        "title": null,
        "text": "Develop - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)\n# [](/develop#develop)Develop\nGet all the information you need to build beautiful, performant web apps with Streamlit!\n[_book_](/develop/concepts)\n[Concepts.](/develop/concepts) Learn how Streamlit works with in-depth guides to our execution model and features.\n[_list_](/develop/api-reference)\n[API reference.](/develop/api-reference) Learn about our API with function definitions and examples.\n[_auto\\_awesome_](/develop/tutorials)\n[Tutorials.](/develop/tutorials) Follow step-by-step instructions to build example apps and useful snippets.\n[_bolt_](/develop/quick-reference)\n[Quick references.](/develop/quick-reference) Check out our quick references for easy access to convenient information like our changelog, cheat sheet, pre-release features, and roadmap.\n[_arrow\\_back_Previous: Get started](/get-started)[_arrow\\_forward_Next: Concepts](/develop/concepts)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Develop - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)\n\n# [](/develop#develop)Develop\n\nGet all the information you need to build beautiful, performant web apps with Streamlit!\n\n[_book_](/develop/concepts)\n\n[Concepts.](/develop/concepts) Learn how Streamlit works with in-depth guides to our execution model and features.\n\n[_list_](/develop/api-reference)\n\n[API reference.](/develop/api-reference) Learn about our API with function definitions and examples.\n\n[_auto\\_awesome_](/develop/tutorials)\n\n[Tutorials.](/develop/tutorials) Follow step-by-step instructions to build example apps and useful snippets.\n\n[_bolt_](/develop/quick-reference)\n\n[Quick references.](/develop/quick-reference) Check out our quick references for easy access to convenient information like our changelog, cheat sheet, pre-release features, and roadmap.\n\n[_arrow\\_back_Previous: Get started](/get-started)[_arrow\\_forward_Next: Concepts](/develop/concepts)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410902.9215708
    },
    {
      "url": "https://docs.streamlit.io/develop/api-reference/layout/st.tabs?utm_source=streamlit",
      "content": {
        "type": "html",
        "raw_length": 10077,
        "title": null,
        "text": "st.tabs - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_remove_\n*\nPAGE ELEMENTS\n* * *\n*\n[Write and magic](/develop/api-reference/write-magic)\n_add_\n*\n[Text elements](/develop/api-reference/text)\n_add_\n*\n[Data elements](/develop/api-reference/data)\n_add_\n*\n[Chart elements](/develop/api-reference/charts)\n_add_\n*\n[Input widgets](/develop/api-reference/widgets)\n_add_\n*\n[Media elements](/develop/api-reference/media)\n_add_\n*\n[Layouts and containers](/develop/api-reference/layout)\n_remove_\n*\n[st.columns](/develop/api-reference/layout/st.columns)\n*\n[st.container](/develop/api-reference/layout/st.container)\n*\n[st.dialog_link_](/develop/api-reference/execution-flow/st.dialog)\n*\n[st.empty](/develop/api-reference/layout/st.empty)\n*\n[st.expander](/develop/api-reference/layout/st.expander)\n*\n[st.form_link_](/develop/api-reference/execution-flow/st.form)\n*\n[st.popover](/develop/api-reference/layout/st.popover)\n*\n[st.sidebar](/develop/api-reference/layout/st.sidebar)\n*\n[st.tabs](/develop/api-reference/layout/st.tabs)\n*\n[Chat elements](/develop/api-reference/chat)\n_add_\n*\n[Status elements](/develop/api-reference/status)\n_add_\n*\n[Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n*\nAPPLICATION LOGIC\n* * *\n*\n[Authentication and user info](/develop/api-reference/user)\n_add_\n*\n[Navigation and pages](/develop/api-reference/navigation)\n_add_\n*\n[Execution flow](/develop/api-reference/execution-flow)\n_add_\n*\n[Caching and state](/develop/api-reference/caching-and-state)\n_add_\n*\n[Connections and secrets](/develop/api-reference/connections)\n_add_\n*\n[Custom components](/develop/api-reference/custom-components)\n_add_\n*\n[Configuration](/develop/api-reference/configuration)\n_add_\n*\nTOOLS\n* * *\n*\n[App testing](/develop/api-reference/app-testing)\n_add_\n*\n[Command line](/develop/api-reference/cli)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[API reference](/develop/api-reference)/\n*\n[Layouts and containers](/develop/api-reference/layout)/\n*\n[st.tabs](/develop/api-reference/layout/st.tabs)\n## [](#sttabs)st.tabs\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\nInsert containers separated into tabs.\nInserts a number of multi-element containers as tabs. Tabs are a navigational element that allows users to easily move between groups of related content.\nTo add elements to the returned containers, you can use the with notation (preferred) or just call methods directly on the returned object. See the examples below.\nNote\nAll content within every tab is computed and sent to the frontend, regardless of which tab is selected. Tabs do not currently support conditional rendering. If you have a slow-loading tab, consider using a widget like st.segmented\\_control to conditionally render content instead.\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/layouts.py#L556 \"View st.tabs source code on GitHub\")\nst.tabs(tabs, \\*, width=\"stretch\", default=None)\nParameters\ntabs (list of str)\nCreates a tab for each string in the list. The first tab is selected by default. The string is used as the name of the tab and can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height.\nUnsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., \"1\\\\. Not an ordered list\".\nSee the body parameter of [st.markdown](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.\nwidth (\"stretch\" or int)\nThe width of the tab container. This can be one of the following:\n*\n\"stretch\" (default): The width of the container matches the width of the parent container.\n*\nAn integer specifying the width in pixels: The container has a fixed width. If the specified width is greater than the width of the parent container, the width of the container matches the width of the parent container.\ndefault (str or None)\nThe default tab to select. If this is None (default), the first tab is selected. If this is a string, it must be one of the tab labels. If two tabs have the same label as default, the first one is selected.\nReturns\n(list of containers)\nA list of container objects.\n#### Examples\n**Example 1: Use context management**\nYou can use with notation to insert any element into a tab:\nimport streamlit as st\ntab1, tab2, tab3 = st.tabs(\\[\"Cat\", \"Dog\", \"Owl\"\\])\nwith tab1:\nst.header(\"A cat\")\nst.image(\"https://static.streamlit.io/examples/cat.jpg\", width=200)\nwith tab2:\nst.header(\"A dog\")\nst.image(\"https://static.streamlit.io/examples/dog.jpg\", width=200)\nwith tab3:\nst.header(\"An owl\")\nst.image(\"https://static.streamlit.io/examples/owl.jpg\", width=200)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-tabs1.streamlit.app//?utm_medium=oembed&)\n**Example 2: Call methods directly**\nYou can call methods directly on the returned objects:\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\ndf = rng(0).standard\\_normal((10, 1))\ntab1, tab2 = st.tabs(\\[\"📈 Chart\", \"🗃 Data\"\\])\ntab1.subheader(\"A tab with a chart\")\ntab1.line\\_chart(df)\ntab2.subheader(\"A tab with the data\")\ntab2.write(df)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-tabs2.streamlit.app//?utm_medium=oembed&)\n**Example 3: Set the default tab and style the tab labels**\nUse the default parameter to set the default tab. You can also use Markdown in the tab labels.\nimport streamlit as st\ntab1, tab2, tab3 = st.tabs(\n\\[\":cat: Cat\", \":dog: Dog\", \":rainbow\\[Owl\\]\"\\], default=\":rainbow\\[Owl\\]\"\n)\nwith tab1:\nst.header(\"A cat\")\nst.image(\"https://static.streamlit.io/examples/cat.jpg\", width=200)\nwith tab2:\nst.header(\"A dog\")\nst.image(\"https://static.streamlit.io/examples/dog.jpg\", width=200)\nwith tab3:\nst.header(\"An owl\")\nst.image(\"https://static.streamlit.io/examples/owl.jpg\", width=200)\n[Built with Streamlit 🎈](https://streamlit.io)\n[Fullscreen _open\\_in\\_new_](https://doc-tabs3.streamlit.app//?utm_medium=oembed&)\n[_arrow\\_back_Previous: st.sidebar](/develop/api-reference/layout/st.sidebar)[_arrow\\_forward_Next: Chat elements](/develop/api-reference/chat)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_fo"
      },
      "raw_result": "st.tabs - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _remove_\n        \n        *   PAGE ELEMENTS\n            \n            * * *\n            \n        *   [Write and magic](/develop/api-reference/write-magic)\n            \n            _add_\n            \n        *   [Text elements](/develop/api-reference/text)\n            \n            _add_\n            \n        *   [Data elements](/develop/api-reference/data)\n            \n            _add_\n            \n        *   [Chart elements](/develop/api-reference/charts)\n            \n            _add_\n            \n        *   [Input widgets](/develop/api-reference/widgets)\n            \n            _add_\n            \n        *   [Media elements](/develop/api-reference/media)\n            \n            _add_\n            \n        *   [Layouts and containers](/develop/api-reference/layout)\n            \n            _remove_\n            \n            *   [st.columns](/develop/api-reference/layout/st.columns)\n                \n            *   [st.container](/develop/api-reference/layout/st.container)\n                \n            *   [st.dialog_link_](/develop/api-reference/execution-flow/st.dialog)\n                \n            *   [st.empty](/develop/api-reference/layout/st.empty)\n                \n            *   [st.expander](/develop/api-reference/layout/st.expander)\n                \n            *   [st.form_link_](/develop/api-reference/execution-flow/st.form)\n                \n            *   [st.popover](/develop/api-reference/layout/st.popover)\n                \n            *   [st.sidebar](/develop/api-reference/layout/st.sidebar)\n                \n            *   [st.tabs](/develop/api-reference/layout/st.tabs)\n                \n        *   [Chat elements](/develop/api-reference/chat)\n            \n            _add_\n            \n        *   [Status elements](/develop/api-reference/status)\n            \n            _add_\n            \n        *   [Third-party components_open\\_in\\_new_](https://streamlit.io/components)\n            \n        *   APPLICATION LOGIC\n            \n            * * *\n            \n        *   [Authentication and user info](/develop/api-reference/user)\n            \n            _add_\n            \n        *   [Navigation and pages](/develop/api-reference/navigation)\n            \n            _add_\n            \n        *   [Execution flow](/develop/api-reference/execution-flow)\n            \n            _add_\n            \n        *   [Caching and state](/develop/api-reference/caching-and-state)\n            \n            _add_\n            \n        *   [Connections and secrets](/develop/api-reference/connections)\n            \n            _add_\n            \n        *   [Custom components](/develop/api-reference/custom-components)\n            \n            _add_\n            \n        *   [Configuration](/develop/api-reference/configuration)\n            \n            _add_\n            \n        *   TOOLS\n            \n            * * *\n            \n        *   [App testing](/develop/api-reference/app-testing)\n            \n            _add_\n            \n        *   [Command line](/develop/api-reference/cli)\n            \n            _add_\n            \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [API reference](/develop/api-reference)/\n*   [Layouts and containers](/develop/api-reference/layout)/\n*   [st.tabs](/develop/api-reference/layout/st.tabs)\n\n## [](#sttabs)st.tabs\n\nStreamlit VersionVersion 1.50.0Version 1.49.0Version 1.48.0Version 1.47.0Version 1.46.0Version 1.45.0Version 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0\n\nInsert containers separated into tabs.\n\nInserts a number of multi-element containers as tabs. Tabs are a navigational element that allows users to easily move between groups of related content.\n\nTo add elements to the returned containers, you can use the with notation (preferred) or just call methods directly on the returned object. See the examples below.\n\nNote\n\nAll content within every tab is computed and sent to the frontend, regardless of which tab is selected. Tabs do not currently support conditional rendering. If you have a slow-loading tab, consider using a widget like st.segmented\\_control to conditionally render content instead.\n\nFunction signature[\\[source\\]](https://github.com/streamlit/streamlit/blob/1.50.0/lib/streamlit/elements/layouts.py#L556 \"View st.tabs source code on GitHub\")\n\nst.tabs(tabs, \\*, width=\"stretch\", default=None)\n\nParameters\n\ntabs (list of str)\n\nCreates a tab for each string in the list. The first tab is selected by default. The string is used as the name of the tab and can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height.\n\nUnsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., \"1\\\\. Not an ordered list\".\n\nSee the body parameter of [st.markdown](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.\n\nwidth (\"stretch\" or int)\n\nThe width of the tab container. This can be one of the following:\n\n*   \"stretch\" (default): The width of the container matches the width of the parent container.\n*   An integer specifying the width in pixels: The container has a fixed width. If the specified width is greater than the width of the parent container, the width of the container matches the width of the parent container.\n\ndefault (str or None)\n\nThe default tab to select. If this is None (default), the first tab is selected. If this is a string, it must be one of the tab labels. If two tabs have the same label as default, the first one is selected.\n\nReturns\n\n(list of containers)\n\nA list of container objects.\n\n#### Examples\n\n**Example 1: Use context management**\n\nYou can use with notation to insert any element into a tab:\n\nimport streamlit as st\n\ntab1, tab2, tab3 = st.tabs(\\[\"Cat\", \"Dog\", \"Owl\"\\])\n\nwith tab1:\n    st.header(\"A cat\")\n    st.image(\"https://static.streamlit.io/examples/cat.jpg\", width=200)\nwith tab2:\n    st.header(\"A dog\")\n    st.image(\"https://static.streamlit.io/examples/dog.jpg\", width=200)\nwith tab3:\n    st.header(\"An owl\")\n    st.image(\"https://static.streamlit.io/examples/owl.jpg\", width=200)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-tabs1.streamlit.app//?utm_medium=oembed&)\n\n**Example 2: Call methods directly**\n\nYou can call methods directly on the returned objects:\n\nimport streamlit as st\nfrom numpy.random import default\\_rng as rng\n\ndf = rng(0).standard\\_normal((10, 1))\n\ntab1, tab2 = st.tabs(\\[\"📈 Chart\", \"🗃 Data\"\\])\n\ntab1.subheader(\"A tab with a chart\")\ntab1.line\\_chart(df)\n\ntab2.subheader(\"A tab with the data\")\ntab2.write(df)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-tabs2.streamlit.app//?utm_medium=oembed&)\n\n**Example 3: Set the default tab and style the tab labels**\n\nUse the default parameter to set the default tab. You can also use Markdown in the tab labels.\n\nimport streamlit as st\n\ntab1, tab2, tab3 = st.tabs(\n    \\[\":cat: Cat\", \":dog: Dog\", \":rainbow\\[Owl\\]\"\\], default=\":rainbow\\[Owl\\]\"\n)\n\nwith tab1:\n    st.header(\"A cat\")\n    st.image(\"https://static.streamlit.io/examples/cat.jpg\", width=200)\nwith tab2:\n    st.header(\"A dog\")\n    st.image(\"https://static.streamlit.io/examples/dog.jpg\", width=200)\nwith tab3:\n    st.header(\"An owl\")\n    st.image(\"https://static.streamlit.io/examples/owl.jpg\", width=200)\n\n[Built with Streamlit 🎈](https://streamlit.io)\n\n[Fullscreen _open\\_in\\_new_](https://doc-tabs3.streamlit.app//?utm_medium=oembed&)\n\n[_arrow\\_back_Previous: st.sidebar](/develop/api-reference/layout/st.sidebar)[_arrow\\_forward_Next: Chat elements](/develop/api-reference/chat)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_fo",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410903.1278653
    },
    {
      "url": "https://docs.streamlit.io",
      "content": {
        "type": "html",
        "raw_length": 6052,
        "title": null,
        "text": "Streamlit documentation\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n# [](#Streamlit-documentation)Streamlit documentation\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n[_install\\_desktop_\n#### Setup and installation\nGet set up to start working with Streamlit.\n](/get-started/installation)\n[_dvr_\n#### API reference\nLearn about our APIs, with actionable explanations of specific functions and features.\n](/develop/api-reference)\n[_grid\\_view_\n#### App gallery\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n](https://streamlit.io/gallery)\n## [](#How-to-use-our-docs)How to use our docs\n[_rocket\\_launch_](/get-started)\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n[_description_](/develop)\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n[_cloud_](/deploy)\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n[_school_](/knowledge-base)\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n## What's new\n[_view\\_column_\n#### Multiselect columns\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n#### Color palette\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n#### Bar chart sorting\nYou can sort the bars in `st.bar_chart`.\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n#### Default tab\nYou can specify the default tab in `st.tabs`.\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n#### Chart column colors\nYou can set the color of chart columns.\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n#### Audio sample rate\nYou can configure the sample rate of audio in `st.audio_input`.\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n## Latest blog posts\n[View all updates](https://blog.streamlit.io/)\n## Join the community\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n[View forum](https://discuss.streamlit.io)\n![](/join.png)\n## Other Media\n*\n[\n##### GitHub\nView the Streamlit source code and issue tracker.\n](https://github.com/streamlit)\n*\n[\n##### YouTube\nWatch screencasts made by the Streamlit team and the community.\n](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*\n[\n##### Twitter\nFollow @streamlit on Twitter to keep up with the latest news.\n](https://twitter.com/streamlit)\n*\n[\n##### LinkedIn\nFollow @streamlit on the world's largest professional network.\n](https://www.linkedin.com/company/streamlit)\n*\n[\n##### Newsletter\nSign up for communications from Streamlit.\n](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n[_arrow\\_forward_Next: Get started](/get-started)\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask"
      },
      "raw_result": "Streamlit documentation\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _add_\n        \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n# [](#Streamlit-documentation)Streamlit documentation\n\n[Streamlit](https://www.streamlit.io) is an open-source Python framework for data scientists and AI/ML engineers to deliver dynamic data apps with only a few lines of code. Build and deploy powerful data apps in minutes. Let's get started!\n\n[_install\\_desktop_\n\n#### Setup and installation\n\nGet set up to start working with Streamlit.\n\n\n\n](/get-started/installation)\n\n[_dvr_\n\n#### API reference\n\nLearn about our APIs, with actionable explanations of specific functions and features.\n\n\n\n](/develop/api-reference)\n\n[_grid\\_view_\n\n#### App gallery\n\nTry out awesome apps created by our users, and curated from our forums or Twitter.\n\n\n\n](https://streamlit.io/gallery)\n\n## [](#How-to-use-our-docs)How to use our docs\n\n[_rocket\\_launch_](/get-started)\n\n[Get started](/get-started) with Streamlit! Set up your development environment and learn the fundamental concepts, and start coding!\n\n[_description_](/develop)\n\n[Develop](/develop) your Streamlit app! Our API reference explains each Streamlit function with examples. Dive deep into all of our features with conceptual guides. Try out our step-by-step tutorials.\n\n[_cloud_](/deploy)\n\n[Deploy](/deploy) your Streamlit app! Streamlit Community Cloud our free platform for deploying and sharing Streamlit apps. Streamlit in Snowflake is an enterprise-class solution where you can house your data and apps in one, unified, global system. Explore all your options!\n\n[_school_](/knowledge-base)\n\n[Knowledge base](/knowledge-base) is a self-serve library of tips, tricks, and articles that answer your questions about creating and deploying Streamlit apps.\n\n## What's new\n\n[_view\\_column_\n\n#### Multiselect columns\n\nYou can configure colorful multiselect columns with `st.column_config.MultiselectColumn`.\n\n](/develop/api-reference/data/st.column_config/st.column_config.multiselectcolumn?utm_source=streamlit)[_palette_\n\n#### Color palette\n\nYou can configure a color palette (red, orange, yellow, green, blue, violet, and gray/grey) that is shared across elements.\n\n](/develop/concepts/configuration/theming-customize-colors-and-borders?utm_source=streamlit#basic-color-palette)[_bar\\_chart_\n\n#### Bar chart sorting\n\nYou can sort the bars in `st.bar_chart`.\n\n](/develop/api-reference/charts/st.bar_chart?utm_source=streamlit)[_tab_\n\n#### Default tab\n\nYou can specify the default tab in `st.tabs`.\n\n](/develop/api-reference/layout/st.tabs?utm_source=streamlit)[_format\\_paint_\n\n#### Chart column colors\n\nYou can set the color of chart columns.\n\n](/develop/api-reference/data/st.column_config/st.column_config.areachartcolumn?utm_source=streamlit)[_mic_\n\n#### Audio sample rate\n\nYou can configure the sample rate of audio in `st.audio_input`.\n\n](/develop/api-reference/widgets/st.audio_input?utm_source=streamlit)\n\n## Latest blog posts\n\n[View all updates](https://blog.streamlit.io/)\n\n## Join the community\n\nStreamlit is more than just a way to make data apps, it's also a community of creators that share their apps and ideas and help each other make their work better. Please come join us on the community forum. We love to hear your questions, ideas, and help you work through your bugs — stop by today!\n\n[View forum](https://discuss.streamlit.io)\n\n![](/join.png)\n\n## Other Media\n\n*   [\n    \n    ##### GitHub\n    \n    View the Streamlit source code and issue tracker.\n    \n    \n    \n    ](https://github.com/streamlit)\n*   [\n    \n    ##### YouTube\n    \n    Watch screencasts made by the Streamlit team and the community.\n    \n    \n    \n    ](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q)\n*   [\n    \n    ##### Twitter\n    \n    Follow @streamlit on Twitter to keep up with the latest news.\n    \n    \n    \n    ](https://twitter.com/streamlit)\n*   [\n    \n    ##### LinkedIn\n    \n    Follow @streamlit on the world's largest professional network.\n    \n    \n    \n    ](https://www.linkedin.com/company/streamlit)\n*   [\n    \n    ##### Newsletter\n    \n    Sign up for communications from Streamlit.\n    \n    \n    \n    ](https://info.snowflake.com/streamlit-newsletter-sign-up.html)\n\n[_arrow\\_forward_Next: Get started](/get-started)\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410903.5312932
    },
    {
      "url": "https://docs.streamlit.io/develop/tutorials",
      "content": {
        "type": "html",
        "raw_length": 4248,
        "title": null,
        "text": "Tutorials - Streamlit Docs\n[![](/logo.svg)\n#### Documentation\n](/)\n_search_\nSearch\n*\n[\n_rocket\\_launch_\nGet started\n](/get-started)\n*\n[Installation](/get-started/installation)\n_add_\n*\n[Fundamentals](/get-started/fundamentals)\n_add_\n*\n[First steps](/get-started/tutorials)\n_add_\n*\n[\n_code_\nDevelop\n](/develop)\n*\n[Concepts](/develop/concepts)\n_add_\n*\n[API reference](/develop/api-reference)\n_add_\n*\n[Tutorials](/develop/tutorials)\n_remove_\n*\n[Authentication and personalization](/develop/tutorials/authentication)\n_add_\n*\n[Chat and LLM apps](/develop/tutorials/chat-and-llm-apps)\n_add_\n*\n[Configuration and theming](/develop/tutorials/configuration-and-theming)\n_add_\n*\n[Connect to data sources](/develop/tutorials/databases)\n_add_\n*\n[Elements](/develop/tutorials/elements)\n_add_\n*\n[Execution flow](/develop/tutorials/execution-flow)\n_add_\n*\n[Multipage apps](/develop/tutorials/multipage)\n_add_\n*\n[Quick reference](/develop/quick-reference)\n_add_\n*\n[\n_web\\_asset_\nDeploy\n](/deploy)\n*\n[Concepts](/deploy/concepts)\n_add_\n*\n[Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n_add_\n*\n[Snowflake](/deploy/snowflake)\n*\n[Other platforms](/deploy/tutorials)\n_add_\n*\n[\n_school_\nKnowledge base\n](/knowledge-base)\n*\n[FAQ](/knowledge-base/using-streamlit)\n*\n[Installing dependencies](/knowledge-base/dependencies)\n*\n[Deployment issues](/knowledge-base/deploy)\n*\n[Home](/)/\n*\n[Develop](/develop)/\n*\n[Tutorials](/develop/tutorials)\n# [](/develop/tutorials#tutorials)Tutorials\nOur tutorials include step-by-step examples of building different types of apps in Streamlit.\n[\n##### Add user authentication\nAdd user authentication with Streamlit's built-in support for OpenID Connect.\n](/develop/tutorials/authentication)[\n##### Chat apps and LLMs\nWork with LLMs and create chat apps.\n](/develop/tutorials/chat-and-llm-apps)[\n##### Configuration and theming\nCustomize the appearance of your app.\n](/develop/tutorials/configuration-and-theming)[\n##### Connect to data sources\nConnect to popular datasources.\n](/develop/tutorials/databases)[\n##### Work with Streamlit's core elements\nWork with core elements like dataframes and charts.\n](/develop/tutorials/elements)[\n##### Use core features to work with Streamlit's execution model\nBuild simple apps and walk through examples to learn about Streamlit's core features and execution model.\n](/develop/tutorials/execution-flow)[\n##### Create multipage apps\nCreate multipage apps, navigation, and flows.\n](/develop/tutorials/multipage)\nWhen you're done developing your app, see our [deployment tutorials](/deploy/tutorials), too!\n[_arrow\\_back_Previous: API reference](/develop/api-reference)[_arrow\\_forward_Next: Authentication and personalization](/develop/tutorials/authentication)\n_forum_\n### Still have questions?\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n* * *\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n© 2025 Snowflake Inc.Cookie policy\n_forum_ Ask A"
      },
      "raw_result": "Tutorials - Streamlit Docs\n\n[![](/logo.svg)\n\n#### Documentation\n\n](/)\n\n_search_\n\nSearch\n\n*   [\n    \n    _rocket\\_launch_\n    \n    Get started\n    \n    \n    \n    ](/get-started)\n    *   [Installation](/get-started/installation)\n        \n        _add_\n        \n    *   [Fundamentals](/get-started/fundamentals)\n        \n        _add_\n        \n    *   [First steps](/get-started/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _code_\n    \n    Develop\n    \n    \n    \n    ](/develop)\n    *   [Concepts](/develop/concepts)\n        \n        _add_\n        \n    *   [API reference](/develop/api-reference)\n        \n        _add_\n        \n    *   [Tutorials](/develop/tutorials)\n        \n        _remove_\n        \n        *   [Authentication and personalization](/develop/tutorials/authentication)\n            \n            _add_\n            \n        *   [Chat and LLM apps](/develop/tutorials/chat-and-llm-apps)\n            \n            _add_\n            \n        *   [Configuration and theming](/develop/tutorials/configuration-and-theming)\n            \n            _add_\n            \n        *   [Connect to data sources](/develop/tutorials/databases)\n            \n            _add_\n            \n        *   [Elements](/develop/tutorials/elements)\n            \n            _add_\n            \n        *   [Execution flow](/develop/tutorials/execution-flow)\n            \n            _add_\n            \n        *   [Multipage apps](/develop/tutorials/multipage)\n            \n            _add_\n            \n    *   [Quick reference](/develop/quick-reference)\n        \n        _add_\n        \n*   [\n    \n    _web\\_asset_\n    \n    Deploy\n    \n    \n    \n    ](/deploy)\n    *   [Concepts](/deploy/concepts)\n        \n        _add_\n        \n    *   [Streamlit Community Cloud](/deploy/streamlit-community-cloud)\n        \n        _add_\n        \n    *   [Snowflake](/deploy/snowflake)\n        \n    *   [Other platforms](/deploy/tutorials)\n        \n        _add_\n        \n*   [\n    \n    _school_\n    \n    Knowledge base\n    \n    \n    \n    ](/knowledge-base)\n    *   [FAQ](/knowledge-base/using-streamlit)\n        \n    *   [Installing dependencies](/knowledge-base/dependencies)\n        \n    *   [Deployment issues](/knowledge-base/deploy)\n        \n\n*   [Home](/)/\n*   [Develop](/develop)/\n*   [Tutorials](/develop/tutorials)\n\n# [](/develop/tutorials#tutorials)Tutorials\n\nOur tutorials include step-by-step examples of building different types of apps in Streamlit.\n\n[\n\n##### Add user authentication\n\nAdd user authentication with Streamlit's built-in support for OpenID Connect.\n\n](/develop/tutorials/authentication)[\n\n##### Chat apps and LLMs\n\nWork with LLMs and create chat apps.\n\n](/develop/tutorials/chat-and-llm-apps)[\n\n##### Configuration and theming\n\nCustomize the appearance of your app.\n\n](/develop/tutorials/configuration-and-theming)[\n\n##### Connect to data sources\n\nConnect to popular datasources.\n\n](/develop/tutorials/databases)[\n\n##### Work with Streamlit's core elements\n\nWork with core elements like dataframes and charts.\n\n](/develop/tutorials/elements)[\n\n##### Use core features to work with Streamlit's execution model\n\nBuild simple apps and walk through examples to learn about Streamlit's core features and execution model.\n\n](/develop/tutorials/execution-flow)[\n\n##### Create multipage apps\n\nCreate multipage apps, navigation, and flows.\n\n](/develop/tutorials/multipage)\n\nWhen you're done developing your app, see our [deployment tutorials](/deploy/tutorials), too!\n\n[_arrow\\_back_Previous: API reference](/develop/api-reference)[_arrow\\_forward_Next: Authentication and personalization](/develop/tutorials/authentication)\n\n_forum_\n\n### Still have questions?\n\nOur [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.\n\n* * *\n\n[Home](/)[Contact Us](mailto:hello@streamlit.io?subject=Contact%20from%20documentation%20)[Community](https://discuss.streamlit.io)\n\n[](https://github.com/streamlit \"GitHub\")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q \"YouTube\")[](https://twitter.com/streamlit \"Twitter\")[](https://www.linkedin.com/company/streamlit \"LinkedIn\")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html \"Newsletter\")\n\n© 2025 Snowflake Inc.Cookie policy\n\n_forum_ Ask A",
      "status": "success",
      "content_length": 4,
      "timestamp": 1761410903.5344088
    }
  ]
}